<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.ping.PingMainOrderMapper">
    <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.ping.PingMainOrder">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <id column="p_id" jdbcType="INTEGER" property="pId"/>
        <id column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <id column="group_time" jdbcType="TIMESTAMP" property="groupTime"/>
        <id column="pack_time" jdbcType="TIMESTAMP" property="packTime"/>
        <id column="pack_type" jdbcType="INTEGER" property="packType"/>
        <id column="status" jdbcType="INTEGER" property="status"/>
        <id column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <id column="create_id" jdbcType="INTEGER" property="createId"/>
        <id column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <id column="last_update_id" jdbcType="INTEGER" property="lastUpdateId"/>
        <id column="pick_time" jdbcType="TIMESTAMP" property="pickTime"/>
        <id column="picker" jdbcType="VARCHAR" property="picker"/>
        <id column="is_picked" jdbcType="INTEGER" property="isPicked"/>
        <id column="auctual_price" jdbcType="DECIMAL" property="auctualPrice"/>
        <id column="discount" jdbcType="DECIMAL" property="discount"/>
        <id column="pre_qouted_price" jdbcType="DECIMAL" property="preQoutedPrice"/>
        <id column="inside_message" jdbcType="VARCHAR" property="insideMessage"/>
        <id column="accepted" jdbcType="INTEGER" property="accepted"/>
        <id column="accepted_time" jdbcType="TIMESTAMP" property="acceptedTime"/>
        <id column="accepter" jdbcType="VARCHAR" property="accepter"/>
        <id column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <id column="is_paid" jdbcType="INTEGER" property="isPaid"/>
        <id column="is_printed" jdbcType="INTEGER" property="isPrinted"/>
        <id column="address_id" jdbcType="INTEGER" property="addressId"/>
        <id column="settlement_weight" jdbcType="DOUBLE" property="settlementWeight"/>
        <id column="settlement_vol" jdbcType="DOUBLE" property="settlementVol"/>
        <id column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <id column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
        <id column="agent_number" jdbcType="VARCHAR" property="agentNumber"/>
        <id column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
        <id column="route_id" jdbcType="INTEGER" property="routeId"/>
        <id column="goods_number" jdbcType="INTEGER" property="goodsNumber"/>

        <result column="incidental" jdbcType="DECIMAL" property="incidental"/>
        <result column="actual_weight" jdbcType="DOUBLE" property="actualWeight"/>
        <result column="actual_vol" jdbcType="DOUBLE" property="actualVol"/>
    </resultMap>

    <!-- 字段 -->
    <sql id="Base_Column_List">
		id, p_id, customer_id, group_time, pack_time, pack_type, status,
		create_time, create_id, last_update_time, last_update_id, pick_time,
		picker, is_picked, auctual_price, discount, pre_qouted_price,
		inside_message, accepted, accepted_time, accepter, pay_time, is_paid,
		is_printed, address_id, settlement_weight, settlement_vol, remarks, order_number,
		agent_number, is_sensitive, route_id, goods_number, incidental, actual_weight, actual_vol
	</sql>

    <!-- 插入字段实际数值 -->
    <sql id="Insert_Column_Values">
		#{id}, #{pId}, #{customerId}, #{groupTime}, #{packTime}, #{packType}, #{status},
		#{createTime}, #{createId}, #{lastUpdateTime}, #{lastUpdateId}, #{pickTime},
		#{picker}, #{isPicked}, #{auctualPrice}, #{discount}, #{preQoutedPrice},
		#{insideMessage}, #{accepted} ,#{acceptedTime}, #{accepter}, #{payTime}, #{isPaid},
		#{isPrinted}, #{addressId}, #{settlementWeight}, #{settlementVol}, #{remarks}, #{orderNumber},
		#{agentNumber}, #{isSensitive}, #{routeId}, #{goodsNumber},
		#{incidental}, #{actualWeight}, #{actualVol}
	</sql>

    <!-- 插入字段（判空） -->
    <sql id="Base_Column_List_NotNull">
        <if test="id != null and id != ''">
            id,
        </if>
        <if test="pId != null and pId != ''">
            p_id,
        </if>
        <if test="customerId != null and customerId != ''">
            customer_id,
        </if>
        <if test="groupTime != null">
            group_time,
        </if>
        <if test="packTime != null">
            pack_time,
        </if>
        <if test="packType != null and packType != ''">
            pack_type,
        </if>
        <if test="status != null and status != ''">
            status,
        </if>
        <if test="createTime != null">
            create_time,
        </if>
        <if test="createId != null and createId != ''">
            create_id,
        </if>
        <if test="lastUpdateTime != null">
            last_update_time,
        </if>
        <if test="lastUpdateId != null and lastUpdateId != ''">
            last_update_id,
        </if>
        <if test="pickTime != null">
            pick_time,
        </if>
        <if test="picker != null and picker != ''">
            picker,
        </if>
        <if test="isPicked != null and isPicked != ''">
            is_picked,
        </if>
        <if test="auctualPrice != null and auctualPrice != ''">
            auctual_price,
        </if>
        <if test="discount != null and discount != ''">
            discount,
        </if>
        <if test="preQoutedPrice != null and preQoutedPrice != ''">
            pre_qouted_price,
        </if>
        <if test="insideMessage != null and insideMessage != ''">
            inside_message,
        </if>
        <if test="accepted != null and accepted != ''">
            accepted,
        </if>
        <if test="acceptedTime != null">
            accepted_time,
        </if>
        <if test="accepter != null and accepter != ''">
            accepter,
        </if>
        <if test="payTime != null">
            pay_time,
        </if>
        <if test="isPaid != null and isPaid != ''">
            is_paid,
        </if>
        <if test="isPrinted != null and isPrinted != ''">
            is_printed,
        </if>
        <if test="addressId != null and addressId != ''">
            address_id,
        </if>
        <if test="settlementWeight != null and settlementWeight != ''">
            settlement_weight,
        </if>
        <if test="settlementVol != null and settlementVol != ''">
            settlement_vol,
        </if>
        <if test="remarks != null and remarks != ''">
            remarks,
        </if>
        <if test="orderNumber != null and orderNumber != ''">
            order_number,
        </if>
        <if test="agentNumber != null and agentNumber != ''">
            agent_number,
        </if>
        <if test="isSensitive != null and isSensitive != ''">
            is_sensitive,
        </if>
        <if test="routeId != null and routeId != ''">
            route_id,
        </if>
        <if test="goodsNumber != null and goodsNumber != ''">
            goods_number,
        </if>
        <if test="incidental != null">
            incidental,
        </if>
        <if test="actualWeight != null">
            actual_weight,
        </if>
        <if test="actualVol != null">
            actual_vol,
        </if>

    </sql>

    <!-- 插入字段实际数值(判空) -->
    <sql id="Insert_Column_Values_NotNull">
        <if test="id != null and id != ''">
            #{id},
        </if>
        <if test="pId != null and pId != ''">
            #{pId},
        </if>
        <if test="customerId != null and customerId != ''">
            #{customerId},
        </if>
        <if test="groupTime != null">
            #{groupTime},
        </if>
        <if test="packTime != null">
            #{packTime},
        </if>
        <if test="packType != null and packType != ''">
            #{packType},
        </if>
        <if test="status != null and status != ''">
            #{status},
        </if>
        <if test="createTime != null">
            #{createTime},
        </if>
        <if test="createId != null and createId != ''">
            #{createId},
        </if>
        <if test="lastUpdateTime != null">
            #{lastUpdateTime},
        </if>
        <if test="lastUpdateId != null and lastUpdateId != ''">
            #{lastUpdateId},
        </if>
        <if test="pickTime != null">
            #{pickTime},
        </if>
        <if test="picker != null and picker != ''">
            #{picker},
        </if>
        <if test="isPicked != null and isPicked != ''">
            #{isPicked},
        </if>
        <if test="auctualPrice != null and auctualPrice != ''">
            #{auctualPrice},
        </if>
        <if test="discount != null and discount != ''">
            #{discount},
        </if>
        <if test="preQoutedPrice != null and preQoutedPrice != ''">
            #{preQoutedPrice},
        </if>
        <if test="insideMessage != null and insideMessage != ''">
            #{insideMessage},
        </if>
        <if test="accepted != null and accepted != ''">
            #{accepted},
        </if>
        <if test="acceptedTime != null">
            #{acceptedTime},
        </if>
        <if test="accepter != null and accepter != ''">
            #{accepter},
        </if>
        <if test="payTime != null">
            #{payTime},
        </if>
        <if test="isPaid != null and isPaid != ''">
            #{isPaid},
        </if>
        <if test="isPrinted != null and isPrinted != ''">
            #{isPrinted},
        </if>
        <if test="addressId != null and addressId != ''">
            #{addressId},
        </if>
        <if test="settlementWeight != null and settlementWeight != ''">
            #{settlementWeight},
        </if>
        <if test="settlementVol != null and settlementVol != ''">
            #{settlementVol},
        </if>
        <if test="remarks != null and remarks != ''">
            #{remarks},
        </if>
        <if test="orderNumber != null and orderNumber != ''">
            #{orderNumber},
        </if>
        <if test="agentNumber != null and agentNumber != ''">
            #{agentNumber},
        </if>
        <if test="isSensitive != null and isSensitive != ''">
            #{isSensitive},
        </if>
        <if test="routeId != null and routeId != ''">
            #{routeId},
        </if>
        <if test="goodsNumber != null and goodsNumber != ''">
            #{goodsNumber},
        </if>
        <if test="incidental != null">
            #{incidental},
        </if>
        <if test="actualWeight != null">
            #{actualWeight},
        </if>
        <if test="actualVol != null">
            #{actualVol},
        </if>

    </sql>

    <!-- 更新字段 -->
    <sql id="Update_Column">
		id = #{id},
    	p_id = #{pId},
    	customer_id = #{customerId},
    	group_time = #{groupTime},
    	pack_time = #{packTime},
    	pack_type = #{packType},
    	status = #{status},
    	create_time = #{createTime},
    	create_id = #{createId},
    	last_update_time = #{lastUpdateTime},
    	last_update_id = #{lastUpdateId},
    	pick_time = #{pickTime},
    	picker = #{picker},
    	is_picked = #{isPicked},
    	auctual_price = #{auctualPrice},
    	discount = #{discount},
    	pre_qouted_price = #{preQoutedPrice},
    	inside_message = #{insideMessage},
    	accepted = #{accepted},
    	accepted_time = #{acceptedTime},
    	accepter = #{accepter},
    	pay_time = #{payTime},
    	is_paid = #{isPaid},
    	is_printed = #{isPrinted},
    	address_id = #{addressId},
    	settlement_weight = #{settlementWeight},
    	settlement_vol = #{settlementVol},
    	remarks = #{remarks},
    	order_number = #{orderNumber},
    	agent_number = #{agentNumber},
    	is_sensitive = #{isSensitive},
    	route_id = #{routeId},
    	goods_number = #{goodsNumber},
    	incidental = #{incidental},
    	actual_weight = #{actualWeight},
    	actual_vol = #{actualVol},
	</sql>

    <!-- 更新字段（判空） -->
    <sql id="Update_Column_NotNull">
        <if test="id != null and id != ''">
            id = #{id},
        </if>
        <if test="pId != null and pId != ''">
            p_id = #{pId},
        </if>
        <if test="customerId != null and customerId != ''">
            customer_id = #{customerId},
        </if>
        <if test="groupTime != null">
            group_time = #{groupTime},
        </if>
        <if test="packTime != null">
            pack_time = #{packTime},
        </if>
        <if test="packType != null and packType != ''">
            pack_type = #{packType},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        <if test="createTime != null">
            create_time = #{createTime},
        </if>
        <if test="createId != null and createId != ''">
            create_id = #{createId},
        </if>
        <if test="lastUpdateTime != null">
            last_update_time = #{lastUpdateTime},
        </if>
        <if test="lastUpdateId != null and lastUpdateId != ''">
            last_update_id = #{lastUpdateId},
        </if>
        <if test="pickTime != null">
            pick_time = #{pickTime},
        </if>
        <if test="picker != null and picker != ''">
            picker = #{picker},
        </if>
        <if test="isPicked != null and isPicked != ''">
            is_picked = #{isPicked},
        </if>
        <if test="auctualPrice != null and auctualPrice != ''">
            auctual_price = #{auctualPrice},
        </if>
        <if test="discount != null and discount != ''">
            discount = #{discount},
        </if>
        <if test="preQoutedPrice != null and preQoutedPrice != ''">
            pre_qouted_price = #{preQoutedPrice},
        </if>
        <if test="insideMessage != null and insideMessage != ''">
            inside_message = #{insideMessage},
        </if>
        <if test="accepted != null and accepted != ''">
            accepted = #{accepted},
        </if>
        <if test="acceptedTime != null">
            accepted_time = #{acceptedTime},
        </if>
        <if test="accepter != null and accepter != ''">
            accepter = #{accepter},
        </if>
        <if test="payTime != null">
            pay_time = #{payTime},
        </if>
        <if test="isPaid != null and isPaid != ''">
            is_paid = #{isPaid},
        </if>
        <if test="isPrinted != null and isPrinted != ''">
            is_printed = #{isPrinted},
        </if>
        <if test="addressId != null and addressId != ''">
            address_id = #{addressId},
        </if>
        <if test="settlementWeight != null and settlementWeight != ''">
            settlement_weight = #{settlementWeight},
        </if>
        <if test="settlementVol != null and settlementVol != ''">
            settlement_vol = #{settlementVol},
        </if>
        <if test="remarks != null and remarks != ''">
            remarks = #{remarks},
        </if>
        <if test="orderNumber != null and orderNumber != ''">
            order_number = #{orderNumber},
        </if>
        <if test="agentNumber != null and agentNumber != ''">
            agent_number = #{agentNumber},
        </if>
        <if test="isSensitive != null and isSensitive != ''">
            is_sensitive = #{isSensitive},
        </if>
        <if test="routeId != null and routeId != ''">
            route_id = #{routeId},
        </if>
        <if test="goodsNumber != null and goodsNumber != ''">
            goods_number = #{goodsNumber},
        </if>
        <if test="incidental != null">
            incidental = #{incidental},
        </if>
        <if test="actualWeight != null">
            actual_weight = #{actualWeight},
        </if>
        <if test="actualVol != null">
            actual_vol = #{actualVol},
        </if>

    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ping_main_order
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMainOrder">
        insert into ping_main_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List"/>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Column_Values"/>
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMainOrder">
        insert into ping_main_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_NotNull"/>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Column_Values_NotNull"/>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMainOrder">
        update ping_main_order
        <set>
            <include refid="Update_Column"/>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMainOrder">
        update ping_main_order
        <set>
            <include refid="Update_Column_NotNull"/>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <!-- 移除数据（物理删除） -->
    <delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from ping_main_order
		where id = #{id,jdbcType=INTEGER}
	</delete>

    <!-- 删除数据（逻辑删除） -->
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update ping_main_order
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
    </update>

    <insert id="insertOrderList" parameterType="list">
        insert into ping_main_order (
        p_id, customer_id,
        group_time, pack_time, pack_type,
        `status`, create_time, create_id,
        last_update_time, last_update_id, pick_time,
        picker, is_picked, auctual_price,
        discount, pre_qouted_price, inside_message,
        accepted, accepted_time, accepter,
        pay_time, is_paid, is_printed,
        address_id, settlement_weight, settlement_vol,
        remarks, order_number, agent_number,
        is_sensitive, route_id, goods_number,
        incidental, actual_weight, actual_vol)
        values
        <foreach collection="list" item="pingMainOrder" separator=",">
            (#{pingMainOrder.pId,jdbcType=INTEGER}, #{pingMainOrder.customerId,jdbcType=INTEGER},
            #{pingMainOrder.groupTime,jdbcType=TIMESTAMP}, #{pingMainOrder.packTime,jdbcType=TIMESTAMP}, #{pingMainOrder.packType,jdbcType=INTEGER},
            #{pingMainOrder.status,jdbcType=INTEGER}, #{pingMainOrder.createTime,jdbcType=TIMESTAMP}, #{pingMainOrder.createId,jdbcType=INTEGER},
            #{pingMainOrder.lastUpdateTime,jdbcType=TIMESTAMP}, #{pingMainOrder.lastUpdateId,jdbcType=INTEGER}, #{pingMainOrder.pickTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.picker,jdbcType=VARCHAR}, #{pingMainOrder.isPicked,jdbcType=INTEGER}, #{pingMainOrder.auctualPrice,jdbcType=DECIMAL},
            #{pingMainOrder.discount,jdbcType=DECIMAL}, #{pingMainOrder.preQoutedPrice,jdbcType=DECIMAL}, #{pingMainOrder.insideMessage,jdbcType=VARCHAR},
            #{pingMainOrder.accepted,jdbcType=INTEGER}, #{pingMainOrder.acceptedTime,jdbcType=TIMESTAMP}, #{pingMainOrder.accepter,jdbcType=VARCHAR},
            #{pingMainOrder.payTime,jdbcType=TIMESTAMP}, #{pingMainOrder.isPaid,jdbcType=INTEGER}, #{pingMainOrder.isPrinted,jdbcType=INTEGER},
            #{pingMainOrder.addressId,jdbcType=INTEGER}, #{pingMainOrder.settlementWeight,jdbcType=DOUBLE}, #{pingMainOrder.settlementVol,jdbcType=DOUBLE},
            #{pingMainOrder.remarks,jdbcType=VARCHAR}, #{pingMainOrder.orderNumber,jdbcType=VARCHAR}, #{pingMainOrder.agentNumber,jdbcType=VARCHAR},
            #{pingMainOrder.isSensitive,jdbcType=INTEGER}, #{pingMainOrder.routeId,jdbcType=INTEGER}, #{pingMainOrder.goodsNumber,jdbcType=INTEGER},
            #{pingMainOrder.incidental}, #{pingMainOrder.actualWeight}, #{pingMainOrder.actualVol})
        </foreach>
    </insert>

    <select id="selectOrderByPid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ping_main_order
        where
        status = 1
        and p_id = #{pid}
    </select>

    <update id="updateListByOrderNumber" parameterType="java.util.List">
        <foreach collection="pingMainOrderList" item="pingMainOrder" separator=";">
            update ping_main_order
            <set>
                <if test="pingMainOrder.pId != null">
                    p_id = #{pingMainOrder.pId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.customerId != null">
                    customer_id = #{pingMainOrder.customerId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.groupTime != null">
                    group_time = #{pingMainOrder.groupTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.packTime != null">
                    pack_time = #{pingMainOrder.packTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.packType != null">
                    pack_type = #{pingMainOrder.packType,jdbcType=INTEGER},
                </if>
                last_update_time = now(),
                <if test="pingMainOrder.lastUpdateId != null">
                    last_update_id = #{pingMainOrder.lastUpdateId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.pickTime != null">
                    pick_time = #{pingMainOrder.pickTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.picker != null">
                    picker = #{pingMainOrder.picker,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.isPicked != null">
                    is_picked = #{pingMainOrder.isPicked,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.auctualPrice != null">
                    auctual_price = #{pingMainOrder.auctualPrice,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.discount != null">
                    discount = #{pingMainOrder.discount,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.preQoutedPrice != null">
                    pre_qouted_price = #{pingMainOrder.preQoutedPrice,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.insideMessage != null">
                    inside_message = #{pingMainOrder.insideMessage,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.accepted != null">
                    accepted = #{pingMainOrder.accepted,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.acceptedTime != null">
                    accepted_time = #{pingMainOrder.acceptedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.accepter != null">
                    accepter = #{pingMainOrder.accepter,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.payTime != null">
                    pay_time = #{pingMainOrder.payTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.isPaid != null">
                    is_paid = #{pingMainOrder.isPaid,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.isPrinted != null">
                    is_printed = #{pingMainOrder.isPrinted,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.addressId != null">
                    address_id = #{pingMainOrder.addressId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.actualWeight != null">
                    actual_weight = #{pingMainOrder.actualWeight,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.actualVol != null">
                    actual_vol = #{pingMainOrder.actualVol,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.settlementWeight != null">
                    settlement_weight = #{pingMainOrder.settlementWeight,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.settlementVol != null">
                    settlement_vol = #{pingMainOrder.settlementVol,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.remarks != null">
                    remarks = #{pingMainOrder.remarks,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.agentNumber != null">
                    agent_number = #{pingMainOrder.agentNumber,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.isSensitive != null">
                    is_sensitive = #{pingMainOrder.isSensitive,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.routeId != null">
                    route_id = #{pingMainOrder.routeId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.goodsNumber != null">
                    goods_number = #{pingMainOrder.goodsNumber,jdbcType=INTEGER},
                </if>
            </set>
            where order_number = #{pingMainOrder.orderNumber,jdbcType=VARCHAR}
        </foreach>
    </update>

    <select id="selectOrderByOrderNumber" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from ping_main_order where status = 1 and order_number = #{orderNumber}
    </select>

    <select id="selectOrderByOrderNumberList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ping_main_order
        where
        status = 1
        and order_number in
        <foreach collection="orderNumberList" item="orderNumber" open="(" close=")" separator=",">
            #{orderNumber}
        </foreach>
    </select>

    <select id="selectPackedOrderByPid" resultType="java.lang.Integer">
        select count(1)
        from ping_main_order
        <where>
            status = 1
            and p_id = #{pId}
            and (pack_type = 1 or pack_type = 2)
        </where>
    </select>
</mapper>


