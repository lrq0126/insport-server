<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.goods2pack.Goods2packMapper">
    <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.Goods2pack">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="pack_id" jdbcType="INTEGER" property="packId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, goods_id, pack_id, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods2pack
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from goods2pack
        where id = #{id,jdbcType=INTEGER}
    </delete>


    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.dwgj.mlxydedicatedline.entity.Goods2pack"
            useGeneratedKeys="true">
        insert into goods2pack (goods_id, pack_id, status)
        values (#{goodsId,jdbcType=INTEGER}, #{packId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.dwgj.mlxydedicatedline.entity.Goods2pack" useGeneratedKeys="true">
        insert into goods2pack
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsId != null and goodsId != ''">
                goods_id,
            </if>
            <if test="packId != null and packId != ''">
                pack_id,
            </if>
            <if test="status != null and status != ''">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsId != null and goodsId != ''">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="packId != null and packId != ''">
                #{packId,jdbcType=INTEGER},
            </if>
            <if test="status != null and status != ''">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.Goods2pack">
        update goods2pack
        <set>
            <if test="goodsId != null and packId != ''">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="packId != null and packId != ''">
                pack_id = #{packId,jdbcType=INTEGER},
            </if>
            <if test="status != null and status != ''">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.Goods2pack">
        update goods2pack
        set goods_id = #{goodsId,jdbcType=INTEGER},
        pack_id = #{packId,jdbcType=INTEGER},
        status = #{status,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="findByGoodsId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table"/>
        where goods_id = #{goodsId} and status = 1
    </select>

    <select id="findByPackId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from
        <include refid="table"/>
        where pack_id = #{packId} and status = 1
    </select>

    <update id="deleteByPackId" parameterType="java.lang.Integer">
        update goods2pack
        set status = 0
        where pack_id = #{packId,jdbcType=INTEGER}
    </update>

    <update id="deleteByPackIdList">
    update goods2pack
        set status = 0
        where pack_id in
        <foreach collection="packIdList" open="(" close=")" item="packId" separator=",">
            #{packId,jdbcType=INTEGER}
        </foreach>
    </update>

    <insert id="insertList" parameterType="java.util.List">
        insert into goods2pack (goods_id, pack_id, status)
        values
        <foreach collection="goods2packList" item="goods2pack" separator=",">
            (#{goods2pack.goodsId}, #{goods2pack.packId}, 1)
        </foreach>
    </insert>

    <select id="selectByPackIdList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from <include refid="table"/>
        where
        status = 1
        and
        pack_id in
        <foreach collection="packIdList" item="packId" separator="," open="(" close=")">
            #{packId}
        </foreach>
    </select>

    <sql id="table">goods2pack</sql>
</mapper>