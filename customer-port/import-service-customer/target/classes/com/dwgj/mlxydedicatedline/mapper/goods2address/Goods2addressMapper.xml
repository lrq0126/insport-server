<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.goods2address.Goods2addressMapper">
    <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.Goods2address">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <result column="customer_name" jdbcType="VARCHAR" property="customerName"/>
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="addressee" jdbcType="VARCHAR" property="addressee"/>
        <result column="telephone" jdbcType="VARCHAR" property="telephone"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, create_time, `status`, customer_id, customer_name, goods_id, addressee, telephone,
    address,code
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods2address
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods2address
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.dwgj.mlxydedicatedline.entity.Goods2address"
            useGeneratedKeys="true">
    insert into goods2address (create_time, `status`, customer_id,
      customer_name, goods_id, addressee,
      telephone, address,code)
    values (#{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER},
      #{customerName,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{addressee,jdbcType=VARCHAR},
      #{telephone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},#{code,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.dwgj.mlxydedicatedline.entity.Goods2address" useGeneratedKeys="true">
        insert into goods2address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            create_time,
            <if test="status != null and status !=''">
                `status`,
            </if>
            <if test="customerId != null and customerId !=''">
                customer_id,
            </if>
            <if test="customerName != null and customerName !=''">
                customer_name,
            </if>
            <if test="goodsId != null and goodsId !=''">
                goods_id,
            </if>
            <if test="addressee != null and addressee !=''">
                addressee,
            </if>
            <if test="telephone != null and telephone !=''">
                telephone,
            </if>
            <if test="address != null and address !=''">
                address,
            </if>
            <if test="code != null and code !=''">
                code,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            now(),
            <if test="status != null and status !=''">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="customerId != null and customerId !=''">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="customerName != null and customerName !=''">
                #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null and goodsId !=''">
                #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="addressee != null and addressee !=''">
                #{addressee,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null and telephone !=''">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null and address !=''">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="code != null and code !=''">
                #{code,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.Goods2address">
        update goods2address
        <set>
            <if test="createTime != null and createTime !=''">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null and status !=''">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="customerId != null and customerId !=''">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="customerName != null and customerName !=''">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="goodsId != null and goodsId !=''">
                goods_id = #{goodsId,jdbcType=INTEGER},
            </if>
            <if test="addressee != null and addressee !=''">
                addressee = #{addressee,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null and telephone !=''">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="address != null and address !=''">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="code != null and code !=''">
                code = #{address,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.Goods2address">
    update goods2address
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      customer_name = #{customerName,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      addressee = #{addressee,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertSelectiveList" parameterType="java.util.List">
        insert into goods2address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            create_time,
            `status`,
            customer_id,
            customer_name,
            goods_id,
            addressee,
            telephone,
            address,code
        </trim>
        values
        <foreach collection="goods2addressList" item="goods2address" separator=",">
            (now(),
            #{goods2address.status,jdbcType=INTEGER},
            #{goods2address.customerId,jdbcType=INTEGER},
            #{goods2address.customerName,jdbcType=VARCHAR},
            #{goods2address.goodsId,jdbcType=INTEGER},
            #{goods2address.addressee,jdbcType=VARCHAR},
            #{goods2address.telephone,jdbcType=VARCHAR},
            #{goods2address.address,jdbcType=VARCHAR},
            #{goods2address.code,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>