<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.user.WxAccessTokenMapper">
  <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.user.WxAccessToken">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="access_token" jdbcType="VARCHAR" property="accessToken" />
    <result column="expire" jdbcType="VARCHAR" property="expire" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, access_token, expire, create_time, update_time, `status`,jsapi_ticket
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wx_access_token
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wx_access_token
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.user.WxAccessToken">
    insert into wx_access_token (id, access_token, expire,
      create_time, update_time, `status`,jsapi_ticket
      )
    values (#{id,jdbcType=INTEGER}, #{accessToken,jdbcType=VARCHAR}, #{expire,jdbcType=VARCHAR},
      now(), #{updateTime,jdbcType=TIMESTAMP}, 1,#{jsapiTicket,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.user.WxAccessToken">
    insert into wx_access_token
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="accessToken != null">
        access_token,
      </if>
      <if test="expire != null">
        expire,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="jsapiTicket != null">
         jsapi_ticket,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="accessToken != null">
        #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        #{expire,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="jsapiTicket != null">
        #{jsapiTicket,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.user.WxAccessToken">
    update wx_access_token
    <set>
      <if test="accessToken != null">
        access_token = #{accessToken,jdbcType=VARCHAR},
      </if>
      <if test="expire != null">
        expire = #{expire,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.user.WxAccessToken">
    update wx_access_token
    set access_token = #{accessToken,jdbcType=VARCHAR},
      expire = #{expire,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--  获取最新的access_token对象-->
  <select id="getNewAccessToken"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from wx_access_token
    where id = (select max(id) from wx_access_token)
  </select>

  <!--  获取最新的access_token-->
  <select id="getAccessToken"  resultType="string">
    select
      access_token
    from wx_access_token
    where id = (select max(id) from wx_access_token)
  </select>

  <!--  获取最新的jsapi_ticket-->
  <select id="getJsapiTicket"  resultType="string">
    select
      jsapi_ticket
    from wx_access_token
    where id = (select max(id) from wx_access_token)
  </select>
</mapper>
