<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.image.ImagesMapper">
    <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.image.Images">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="pic_url" jdbcType="VARCHAR" property="picUrl"/>
        <result column="pic_type" jdbcType="VARCHAR" property="picType"/>
        <result column="content_id" jdbcType="VARCHAR" property="contentId"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
        <result column="sort_no" jdbcType="INTEGER" property="sortNo"/>
        <result column="image_name" jdbcType="VARCHAR" property="imageName"/>
        <result column="image_size" jdbcType="VARCHAR" property="imageSize"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="last_update_id" jdbcType="INTEGER" property="lastUpdateId"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, pic_url, pic_type, content_id, `path`, sort_no, image_name, image_size, `status`,
    create_time, create_id, last_update_time, last_update_id
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from images
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from images
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.image.Images">
    insert into images (id, pic_url, pic_type,
      content_id, `path`, sort_no,
      image_name, image_size, `status`,
      create_time, create_id, last_update_time,
      last_update_id)
    values (#{id,jdbcType=INTEGER}, #{picUrl,jdbcType=VARCHAR}, #{picType,jdbcType=VARCHAR},
      #{contentId,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{sortNo,jdbcType=INTEGER},
      #{imageName,jdbcType=VARCHAR}, #{imageSize,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{lastUpdateTime,jdbcType=TIMESTAMP},
      #{lastUpdateId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.image.Images">
        insert into images
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="picUrl != null">
                pic_url,
            </if>
            <if test="picType != null">
                pic_type,
            </if>
            <if test="contentId != null">
                content_id,
            </if>
            <if test="path != null">
                `path`,
            </if>
            <if test="sortNo != null">
                sort_no,
            </if>
            <if test="imageName != null">
                image_name,
            </if>
            <if test="imageSize != null">
                image_size,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
            <if test="lastUpdateId != null">
                last_update_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="picUrl != null">
                #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="picType != null">
                #{picType,jdbcType=VARCHAR},
            </if>
            <if test="contentId != null">
                #{contentId,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
            <if test="sortNo != null">
                #{sortNo,jdbcType=INTEGER},
            </if>
            <if test="imageName != null">
                #{imageName,jdbcType=VARCHAR},
            </if>
            <if test="imageSize != null">
                #{imageSize,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateId != null">
                #{lastUpdateId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.image.Images">
        update images
        <set>
            <if test="picUrl != null">
                pic_url = #{picUrl,jdbcType=VARCHAR},
            </if>
            <if test="picType != null">
                pic_type = #{picType,jdbcType=VARCHAR},
            </if>
            <if test="contentId != null">
                content_id = #{contentId,jdbcType=VARCHAR},
            </if>
            <if test="path != null">
                `path` = #{path,jdbcType=VARCHAR},
            </if>
            <if test="sortNo != null">
                sort_no = #{sortNo,jdbcType=INTEGER},
            </if>
            <if test="imageName != null">
                image_name = #{imageName,jdbcType=VARCHAR},
            </if>
            <if test="imageSize != null">
                image_size = #{imageSize,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateId != null">
                last_update_id = #{lastUpdateId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.image.Images">
    update images
    set pic_url = #{picUrl,jdbcType=VARCHAR},
      pic_type = #{picType,jdbcType=VARCHAR},
      content_id = #{contentId,jdbcType=VARCHAR},
      `path` = #{path,jdbcType=VARCHAR},
      sort_no = #{sortNo,jdbcType=INTEGER},
      image_name = #{imageName,jdbcType=VARCHAR},
      image_size = #{imageSize,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_id = #{lastUpdateId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <insert id="insertImagesList" parameterType="list">
        insert into images
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id, pic_url, pic_type,
            content_id, `path`, sort_no,
            image_name, image_size,status,create_time,create_id
        </trim>
        values
        <foreach collection="list" item="image" separator=",">
            (#{image.id,jdbcType=INTEGER}, #{image.picUrl,jdbcType=VARCHAR}, #{image.picType,jdbcType=VARCHAR},
            #{image.contentId,jdbcType=VARCHAR}, #{image.path,jdbcType=VARCHAR}, #{image.sortNo,jdbcType=INTEGER},
            #{image.imageName,jdbcType=VARCHAR}, #{image.imageSize,jdbcType=VARCHAR},#{image.status,jdbcType=INTEGER},
            #{image.createTime,jdbcType=TIMESTAMP},#{image.createId,jdbcType=INTEGER})
        </foreach>
    </insert>

    <select id="getImagesByContentId" parameterType="com.dwgj.mlxydedicatedline.entity.image.Images"
            resultMap="BaseResultMap">
    select * from images
        where status = 1 and content_id = #{contentId,jdbcType=VARCHAR} and pic_type = #{picType,jdbcType=VARCHAR}
        order by sort_no asc
  </select>

    <update id="deleteImagesByContentId" parameterType="com.dwgj.mlxydedicatedline.entity.image.Images">
        update images
    set `status` = #{status,jdbcType=INTEGER}
        where content_id = #{contentId,jdbcType=VARCHAR}  and pic_type = #{picType,jdbcType=VARCHAR}
  </update>
    <update id="deleteByIdList" parameterType="java.util.List">
        update images
        set
        status = 0
        where
        status = 1
        and id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="getEvaluateImagesByContentId" resultMap="BaseResultMap">
        select
            id, pic_url, pic_type, content_id,
            `path`, sort_no, image_name, image_size
        from images
        where
            status = 1
            and content_id = #{contentId,jdbcType=VARCHAR}
            and pic_type = 'OrderEvaluatePicture'
        order by sort_no asc
  </select>

    <select id="getCustomerIdentityPicture" resultMap="BaseResultMap">
        select id, pic_url, pic_type, content_id, sort_no, image_name from images
        where status = 1
        and content_id = #{customerIdentityId}
        and pic_type = 'CustomerIdentityPicture'
    </select>

    <select id="getImagesByTypeAndContentId" resultMap="BaseResultMap">
        select
            id, pic_url, pic_type, content_id,
            `path`, sort_no, image_name, image_size
        from images
        where
            status = 1
            and content_id = #{contentId,jdbcType=VARCHAR}
            and pic_type = #{picType}
        order by sort_no asc
  </select>
    <select id="getImagesByIdList" resultMap="BaseResultMap">
        select
            id, pic_url, pic_type, content_id,
            `path`, sort_no, image_name, image_size
        from images
        where
            status = 1
            and id in
            <foreach collection="imageIdList" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
    </select>


    <delete id="deleteImages">
        delete from images
        where id in
        <foreach collection="imageIdList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
</mapper>
