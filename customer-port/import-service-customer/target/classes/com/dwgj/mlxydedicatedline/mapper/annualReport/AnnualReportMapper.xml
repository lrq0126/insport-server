<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.annualReport.AnnualReportMapper">
    <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.annualReport.AnnualReport">
        <id column="id" jdbcType="INTEGER" property="id"/>
    	
	    <result column="create_id" jdbcType="INTEGER" property="createId"/>
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
		<result column="update_id" jdbcType="INTEGER" property="updateId"/>
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
		<result column="status" jdbcType="INTEGER" property="status"/>
		<result column="version" jdbcType="INTEGER" property="version"/>
		<result column="remarks" jdbcType="VARCHAR" property="remarks"/>
		<result column="customer_id" jdbcType="INTEGER" property="customerId"/>
		<result column="openid" jdbcType="VARCHAR" property="openid"/>
		<result column="year" jdbcType="INTEGER" property="year"/>
		<result column="order_sum" jdbcType="INTEGER" property="orderSum"/>
		<result column="in_warehouse_sum" jdbcType="INTEGER" property="inWarehouseSum"/>
		<result column="consumption_amount_count" jdbcType="DECIMAL" property="consumptionAmountCount"/>
		<result column="registration_time" jdbcType="TIMESTAMP" property="registrationTime"/>
		<result column="stranded_goods_sum" jdbcType="INTEGER" property="strandedGoodsSum"/>
		<result column="content" jdbcType="VARCHAR" property="content"/>
		<result column="read" jdbcType="INTEGER" property="read"/>

    </resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		id,
		create_id, DATE_FORMAT(create_time ,'%Y-%m-%d %k:%i:%s') as create_time,
		update_id, DATE_FORMAT(update_time ,'%Y-%m-%d %k:%i:%s') as update_time,
		status, version, remarks, customer_id, openid, `year`,
		order_sum, in_warehouse_sum, consumption_amount_count,
		DATE_FORMAT(registration_time ,'%Y-%m-%d %k:%i:%s') as registration_time,
		stranded_goods_sum, content, `read`
	</sql>
	
	<!-- 插入字段实际数值 -->
	<sql id="Insert_Column_Values">
		#{createId},#{createTime},#{updateId},#{updateTime},
		#{status},#{version},#{remarks},#{customerId},#{openid},#{year},
		#{orderSum},#{inWarehouseSum},#{consumptionAmountCount},
		#{registrationTime},#{strandedGoodsSum},#{content},#{read}
	</sql>
	
	<!-- 插入字段（判空） -->
	<sql id="Base_Column_List_NotNull">
		<if test="createId != null and createId != ''">
			create_id, 
		</if>
    	<if test="createTime != null and createTime != ''">
			create_time, 
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id, 
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time, 
		</if>
    	<if test="status != null and status != ''">
			status, 
		</if>
    	<if test="version != null and version != ''">
			version, 
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks, 
		</if>
    	<if test="customerId != null and customerId != ''">
			customer_id, 
		</if>
    	<if test="openid != null and openid != ''">
			openid, 
		</if>
    	<if test="year != null and year != ''">
			year, 
		</if>
    	<if test="orderSum != null and orderSum != ''">
			order_sum, 
		</if>
    	<if test="inWarehouseSum != null and inWarehouseSum != ''">
			in_warehouse_sum, 
		</if>
    	<if test="consumptionAmountCount != null and consumptionAmountCount != ''">
			consumption_amount_count, 
		</if>
    	<if test="registrationTime != null and registrationTime != ''">
			registration_time, 
		</if>
    	<if test="strandedGoodsSum != null and strandedGoodsSum != ''">
			stranded_goods_sum, 
		</if>
    	<if test="content != null and content != ''">
			content,
		</if>
    	<if test="read != null and read != ''">
			read,
		</if>
    	
	</sql>
	
	<!-- 插入字段实际数值(判空) -->
	<sql id="Insert_Column_Values_NotNull">
		<if test="createId != null and createId != ''">
			#{createId},
		</if>
    	<if test="createTime != null and createTime != ''">
			#{createTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			#{updateId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			#{updateTime},
		</if>
    	<if test="status != null and status != ''">
			#{status},
		</if>
    	<if test="version != null and version != ''">
			#{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			#{remarks},
		</if>
    	<if test="customerId != null and customerId != ''">
			#{customerId},
		</if>
    	<if test="openid != null and openid != ''">
			#{openid},
		</if>
    	<if test="year != null and year != ''">
			#{year},
		</if>
    	<if test="orderSum != null and orderSum != ''">
			#{orderSum},
		</if>
    	<if test="inWarehouseSum != null and inWarehouseSum != ''">
			#{inWarehouseSum},
		</if>
    	<if test="consumptionAmountCount != null and consumptionAmountCount != ''">
			#{consumptionAmountCount},
		</if>
    	<if test="registrationTime != null and registrationTime != ''">
			#{registrationTime},
		</if>
    	<if test="strandedGoodsSum != null and strandedGoodsSum != ''">
			#{strandedGoodsSum},
		</if>
    	<if test="content != null and content != ''">
			#{content},
		</if>
    	<if test="read != null and read != ''">
			#{read},
		</if>
    	
	</sql>
	
	<!-- 更新字段 -->
	<sql id="Update_Column">
		create_id = #{createId},
    	create_time = #{createTime},
    	update_id = #{updateId},
    	update_time = #{updateTime},
    	status = #{status},
    	version = #{version},
    	remarks = #{remarks},
    	customer_id = #{customerId},
    	openid = #{openid},
    	year = #{year},
    	order_sum = #{orderSum},
    	in_warehouse_sum = #{inWarehouseSum},
    	consumption_amount_count = #{consumptionAmountCount},
    	registration_time = #{registrationTime},
    	stranded_goods_sum = #{strandedGoodsSum},
    	content = #{content},
    	read = #{read},

	</sql>
	
	<!-- 更新字段（判空） -->
	<sql id="Update_Column_NotNull">
		<if test="createId != null and createId != ''">
			create_id = #{createId},
		</if>
    	<if test="createTime != null and createTime != ''">
			create_time = #{createTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id = #{updateId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time = #{updateTime},
		</if>
    	<if test="status != null and status != ''">
			status = #{status},
		</if>
    	<if test="version != null and version != ''">
			version = #{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks = #{remarks},
		</if>
    	<if test="customerId != null and customerId != ''">
			customer_id = #{customerId},
		</if>
    	<if test="openid != null and openid != ''">
			openid = #{openid},
		</if>
    	<if test="year != null and year != ''">
			year = #{year},
		</if>
    	<if test="orderSum != null and orderSum != ''">
			order_sum = #{orderSum},
		</if>
    	<if test="inWarehouseSum != null and inWarehouseSum != ''">
			in_warehouse_sum = #{inWarehouseSum},
		</if>
    	<if test="consumptionAmountCount != null and consumptionAmountCount != ''">
			consumption_amount_count = #{consumptionAmountCount},
		</if>
    	<if test="registrationTime != null and registrationTime != ''">
			registration_time = #{registrationTime},
		</if>
    	<if test="strandedGoodsSum != null and strandedGoodsSum != ''">
			stranded_goods_sum = #{strandedGoodsSum},
		</if>
    	<if test="content != null and content != ''">
			content = #{content},
		</if>
    	<if test="read != null and read != ''">
			`read` = #{read},
		</if>
    	
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <trim suffixOverrides=",">
        <include refid="Base_Column_List"/>
        </trim>
        from annual_report
        where id = #{id,jdbcType=INTEGER}
    </select>

	<insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.annualReport.AnnualReport">
		insert into annual_report
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_id, 
			create_time, 
			update_id, 
			update_time, 
			status, 
			version, 
			remarks, 
			customer_id, 
			openid, 
			year, 
			order_sum, 
			in_warehouse_sum, 
			consumption_amount_count, 
			registration_time, 
			stranded_goods_sum,
			content,
			`read`
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values"/>
		</trim>
	</insert>
	
	<insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.annualReport.AnnualReport">
		insert into annual_report
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List_NotNull"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values_NotNull"/>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.annualReport.AnnualReport">
		update annual_report
		<set>
			<include refid="Update_Column"/>
		</set>
		
		<where>
		id = #{id} and status = 1
		</where>
		
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.annualReport.AnnualReport">
		update annual_report
		<set>
			<include refid="Update_Column_NotNull"/>
		</set>
		<where>
		id = #{id} and status = 1
		</where>
	</update>

	<!-- 删除数据（逻辑删除） -->
	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update  annual_report
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 移除数据（物理删除） -->
	<delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from annual_report
		where id = #{id,jdbcType=INTEGER}
	</delete>


	<select id="selectCustomerAnnualReport" resultMap="entityRespVo">
		select <include refid="tableColumns"/>
		from annual_report t
		left join customer cus on cus.id = t.customer_id and cus.`status` = 1
		<where>
			t.status = 1
			and t.customer_id = #{customerId}
			and t.`year` = #{year}
		</where>
	</select>

	<update id="updateReadById">
		update annual_report
		set `read` = 1
		where `status` = 1 and id = #{id}
	</update>

	<resultMap id="entityRespVo" extends="BaseResultMap" type="com.dwgj.mlxydedicatedline.vo.annualReport.AnnualReportRespVo">
		<result column="customer_name" property="customerName"/>
	</resultMap>

	<sql id="tableColumns">
		t.id,
		t.create_id, DATE_FORMAT(t.create_time ,'%Y-%m-%d %k:%i:%s') as create_time,
		t.update_id, DATE_FORMAT(t.update_time ,'%Y-%m-%d %k:%i:%s') as update_time,
		t.status, t.version, t.remarks, t.customer_id, t.openid, t.`year`,
		t.order_sum, t.in_warehouse_sum, t.consumption_amount_count,
		DATE_FORMAT(t.registration_time ,'%Y年%m月%d日') as registration_time,
		t.stranded_goods_sum, t.content, t.read, cus.customer_name
	</sql>


</mapper>