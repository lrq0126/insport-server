<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.sys.SysNoticeCustomerMapper">
  <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.sys.SysNoticeCustomer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice_id" jdbcType="INTEGER" property="noticeId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, notice_id, customer_id, is_read, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_notice_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_notice_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNoticeCustomer">
    insert into sys_notice_customer (id, notice_id, customer_id,
      is_read, `status`)
    values (#{id,jdbcType=INTEGER}, #{noticeId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER},
      #{isRead,jdbcType=INTEGER}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNoticeCustomer">
    insert into sys_notice_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeId != null">
        notice_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="noticeId != null">
        #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNoticeCustomer">
    update sys_notice_customer
    <set>
      <if test="noticeId != null">
        notice_id = #{noticeId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="isRead != null">
        is_read = #{isRead,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNoticeCustomer">
    update sys_notice_customer
    set notice_id = #{noticeId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      is_read = #{isRead,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!-- 查询该消息是否已读，已读则不用插入  -->
  <select id="checkIsRead" parameterType="map" resultType="int">
    select count(1)
        from sys_notice_customer
    where status = 1
    <if test="customerId != null">
      and customer_id = #{customerId,jdbcType=INTEGER}
    </if>
    <if test="noticeId != null">
      and notice_id = #{noticeId,jdbcType=INTEGER}
    </if>
  </select>

  <select id="selectNotReadNoticeMessageByCustomerId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_notice_customer
    where `status` = 1
    and is_read = 2
    and customer_id = #{customerId}
  </select>

  <select id="selectNoticeMessageByCustomerId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_notice_customer
    where `status` = 1
    and is_read = 1
    and customer_id = #{customerId}
  </select>

  <insert id="insertList">
    insert into sys_notice_customer (notice_id, customer_id,
      is_read, `status`)
    values
    <foreach collection="noticeCustomerList" item="item" separator=",">
      (#{item.noticeId,jdbcType=INTEGER}, #{item.customerId,jdbcType=INTEGER},
      #{item.isRead,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER})
    </foreach>
  </insert>

  <update id="updateByCustomerIdAndNoticeIds">
    update sys_notice_customer
    <set>
      is_read = 1
    </set>
    <where>
      customer_id = #{customerId}
      and notice_id in
      <foreach collection="updateNoticeIdList" item="noticeId" open="(" close=")" separator=",">
        #{noticeId}
      </foreach>
    </where>
  </update>

</mapper>
