<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.sys.SysNoticeMapper">
  <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.sys.SysNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice_title" jdbcType="VARCHAR" property="noticeTitle" />
    <result column="notice_content" jdbcType="VARCHAR" property="noticeContent" />
    <result column="notice_type" jdbcType="INTEGER" property="noticeType" />
    <result column="publisher" jdbcType="VARCHAR" property="publisher" />
    <result column="publisher_id" jdbcType="VARCHAR" property="publisherId" />
    <result column="read_id" jdbcType="VARCHAR" property="readId" />
    <result column="is_timing_task" jdbcType="INTEGER" property="isTimingTask" />
    <result column="is_initiative" jdbcType="INTEGER" property="isInitiative" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="overdue_time" jdbcType="VARCHAR" property="overdueTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="isRead" jdbcType="INTEGER" property="isRead" />
  </resultMap>
  <sql id="Base_Column_List">
    id, notice_title, notice_content, notice_type, publisher, publisher_id, read_id,
    is_timing_task, is_initiative,
    create_time, overdue_time, `status`
  </sql>

  <sql id="table_List">
    t.id, t.notice_title, t.notice_content, t.notice_type, t.publisher, t.publisher_id, t.read_id,
    t.is_timing_task, t.is_initiative,
    t.create_time, t.overdue_time, t.`status`
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNotice">
    insert into sys_notice (id, notice_title, notice_content,
      notice_type, publisher, publisher_id,
      read_id, is_timing_task, is_initiative, create_time, overdue_time, `status`
      )
    values (#{id,jdbcType=INTEGER}, #{noticeTitle,jdbcType=VARCHAR}, #{noticeContent,jdbcType=VARCHAR},
      #{noticeType,jdbcType=INTEGER}, #{publisher,jdbcType=VARCHAR}, #{publisherId,jdbcType=VARCHAR},
      #{readId,jdbcType=VARCHAR}, #{isTimingTask,jdbcType=INTEGER}, #{isInitiative,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{overdueTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNotice">
    insert into sys_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noticeTitle != null">
        notice_title,
      </if>
      <if test="noticeContent != null">
        notice_content,
      </if>
      <if test="noticeType != null">
        notice_type,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
      <if test="publisherId != null">
        publisher_id,
      </if>
      <if test="readId != null">
        read_id,
      </if>
      <if test="isTimingTask != null">
        is_timing_task,
      </if>
      <if test="isInitiative != null">
        is_initiative,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="overdueTime != null">
        overdue_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="noticeTitle != null">
        #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null">
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publisherId != null">
        #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="readId != null">
        #{readId,jdbcType=VARCHAR},
      </if>
      <if test="isTimingTask != null">
        #{isTimingTask,jdbcType=INTEGER},
      </if>
      <if test="isInitiative != null">
        #{isInitiative,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overdueTime != null">
        #{overdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNotice">
    update sys_notice
    <set>
      <if test="noticeTitle != null">
        notice_title = #{noticeTitle,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null">
        notice_content = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="noticeType != null">
        notice_type = #{noticeType,jdbcType=INTEGER},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=VARCHAR},
      </if>
      <if test="publisherId != null">
        publisher_id = #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="readId != null">
        read_id = #{readId,jdbcType=VARCHAR},
      </if>
      <if test="isTimingTask != null">
        is_timing_task = #{isTimingTask,jdbcType=INTEGER},
      </if>
      <if test="isInitiative != null">
        is_initiative = #{isInitiative,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overdueTime != null">
        overdue_time = #{overdueTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.sys.SysNotice">
    update sys_notice
    set notice_title = #{noticeTitle,jdbcType=VARCHAR},
      notice_content = #{noticeContent,jdbcType=VARCHAR},
      notice_type = #{noticeType,jdbcType=INTEGER},
      publisher = #{publisher,jdbcType=VARCHAR},
      publisher_id = #{publisherId,jdbcType=VARCHAR},
      read_id = #{readId,jdbcType=VARCHAR},
      is_timing_task = #{isTimingTask,jdbcType=INTEGER},
      is_initiative = #{isInitiative,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      overdue_time = #{overdueTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="selectAllNoticeListByCustomerId" resultMap="BaseResultMap">
    SELECT <include refid="table_List"/>, snc.is_read as isRead
    from sys_notice t
    left join sys_notice_customer snc on t.id = snc.notice_id and snc.`status` = 1
    where
    t.`status` = 1
    and t.is_timing_task = 0
    and (
      t.read_id = 'all'
      OR t.read_id = #{customerId,jdbcType=VARCHAR}
    )
      <if test="isRead != '' and isRead == 1">
        and snc.is_read = 1
      </if>
      <if test="isRead != '' and isRead == 0">
        and snc.is_read != 1
      </if>
    order by t.create_time desc
    LIMIT #{pageNumber},#{pageSize}
  </select>

<!-- 查找客户的所有消息 -->
  <select id="selectNoticeListByCustomerId" parameterType="map" resultMap="BaseResultMap">
    SELECT
	notice.id, notice.notice_title, notice.notice_content,
	notice.notice_type, notice.publisher, notice.publisher_id,
	notice.read_id, notice.is_timing_task, notice.is_initiative,
    notice.create_time, notice.overdue_time, notice.status,
    IFNULL(
		(
			SELECT
				count(c.id)
			FROM
				sys_notice_customer c
			WHERE
				c.notice_id = notice.id
			and c.status = 1
			and c.customer_id = #{customerId,jdbcType=VARCHAR}
		),
		0
        ) AS isRead
    FROM
        sys_notice notice
    WHERE
        notice. STATUS = 1
    AND notice.is_timing_task = 0
    AND (
        notice.read_id = 'all'
        OR notice.read_id = #{customerId,jdbcType=VARCHAR}
    )
    <if test="content != null and content != ''">
      and notice.notice_content like concat('%',#{content,jdbcType=VARCHAR},'%')
    </if>
    <if test="isRead != '' and isRead == 1">
      and (
      SELECT
      count(c.id)
      FROM
      sys_notice_customer c
      WHERE
      c.notice_id = notice.id
      and c.customer_id = #{customerId,jdbcType=VARCHAR}
      and c.status = 1
      ) > 0
    </if>
    <if test="isRead != '' and isRead == 0">
      and (
      SELECT
      count(c.id)
      FROM
      sys_notice_customer c
      WHERE
      c.notice_id = notice.id
      and c.customer_id = #{customerId,jdbcType=VARCHAR}
      and c.status = 1
      ) != 1
    </if>
    order by notice.create_time desc
    LIMIT #{pageNumber},#{pageSize}
  </select>
<!-- 计数 -->
  <select id="countSelectNoticeListByCustomerId" parameterType="map" resultType="int">
    SELECT
	    count(1)
    FROM
        sys_notice notice
    WHERE
        notice. STATUS = 1
    AND notice.is_timing_task = 0
    AND (
        notice.read_id = 'all'
        OR notice.read_id = #{customerId,jdbcType=VARCHAR}
    )
    <if test="content != null and content != ''">
      and notice.notice_content like concat('%',#{content,jdbcType=VARCHAR},'%')
    </if>
    <if test="isRead != '' and isRead == 1">
      and (
      SELECT
      count(c.id)
      FROM
      sys_notice_customer c
      WHERE
      c.notice_id = notice.id
      and c.customer_id = #{customerId,jdbcType=VARCHAR}
      and c.status = 1
      ) > 0
    </if>
    <if test="isRead != '' and isRead == 0">
      and (
      SELECT
      count(c.id)
      FROM
      sys_notice_customer c
      WHERE
      c.notice_id = notice.id
      and c.customer_id = #{customerId,jdbcType=VARCHAR}
      and c.status = 1
      ) = 0
    </if>
  </select>


  <select id="selectNoticeListByGroupId" resultMap="BaseResultMap">
      select <include refid="table_List"/>,
      IFNULL(
        (SELECT
          is_read
        FROM
          sys_notice_customer snc
        WHERE
          snc.notice_id = t.id and snc.status = 1),
        0
      ) AS isRead
      from sys_notice t
      where t.`status` = 1
      and t.notice_type = 3
      and t.read_id in
      <foreach collection="groupIdList" item="groupId" open="(" close=")" separator=",">
          #{groupId}
      </foreach>
  </select>



  <select id="selectNotReadNoticeListByCustomerId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_notice
    where `status` = 1
    and notice_type in (1,2)
    and is_timing_task = 0
    and (read_id = #{customerId} or read_id = 'all')
    <if test="isReadNoticeIdList != null">
      and id not in
      <foreach collection="isReadNoticeIdList" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>

  <select id="selectNotReadNoticeListByGroupId" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from sys_notice
    where `status` = 1
    and notice_type = 3
    and is_timing_task = 0
    and overdue_time &gt;= now()
    and read_id in
    <foreach collection="groupIdList" item="groupId" open="(" close=")" separator=",">
      #{groupId}
    </foreach>
    <if test="isReadNoticeIdList != null">
      and id not in
      <foreach collection="isReadNoticeIdList" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </if>
  </select>

</mapper>
