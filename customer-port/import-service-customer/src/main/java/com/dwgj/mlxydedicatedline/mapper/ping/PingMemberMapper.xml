<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dwgj.mlxydedicatedline.mapper.ping.PingMemberMapper">
  <resultMap id="BaseResultMap" type="com.dwgj.mlxydedicatedline.entity.ping.PingMember">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="p_id" jdbcType="INTEGER" property="pId" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="pick_time" jdbcType="TIMESTAMP" property="pickTime" />
    <result column="is_picked" jdbcType="INTEGER" property="isPicked" />
    <result column="sort_no" jdbcType="INTEGER" property="sortNo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="last_update_id" jdbcType="INTEGER" property="lastUpdateId" />

    <result column="goodsName" jdbcType="VARCHAR" property="goodsName" />
    <result column="deliveryName" jdbcType="VARCHAR" property="deliveryName" />
    <result column="customerName" jdbcType="VARCHAR" property="customerName" />
    <result column="headimgurl" jdbcType="VARCHAR" property="headimgurl" />
    <result column="goodsNum" jdbcType="VARCHAR" property="goodsNum" />
    <result column="goodsWeight" jdbcType="DOUBLE" property="goodsWeight" />

  </resultMap>
  <sql id="Base_Column_List">
    id, p_id, customer_id, goods_id, add_time, pick_time, is_picked, sort_no, `status`,
    create_time, create_id, last_update_time, last_update_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ping_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ping_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember">
    insert into ping_member (id, p_id, customer_id,
      goods_id, add_time, pick_time,
      is_picked, sort_no, `status`,
      create_time, create_id, last_update_time,
      last_update_id)
    values (#{id,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER},
      #{goodsId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, #{pickTime,jdbcType=TIMESTAMP},
      #{isPicked,jdbcType=INTEGER}, #{sortNo,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER}, #{lastUpdateTime,jdbcType=TIMESTAMP},
      #{lastUpdateId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember">
    insert into ping_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="pId != null">
        p_id,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="pickTime != null">
        pick_time,
      </if>
      <if test="isPicked != null">
        is_picked,
      </if>
      <if test="sortNo != null">
        sort_no,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="lastUpdateId != null">
        last_update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pId != null">
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pickTime != null">
        #{pickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPicked != null">
        #{isPicked,jdbcType=INTEGER},
      </if>
      <if test="sortNo != null">
        #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        #{lastUpdateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember">
    update ping_member
    <set>
      <if test="pId != null">
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pickTime != null">
        pick_time = #{pickTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPicked != null">
        is_picked = #{isPicked,jdbcType=INTEGER},
      </if>
      <if test="sortNo != null">
        sort_no = #{sortNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        last_update_id = #{lastUpdateId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember">
    update ping_member
    set p_id = #{pId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      pick_time = #{pickTime,jdbcType=TIMESTAMP},
      is_picked = #{isPicked,jdbcType=INTEGER},
      sort_no = #{sortNo,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_id = #{lastUpdateId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="insertPinMembers" parameterType="list">
    insert into ping_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id, p_id, customer_id,
      goods_id, add_time, pick_time,
      is_picked, sort_no, `status`,
      create_time, create_id, last_update_time,
      last_update_id
    </trim>
    values
    <foreach collection="list" item="member" separator=",">
      (#{member.id,jdbcType=INTEGER}, #{member.pId,jdbcType=INTEGER}, #{member.customerId,jdbcType=INTEGER},
      #{member.goodsId,jdbcType=INTEGER}, #{member.addTime,jdbcType=TIMESTAMP}, #{member.pickTime,jdbcType=TIMESTAMP},
      #{member.isPicked,jdbcType=INTEGER}, #{member.sortNo,jdbcType=INTEGER}, #{member.status,jdbcType=INTEGER},
      #{member.createTime,jdbcType=TIMESTAMP}, #{member.createId,jdbcType=INTEGER}, #{member.lastUpdateTime,jdbcType=TIMESTAMP},
      #{member.lastUpdateId,jdbcType=INTEGER})
    </foreach>
  </insert>

  <select id="getMemberGoodsByPinId" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember" resultMap="BaseResultMap">
    select pm.*,g.goods_name as goodsName,dc.delivery_name as deliveryName,
    g.kg as goodsWeight, g.vol as goodsVol, customer_name as customerName
    from ping_member pm
    inner join goods g on g.id = pm.goods_id and g.status = 1
    left join delivery_company dc on dc.delivery_no = g.delivery_no and dc.status = 1
    left join customer cust on pm.customer_id = cust.id and cust.status = 1
    where pm.p_id = #{pId,jdbcType=INTEGER} and pm.customer_id = #{customerId,jdbcType=INTEGER} and pm.status = 1
  </select>

  <select id="getMemberGoodsListByOrderNumber" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember" resultType="string">
    select pm.goods_id from ping_member pm
    where pm.p_id = #{pId,jdbcType=INTEGER} and pm.customer_id = #{customerId,jdbcType=INTEGER} and pm.status = 1
  </select>

<!--  除了团长自己的，该拼团下有多少个包裹 -->
  <select id="countGoodsNumByPinIdExceptLeader" parameterType="com.dwgj.mlxydedicatedline.entity.ping.PingMember" resultType="int">
    select count(1) from ping_member pm
    where pm.p_id = #{pId,jdbcType=INTEGER} and pm.customer_id != #{customerId,jdbcType=INTEGER} and pm.status = 1
  </select>

  <update id="deleteByGoodsIds" parameterType="list">
    update ping_member set status = 0,last_update_time = now()
        where   goods_id  in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
  </update>
<!-- 获取所有的成员的统计详情信息 -->
  <select id="getAllMembersGoodsSumByPinId" parameterType="string" resultMap="BaseResultMap">
    SELECT
	pm.p_id,
	pm.customer_id,
	c.customer_name customerName,c.headimgurl,
    (select count(1) from ping_member where status = 1 and p_id = pm.p_id and customer_id = pm.customer_id) goodsNum,
    (select add_time from ping_member where status = 1 and p_id = pm.p_id and customer_id = pm.customer_id limit 1)add_time,
    sum(kg) goodsWeight
    FROM
        ping_member pm
    LEFT JOIN goods g on g.id = pm.goods_id
    LEFT JOIN customer c on c.id = pm.customer_id
    WHERE
        pm.p_id = #{pId,jdbcType=INTEGER} and pm.status = 1
    GROUP BY
        pm.p_id,
        pm.customer_id,c.customer_name,c.headimgurl
  </select>

  <select id="getAllMembersGoodsSumExceptLeaderByPinId" parameterType="string" resultMap="BaseResultMap">
    SELECT
	pm.p_id,
	pm.customer_id,
	c.customer_name customerName,c.headimgurl,
    (select count(1) from ping_member where status = 1 and p_id = pm.p_id and customer_id = pm.customer_id) goodsNum,
    (select add_time from ping_member where status = 1 and p_id = pm.p_id and customer_id = pm.customer_id limit 1)add_time,
    sum(kg) goodsWeight
    FROM
        ping_member pm
    LEFT JOIN goods g on g.id = pm.goods_id
    LEFT JOIN customer c on c.id = pm.customer_id
    WHERE
        pm.p_id = #{pId,jdbcType=INTEGER} and pm.status = 1
        and pm.customer_id != #{learderId,jdbcType=VARCHAR}
    GROUP BY
        pm.p_id,
        pm.customer_id,c.customer_name,c.headimgurl
  </select>

<!--  获取所有拼团下成员的包裹信息-->
  <select id="getAllGoodsByPinIdAndCustomerId" parameterType="map" resultType="com.dwgj.mlxydedicatedline.entity.Goods">
    select * from goods where id in (
        select goods_id from ping_member where status = 1 and p_id = #{pId,jdbcType=VARCHAR} and customer_id = #{customerId,jdbcType=VARCHAR}
    ) and `status` = 1
  </select>

  <select id="getMembersByPinId" parameterType="string" resultMap="BaseResultMap">
     select pm.*,g.goods_name as goodsName,dc.delivery_name as deliveryName,
    g.kg as goodsWeight, g.vol as goodsVol, customer_name as customerName
    from ping_member pm
    inner join goods g on g.id = pm.goods_id and g.status = 1
    left join delivery_company dc on dc.delivery_no = g.delivery_no and dc.status = 1
    left join customer cust on pm.customer_id = cust.id and cust.status = 1
    where pm.p_id = #{pId,jdbcType=INTEGER} and pm.status = 1
  </select>

  <select id="selectPeopleNumByPid" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(customer_id)
    from (SELECT count(customer_id) as customer_id FROM ping_member WHERE p_id = #{pid} AND STATUS = 1 group by customer_id) a
  </select>

  <select id="selectPackageSumByPid" resultType="java.lang.Integer">
    SELECT count(*) FROM ping_member WHERE p_id = #{pid} AND STATUS = 1
  </select>

</mapper>
