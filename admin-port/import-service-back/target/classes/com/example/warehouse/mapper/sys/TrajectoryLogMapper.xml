<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.sys.TrajectoryLogMapper">
  <resultMap id="BaseResultMap" type="com.example.warehouse.entity.sys.TrajectoryLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="system_code" jdbcType="VARCHAR" property="systemCode" />
    <result column="shipper_carrier" jdbcType="VARCHAR" property="shipperCarrier" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="check_num" jdbcType="INTEGER" property="checkNum" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_inside" jdbcType="INTEGER" property="isInside" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_number, system_code, shipper_carrier, check_time, `status`, check_num, version, create_time,is_inside
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from trajectory_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trajectory_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.warehouse.entity.sys.TrajectoryLog">
    insert into trajectory_log (id, order_number, system_code, shipper_carrier, check_time,
      `status`, check_num, version,
      create_time,is_inside)
    values
      (#{id,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{systemCode,jdbcType=VARCHAR},
       #{shipperCarrier,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER}, #{checkNum,jdbcType=INTEGER}, #{version,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},#{isInside,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.warehouse.entity.sys.TrajectoryLog">
    insert into trajectory_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="systemCode != null">
        system_code,
      </if>
      <if test="shipperCarrier != null">
        shipper_carrier,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="checkNum != null">
        check_num,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isInside != null">
        is_inside,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="systemCode != null">
        #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="shipperCarrier != null">
        #{shipperCarrier,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="checkNum != null">
        #{checkNum,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isInside != null">
        #{isInside,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.sys.TrajectoryLog">
    update trajectory_log
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="systemCode != null">
        system_code = #{systemCode,jdbcType=VARCHAR},
      </if>
      <if test="shipperCarrier != null">
        shipper_carrier = #{shipperCarrier,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="checkNum != null">
        check_num = #{checkNum,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isInside != null">
        is_inside = #{isInside,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByOrderNumber" parameterType="com.example.warehouse.entity.sys.TrajectoryLog">
    update trajectory_log
    <set>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="checkNum != null">
        check_num = #{checkNum,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isInside != null">
        is_inside = #{isInside,jdbcType=INTEGER},
      </if>
    </set>
    where order_number = #{orderNumber,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.sys.TrajectoryLog">
    update trajectory_log
    set
      order_number = #{orderNumber,jdbcType=VARCHAR},
      system_code = #{systemCode,jdbcType=VARCHAR},
      shipper_carrier = #{shipperCarrier,jdbcType=VARCHAR},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER},
      check_num = #{checkNum,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_inside = #{isInside,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <update id="batchUpdateByOrderNumber">
      <foreach collection="trajectoryLogList" item="item" separator=";">
        update trajectory_log
        <set>
          system_code = #{item.systemCode}
        </set>
        <where>
          order_number = #{item.orderNumber}
        </where>
      </foreach>
    </update>

    <insert id="batchInsert" parameterType="list">
    insert into trajectory_log (id, order_number, system_code, shipper_carrier, check_time,
    `status`, check_num, version,is_inside,create_time
    )
    values
    <foreach collection="list" index="index" separator="," item="item">
      (#{item.id,jdbcType=INTEGER}, #{item.orderNumber,jdbcType=VARCHAR}, #{item.systemCode,jdbcType=VARCHAR},
      #{item.shipperCarrier,jdbcType=VARCHAR}, #{item.checkTime,jdbcType=TIMESTAMP},
      #{item.status,jdbcType=INTEGER}, #{item.checkNum,jdbcType=INTEGER}, #{item.version,jdbcType=INTEGER},
      #{item.isInside,jdbcType=INTEGER} ,#{item.createTime,jdbcType=TIMESTAMP}
      )
    </foreach>
  </insert>

  <select id="checkOrderNumberLog" resultType="int" parameterType="string">
    select count(1) from trajectory_log where status = 1
    and order_number = #{orderNumber,jdbcType=VARCHAR} and DATE_FORMAT(check_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
  </select>

  <select id="getSingleTrackLog" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from trajectory_log
    where order_number = #{orderNumber,jdbcType=VARCHAR} and status = 1
  </select>

  <select id="checkTrackLog" parameterType="string" resultType="int">
    select
     count(1)
    from trajectory_log
    where DATE_FORMAT(check_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
    AND STATUS = 1 and order_number = #{orderNumber,jdbcType=VARCHAR}
  </select>

  <select id="checkTrackLogIsIn" parameterType="string" resultType="int">
    select
     count(1)
    from trajectory_log
    where
    STATUS = 1 and order_number = #{orderNumber,jdbcType=VARCHAR}
  </select>

  <select id="checkTrackIsInside" parameterType="string" resultType="int">
    select
     count(1)
    from trajectory_log
    where
    STATUS = 1 and order_number = #{orderNumber,jdbcType=VARCHAR} and is_inside = 1
  </select>

  <select id="getTrajectoryLogList" resultMap="BaseResultMap" parameterType="map">
    select
    <include refid="Base_Column_List" />
    from trajectory_log
    where status = 1
    <if test="orderNumber != null and orderNumber != ''">
      and order_number like concat('%',#{orderNumber,jdbcType=VARCHAR},'%')
    </if>
    <if test="systemCode != null and systemCode != ''">
      and system_code like concat('%',#{systemCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="isInside == 1">
      and is_inside  = #{isInside,jdbcType=INTEGER}
    </if>
    <if test="isInside == 2">
      and(is_inside is null or is_inside = 0)
    </if>
    ORDER BY create_time desc
    LIMIT #{pageNumber},#{pageSize}
  </select>

  <select id="countTrajectoryLogList" resultType="int" parameterType="map">
    select
    count(1)
    from trajectory_log
    where status = 1
    <if test="orderNumber != null and orderNumber != ''">
      and order_number like concat('%',#{orderNumber,jdbcType=VARCHAR},'%')
    </if>
    <if test="systemCode != null and systemCode != ''">
      and system_code like concat('%',#{systemCode,jdbcType=VARCHAR},'%')
    </if>
    <if test="isInside == 1">
      and is_inside  = #{isInside,jdbcType=INTEGER}
    </if>
    <if test="isInside == 2">
      and(is_inside is null or is_inside = 0)
    </if>
  </select>

  <select id="getTrajectoryLogListByOrderNumber" resultType="com.example.warehouse.entity.sys.TrajectoryLog">
     select order_number as orderNumber
     from trajectory_log
     <where>
       `status` = 1
       and order_number in
       <foreach collection="orderNumbers" item="orderNumber" separator="," open="(" close=")">
         #{orderNumber}
       </foreach>
     </where>
  </select>

    <select id="selectLogListByOrderNumber" resultType="com.example.warehouse.entity.sys.TrajectoryLog">
      select
      order_number as orderNumber, system_code as systemCode, shipper_carrier as shipperCarrier
      from trajectory_log
      where status = 1
      and order_number in
      <foreach collection="orderNumberList" item="orderNumber" open="(" separator="," close=")">
        #{orderNumber}
      </foreach>

    </select>
</mapper>
