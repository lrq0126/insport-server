<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.dwReceipt.ContainerMapper">
  <resultMap id="BaseResultMap" type="com.example.warehouse.entity.Container">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="isout" jdbcType="INTEGER" property="isout" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="last_update_id" jdbcType="INTEGER" property="lastUpdateId" />
    <result column="totalNumber" jdbcType="INTEGER" property="totalNumber" />
    <result column="vioceUrl" jdbcType="VARCHAR" property="vioceUrl"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `operator`, isout, `status`, DATE_FORMAT(create_time,'%Y-%m-%d %k:%i:%s') as create_time, create_id, last_update_time,
    last_update_id,vioce_url as vioceUrl
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from container
    where id = #{id,jdbcType=INTEGER}
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update container set status = 0
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insert" parameterType="com.example.warehouse.entity.Container">
    insert into container (id, `name`, `operator`,
      isout, `status`, create_time,
      create_id, last_update_time, last_update_id,vioce_url
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR},
      #{isout,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, now(),
      #{createId,jdbcType=INTEGER}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{lastUpdateId,jdbcType=INTEGER},
      #{vioceUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.warehouse.entity.Container">
    insert into container
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="isout != null">
        isout,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="lastUpdateId != null">
        last_update_id,
      </if>
      <if test="vioceUrl != null">
        vioce_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="isout != null">
        #{isout,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        #{lastUpdateId,jdbcType=INTEGER},
      </if>
      <if test="vioceUrl != null">
        #{vioceUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.Container">
    update container
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="isout != null">
        isout = #{isout,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        last_update_id = #{lastUpdateId,jdbcType=INTEGER},
      </if>
      <if test="vioceUrl != null">
        vioce_url = #{vioceUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.Container">
    update container
    set `name` = #{name,jdbcType=VARCHAR},
      `operator` = #{operator,jdbcType=VARCHAR},
      isout = #{isout,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_id = #{lastUpdateId,jdbcType=INTEGER},
      vioce_url = #{vioceUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getContainerList" parameterType="map" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>,(select count(1) from container_number where container_id = c.id and status = 1)as totalNumber
     from container c where c.status = 1
      <if test="name != null">
        and c.`name`like concat('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="isout != null">
        and c.isout = #{isout,jdbcType=INTEGER}
      </if>
      ORDER BY
      c.create_time DESC
      LIMIT #{pageNumber},#{pageSize}
  </select>

  <select id="countContainerList" parameterType="map" resultType="int">
    select count(1) from container c where c.status = 1
      <if test="name != null">
        and c.`name`like concat('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="isout != null">
        and c.isout = #{isout,jdbcType=INTEGER}
      </if>
  </select>

<!--  删除前检查是否有关联的单号，有则不能删除-->
  <select id="checkIsRalateById" parameterType="int" resultType="int">
    select count(1) from container_number cn where cn.`status` = 1 and cn.container_id = #{id,jdbcType=INTEGER}
  </select>

  <update id="outContainers" parameterType="list">
        update container set isout = 1 where id in (
            <foreach collection="list" separator="," item="id">
              #{id}
            </foreach>
        )
  </update>

  <select id="getContainerItemList" parameterType="string" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from container c where c.status = 1
    <if test="isout != null">
      and c.isout = #{isout,jdbcType=INTEGER}
    </if>
    ORDER BY
    c.create_time DESC
  </select>

  <update id="deleteContainers" parameterType="list">
    update container set status = 0 where id in (
    <foreach collection="list" separator="," item="id">
      #{id}
    </foreach>
    )
  </update>
</mapper>
