<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.sys.SysStatisticalMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.sys.SysStatistical">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="new_customer_num" jdbcType="INTEGER" property="newCustomerNum"/>
        <result column="recharge_num" jdbcType="INTEGER" property="rechargeNum"/>
        <result column="recharge_amount_sum" jdbcType="DECIMAL" property="rechargeAmountSum"/>
        <result column="ware_customer_sum" jdbcType="INTEGER" property="wareCustomerSum"/>
        <result column="out_ware_customer_sum" jdbcType="INTEGER" property="outWareCustomerSum"/>
        <result column="in_ware_num" jdbcType="INTEGER" property="inWareNum"/>
        <result column="re_in_ware_num" jdbcType="INTEGER" property="reInWareNum"/>
        <result column="apply_pack_num" jdbcType="INTEGER" property="applyPackNum"/>
        <result column="packed_num" jdbcType="INTEGER" property="packedNum"/>
        <result column="goods_num" jdbcType="INTEGER" property="goodsNum"/>
        <result column="goods_weight_sum" jdbcType="DOUBLE" property="goodsWeightSum"/>
        <result column="goods_vol_sum" jdbcType="DOUBLE" property="goodsVolSum"/>
        <result column="in_ware_weight_sum" jdbcType="DOUBLE" property="inWareWeightSum"/>
        <result column="out_ware_weight_sum" jdbcType="DOUBLE" property="outWareWeightSum"/>
        <result column="out_ware_num" jdbcType="INTEGER" property="outWareNum"/>
        <result column="out_ware_goods_num" jdbcType="INTEGER" property="outWareGoodsNum"/>
        <result column="receipt_num" jdbcType="INTEGER" property="receiptNum"/>
        <result column="pay_order_amount_sum" jdbcType="INTEGER" property="payOrderAmountSum"/>
    </resultMap>

    <!-- 字段 -->
    <sql id="Base_Column_List">
		id, status, version,
		new_customer_num, recharge_num, recharge_amount_sum,
		ware_customer_sum, out_ware_customer_sum, in_ware_num, re_in_ware_num, apply_pack_num,packed_num,
		goods_num, goods_weight_sum, goods_vol_sum, in_ware_weight_sum, out_ware_weight_sum,
		out_ware_num,out_ware_goods_num,receipt_num, pay_order_amount_sum,
		DATE_FORMAT(create_time,'%Y-%m-%d') as create_time,
		DATE_FORMAT(update_time,'%Y-%m-%d') as update_time
	</sql>

    <!-- 插入字段 -->
    <sql id="Insert_Base_Column_List">
		id, create_time,update_time, status, version,
		new_customer_num, recharge_num, recharge_amount_sum,
		ware_customer_sum, out_ware_customer_sum, in_ware_num, re_in_ware_num, apply_pack_num, packed_num,
		goods_num, goods_weight_sum, goods_vol_sum, in_ware_weight_sum, out_ware_weight_sum,
		out_ware_num,out_ware_goods_num,receipt_num, pay_order_amount_sum
	</sql>
    <!-- 插入字段实际数值 -->
    <sql id="Insert_Column_Values">
		#{id},#{createTime},#{updateTime},#{status},#{version},
		#{newCustomerNum},#{rechargeNum},#{rechargeAmountSum},
		#{wareCustomerSum},#{outWareCustomerSum}, #{inWareNum},#{reInWareNum},#{applyPackNum},#{packedNum},
		#{goodsNum}, #{goodsWeightSum},#{goodsVolSum},#{inWareWeightSum},#{outWareWeightSum},
		#{outWareNum},#{outWareGoodsNum},#{receiptNum}, #{payOrderAmountSum}
	</sql>

    <!-- 插入字段（判空） -->
    <sql id="Base_Column_List_NotNull">
        <if test="id != null and id != ''">
            id,
        </if>
        <if test="createTime != null and createTime != ''">
            create_time,
        </if>
        <if test="updateTime != null and updateTime != ''">
            update_time,
        </if>
        <if test="status != null and status != ''">
            status,
        </if>
        <if test="version != null and version != ''">
            version,
        </if>
        <if test="newCustomerNum != null and newCustomerNum != ''">
            new_customer_num,
        </if>
        <if test="rechargeNum != null and rechargeNum != ''">
            recharge_num,
        </if>
        <if test="rechargeAmountSum != null and rechargeAmountSum != ''">
            recharge_amount_sum,
        </if>
        <if test="wareCustomerSum != null and wareCustomerSum != ''">
            ware_customer_sum,
        </if>
        <if test="outWareCustomerSum != null and outWareCustomerSum != ''">
            out_ware_customer_sum,
        </if>
        <if test="inWareNum != null and inWareNum != ''">
            in_ware_num,
        </if>
        <if test="reInWareNum != null and reInWareNum != ''">
            re_in_ware_num,
        </if>
        <if test="applyPackNum != null and applyPackNum != ''">
            apply_pack_num,
        </if>
        <if test="packedNum != null and packedNum != ''">
            packed_num,
        </if>
        <if test="goodsNum != null and goodsNum != ''">
            goods_num,
        </if>
        <if test="goodsWeightSum != null and goodsWeightSum != ''">
            goods_weight_sum,
        </if>
        <if test="goodsVolSum != null and goodsVolSum != ''">
            goods_vol_sum,
        </if>
        <if test="inWareWeightSum != null and inWareWeightSum != ''">
            in_ware_weight_sum,
        </if>
        <if test="outWareWeightSum != null and outWareWeightSum != ''">
            out_ware_weight_sum,
        </if>
        <if test="outWareNum != null and outWareNum != ''">
            out_ware_num,
        </if>
        <if test="outWareGoodsNum != null and outWareGoodsNum != ''">
            out_ware_goods_num,
        </if>
        <if test="receiptNum != null and receiptNum != ''">
            receipt_num,
        </if>
        <if test="payOrderAmountSum != null and payOrderAmountSum != ''">
            pay_order_amount_sum,
        </if>
    </sql>

    <!-- 插入字段实际数值(判空) -->
    <sql id="Insert_Column_Values_NotNull">
        <if test="id != null and id != ''">
            #{id},
        </if>
        <if test="createTime != null and createTime != ''">
            #{createTime},
        </if>
        <if test="updateTime != null and updateTime != ''">
            #{updateTime},
        </if>
        <if test="status != null and status != ''">
            #{status},
        </if>
        <if test="version != null and version != ''">
            #{version},
        </if>
        <if test="newCustomerNum != null and newCustomerNum != ''">
            #{newCustomerNum},
        </if>
        <if test="rechargeNum != null and rechargeNum != ''">
            #{rechargeNum},
        </if>
        <if test="rechargeAmountSum != null and rechargeAmountSum != ''">
            #{rechargeAmountSum},
        </if>
        <if test="wareCustomerSum != null and wareCustomerSum != ''">
            #{wareCustomerSum},
        </if>
        <if test="outWareCustomerSum != null and outWareCustomerSum != ''">
            #{outWareCustomerSum},
        </if>
        <if test="inWareNum != null and inWareNum != ''">
            #{inWareNum},
        </if>
        <if test="reInWareNum != null and reInWareNum != ''">
            #{reInWareNum},
        </if>
        <if test="applyPackNum != null and applyPackNum != ''">
            #{applyPackNum},
        </if>
        <if test="packedNum != null and packedNum != ''">
            #{packedNum},
        </if>
        <if test="goodsNum != null and goodsNum != ''">
            #{goodsNum},
        </if>
        <if test="goodsWeightSum != null and goodsWeightSum != ''">
            #{goodsWeightSum},
        </if>
        <if test="goodsVolSum != null and goodsVolSum != ''">
            #{goodsVolSum},
        </if>
        <if test="inWareWeightSum != null and inWareWeightSum != ''">
            #{inWareWeightSum},
        </if>
        <if test="outWareWeightSum != null and outWareWeightSum != ''">
            #{outWareWeightSum},
        </if>
        <if test="outWareNum != null and outWareNum != ''">
            #{outWareNum},
        </if>
        <if test="outWareGoodsNum != null and outWareGoodsNum != ''">
            #{outWareGoodsNum},
        </if>
        <if test="receiptNum != null and receiptNum != ''">
            #{receiptNum},
        </if>
        <if test="payOrderAmountSum != null and payOrderAmountSum != ''">
            #{payOrderAmountSum},
        </if>
    </sql>

    <!-- 更新字段 -->
    <sql id="Update_Column">
		id = #{id},
    	create_time = #{createTime},
    	update_time = #{updateTime},
    	status = #{status},
    	version = #{version},
    	new_customer_num = #{newCustomerNum},
    	recharge_num = #{rechargeNum},
    	recharge_amount_sum = #{rechargeAmountSum},
    	ware_customer_sum = #{wareCustomerSum},
    	out_ware_customer_sum = #{outWareCustomerSum},
    	in_ware_num = #{inWareNum},
    	re_in_ware_num = #{reInWareNum},
    	apply_pack_num = #{applyPackNum},
    	packed_num = #{packedNum},
    	goods_num = #{goodsNum},
    	goods_weight_sum = #{goodsWeightSum},
    	goods_vol_sum = #{goodsVolSum},
    	in_ware_weight_sum = #{inWareWeightSum},
    	out_ware_weight_sum = #{outWareWeightSum},
    	out_ware_num = #{outWareNum},
    	out_ware_goods_num = #{outWareGoodsNum},
    	receipt_num = #{receiptNum},
    	pay_order_num = #{payOrderNum},
    	pay_order_amount_sum = #{payOrderAmountSum}
	</sql>

    <!-- 更新字段（判空） -->
    <sql id="Update_Column_NotNull">
        <if test="id != null and id != ''">
            id = #{id},
        </if>
        <if test="createTime != null and createTime != ''">
            create_time = #{createTime},
        </if>
        <if test="updateTime != null and updateTime != ''">
            update_time = #{updateTime},
        </if>
        <if test="status != null and status != ''">
            status = #{status},
        </if>
        <if test="version != null and version != ''">
            version = #{version},
        </if>
        <if test="newCustomerNum != null and newCustomerNum != ''">
            new_customer_num = #{newCustomerNum},
        </if>
        <if test="rechargeNum != null and rechargeNum != ''">
            recharge_num = #{rechargeNum},
        </if>
        <if test="rechargeAmountSum != null and rechargeAmountSum != ''">
            recharge_amount_sum = #{rechargeAmountSum},
        </if>
        <if test="wareCustomerSum != null and wareCustomerSum != ''">
            ware_customer_sum = #{wareCustomerSum},
        </if>
        <if test="outWareCustomerSum != null and outWareCustomerSum != ''">
            out_ware_customer_sum = #{outWareCustomerSum},
        </if>
        <if test="inWareNum != null and inWareNum != ''">
            in_ware_num = #{inWareNum},
        </if>
        <if test="reInWareNum != null and reInWareNum != ''">
            re_in_ware_num = #{reInWareNum},
        </if>
        <if test="applyPackNum != null and applyPackNum != ''">
            apply_pack_num = #{applyPackNum},
        </if>
        <if test="packedNum != null and packedNum != ''">
            packed_num = #{packedNum},
        </if>
        <if test="goodsNum != null and goodsNum != ''">
            goods_num = #{goodsNum},
        </if>
        <if test="goodsWeightSum != null and goodsWeightSum != ''">
            goods_weight_sum = #{goodsWeightSum},
        </if>
        <if test="goodsVolSum != null and goodsVolSum != ''">
            goods_vol_sum = #{goodsVolSum},
        </if>
        <if test="inWareWeightSum != null and inWareWeightSum != ''">
            in_ware_weight_sum = #{inWareWeightSum},
        </if>
        <if test="outWareWeightSum != null and outWareWeightSum != ''">
            out_ware_weight_sum = #{outWareWeightSum},
        </if>
        <if test="outWareNum != null and outWareNum != ''">
            out_ware_num = #{outWareNum},
        </if>
        <if test="outWareGoodsNum != null and outWareGoodsNum != ''">
            out_ware_goods_num = #{outWareGoodsNum},
        </if>
        <if test="receiptNum != null and receiptNum != ''">
            receipt_num = #{receiptNum},
        </if>
        <if test="payOrderAmountSum != null and payOrderAmountSum != ''">
            pay_order_amount_sum = #{payOrderAmountSum},
        </if>
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_statistical
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.example.warehouse.entity.sys.SysStatistical">
        insert into sys_statistical
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Base_Column_List"/>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Column_Values"/>
        </trim>
    </insert>

    <insert id="insertSelective" parameterType="com.example.warehouse.entity.sys.SysStatistical">
        insert into sys_statistical
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Base_Column_List_NotNull"/>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <include refid="Insert_Column_Values_NotNull"/>
        </trim>
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.sys.SysStatistical">
        update sys_statistical
        <set>
            <include refid="Update_Column"/>
        </set>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.sys.SysStatistical">
        update sys_statistical
        <set>
            <include refid="Update_Column_NotNull"/>
        </set>
    </update>

    <!-- 移除数据（物理删除） -->
    <delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from sys_statistical
		where id = #{id,jdbcType=INTEGER}
	</delete>

    <!-- 删除数据（逻辑删除） -->
    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update from sys_statistical
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>

    <!-- 删除数据（逻辑删除） -->
    <update id="deleteByKeyList" parameterType="java.lang.Integer">
        update sys_statistical
        set `status` = 0
        where
        status = 1
        and id in
        <foreach collection="idList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <!--    计算在仓库的客户人数（昨日） -->
    <select id="countGoodsInCustomerNum" resultType="int">
        SELECT
            ifnull(count(customer_no),0)
        FROM
            (
                SELECT
                    customer_no
                FROM
                    goods
                WHERE
                STATUS = 1
                AND goods_type = 1
                GROUP BY
                    customer_no
            ) a
    </select>

    <!--    计算今日入仓票数 -->
    <select id="countGoodsInWareTodayNum" resultType="int">
        SELECT
            count(1)
        FROM
            goods t
        WHERE
            DATE_FORMAT(t.in_storage_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and t.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    计算今日入仓重量 -->
    <select id="countGoodsInWareWeightTodaySum" resultType="java.lang.Double">
        SELECT
            ifnull(sum(kg),0)
        FROM
            goods t
        WHERE
            DATE_FORMAT(t.in_storage_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and t.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    计算昨日入仓票数 -->
    <select id="countGoodsInWareLastNum" resultType="int">
        SELECT
            count(1)
        FROM
            goods
        WHERE
            in_storage_time between #{startTime} and #{endTime}
            AND STATUS = 1
    </select>

    <!--    今日新增人数 -->
    <select id="countTodayAddCustomerNum" resultType="int">
        SELECT
            count(1)
        FROM
            customer
        WHERE
            STATUS = 1
            AND DATE_FORMAT(create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
    </select>

    <!--    昨日新增人数 -->
    <select id="countLastAddCustomerNum" resultType="int">
        SELECT
            count(1)
        FROM
            customer
        WHERE
            create_time between #{startTime} and #{endTime}
            AND STATUS = 1
    </select>

    <!--    今日预报包裹数 -->
    <select id="countTodayAddPackageNum" resultType="int">
        SELECT
            count(1)
        FROM
            goods t
        WHERE
            DATE_FORMAT(t.create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            AND t.create_id is not null
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and t.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    昨日预报包裹数 -->
    <select id="countLastAddPackageNum" resultType="int">
        SELECT
            count(1)
        FROM
            goods
        WHERE
            create_time between #{startTime} and #{endTime}
            AND STATUS = 1 AND create_id is not null
    </select>

    <!--    今日申请打包数 -->
    <select id="countTodayApplyPackNum" resultType="int">
        SELECT
            count(1)
        FROM
            customer_pack t
        WHERE
            DATE_FORMAT(t.create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and t.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    今日打包数 -->
    <select id="countTodayPackedNum" resultType="int">
        SELECT
            count(1)
        FROM
            customer_pack t
        WHERE
            DATE_FORMAT(t.pack_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and t.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    昨日申请打包数 -->

    <select id="countLastApplyPackNum" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            customer_pack
        WHERE
            create_time between #{startTime} and #{endTime}
            AND STATUS = 1
    </select>

    <select id="countLastPackedNum" resultType="int">
        SELECT
            count(1)
        FROM
            customer_pack
        WHERE
            pack_time between #{startTime} and #{endTime}
            AND STATUS = 1
    </select>

    <!--    今日充值数 -->
    <select id="countTodayAccountNum" resultType="int">
        SELECT
            count(t.id)
        FROM
            customer_account t
            left join `user` u on u.id = t.create_id
        WHERE
            DATE_FORMAT(t.create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            AND t.cost_type = 1
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and u.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    昨日充值数 -->
    <select id="countLastAccountNum" resultType="int">
        SELECT
            count(1)
        FROM
            customer_account
        WHERE
            create_time between #{startTime} and #{endTime}
        AND STATUS = 1
        AND cost_type = 1
    </select>

    <!--    今日充值金额 -->
    <select id="countTodayAccountAmount" resultType="java.math.BigDecimal">
        SELECT
            ifnull(sum(amount), 0)
        FROM
            customer_account t
            left join `user` u on u.id = t.create_id
        WHERE
            DATE_FORMAT(t.create_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
            AND t.STATUS = 1
            AND t.cost_type = 1
            <if test="commercialAreaId != null and commercialAreaId != ''">
                and u.commercial_area_id = #{commercialAreaId}
            </if>
    </select>

    <!--    昨日充值金额 -->
    <select id="countLastAccountAmount" resultType="java.math.BigDecimal">
        SELECT
            ifnull(sum(amount), 0)
        FROM
            customer_account
        WHERE
            create_time between #{startTime} and #{endTime}
            AND STATUS = 1
            AND cost_type = 1
    </select>

    <!--    仓库内总重量（昨日） -->
    <select id="countWarePackagesWeight" resultType="java.lang.Double">
        select ifnull(sum(kg),0) from goods
        where
        goods_type = 1
        and status = 1
    </select>

    <!--    仓库内包裹总数（昨日） -->
    <select id="countWarePackagesNum" resultType="int">
        select count(1) from goods
        where
        goods_type = 1
        and status = 1
    </select>

    <select id="countOutWareWeightToday" resultType="java.lang.Double">
        SELECT
            ifnull(sum(actual_weight), 0)
        FROM
            customer_pack t
        WHERE
            DATE_FORMAT(t.out_storage_time, '%Y-%m-%d') = DATE_FORMAT(now(), '%Y-%m-%d')
        AND t.STATUS = 1
        AND t.pack_type = 4
        <if test="commercialAreaId != null and commercialAreaId != ''">
            and t.commercial_area_id = #{commercialAreaId}
        </if>
    </select>

    <!-- 查询昨天入库重量 -->
    <select id="countInWareWeightLastDay" resultType="java.lang.Double">
        select ifnull(sum(kg),0)
        from goods
        where
            in_storage_time between #{startTime} and #{endTime}
            and status = 1
    </select>

    <!-- 查询昨天出库重量 -->
    <select id="countOutWareWeightLastDay" resultType="java.lang.Double">
        SELECT
            ifnull(sum(actual_weight), 0)
        FROM
            customer_pack
        WHERE
            out_storage_time between #{startTime} and #{endTime}
            AND STATUS = 1
    </select>

    <!--计算所有已经付钱发货的客户-->
    <select id="countAllOutWarehouseCustomer" resultType="int">
        select ifnull(count(1),0) from
        (select customer_id from customer_pack
        where
        status = 1
        and (pack_type = 3 or pack_type = 4)
        GROUP BY customer_id) a
    </select>

    <!--计算昨天已发货订单数量-->
    <select id="countOutWareNumLastDay" resultType="int">
        select ifnull(count(1),0) from
        (select id from customer_pack
        where
        status = 1
        and out_storage_time between #{startTime} and #{endTime}
        and (pack_type = 3 or pack_type = 4)
        ) a
    </select>

    <!--    仓库内总立方（昨日） -->
    <select id="countWarePackagesVol" resultType="java.lang.Double">
        select ifnull(sum(vol),0.0) from goods
        where
        goods_type = 1
        and status = 1
    </select>

    <select id="selectByConditions" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_statistical
        <where>
            status = 1
            and create_time &gt;= #{timeStart} and create_time &lt;= #{timeEnd}
        </where>
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_statistical
        <where>
            status = 1
        </where>
    </select>

    <select id="selectOrdersNum" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND customer_no IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
    </select>

    <select id="selectNewCustomerGoodsOrdersNum" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND customer_no IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        AND customer_no not in (
            SELECT customer_no FROM goods
            WHERE
                STATUS = 1
                AND create_time not BETWEEN #{registerTimeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>


    <select id="selectNewCustomerNotGoodsOrdersNum" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND customer_no not IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>


    <select id="selectNewCustomerOrdersNum" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND id IN (
            SELECT customer_id
            FROM customer_pack
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_id
        )
        AND id not in (
            SELECT customer_id FROM customer_pack
            WHERE
                STATUS = 1
                AND create_time not BETWEEN #{registerTimeStart} and #{timeEnd}
            GROUP BY customer_id
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>


    <select id="selectNewCustomerNotOrdersNum" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND id not IN (
            SELECT customer_id
            FROM customer_pack
            WHERE STATUS = 1
            GROUP BY customer_id
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>


    <select id="selectNewCustomerGoodsOrdersNumInCustomerId" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND customer_no IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        AND customer_no not in (
            SELECT customer_no FROM goods
            WHERE
                STATUS = 1
                AND create_time not BETWEEN #{registerTimeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>

    <select id="selectNewCustomerNotGoodsOrdersNumInCustomerId" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE STATUS = 1
        AND customer_no not in (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>

    <select id="selectNewNumber" resultType="java.lang.Integer">
        SELECT count(1)
        FROM customer
        WHERE  STATUS = 1
        <if test="country != null and country != ''">
            and id in (
                select customer_id from customer_pack
                where status =1
                AND pack_type in (4,9)
                AND transportation_route_id in (select id from transportation_route where destination = #{country})
                AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>

    <select id="selectGoodsWeightSum" resultType="java.lang.Double">
        select ifnull(sum(kg),0)
        from goods
        where
            status = 1
            and in_storage_time between #{timeStart} and #{timeEnd}
        <if test="country != null and country != ''">
            and customer_no in (
              select customer_no from customer
              where  id in (
                select customer_id from customer_pack
                where status =1
                AND pack_type in (4,9)
                AND transportation_route_id in (select id from transportation_route where destination = #{country})
                AND create_time between #{timeStart} and #{timeEnd}
              )
            )
        </if>
    </select>



    <select id="findNewCustNumber" resultType="com.example.warehouse.entity.Customer">
        SELECT
          id, customer_name as customerName, login_name as loginName,
          customer_no as customerNo, openid,
          DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        FROM customer
        WHERE  STATUS = 1
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
        order by create_time desc
        <if test="pageNumber != null">
            limit #{pageNumber}, #{pageSize}
        </if>
    </select>

    <select id="findNewCustGoodsOrdersNum" resultType="com.example.warehouse.entity.Customer">
        SELECT
            id, customer_name as customerName, login_name as loginName,
            customer_no as customerNo, openid,
            DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        FROM customer
        WHERE STATUS = 1
        AND customer_no IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        AND customer_no not in (
            SELECT customer_no FROM goods
            WHERE
                STATUS = 1
                AND create_time not BETWEEN #{registerTimeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
        order by create_time desc
        <if test="pageNumber != null">
            limit #{pageNumber}, #{pageSize}
        </if>
    </select>

    <select id="findNewCustNotGoodsOrdersNum" resultType="com.example.warehouse.entity.Customer">
        SELECT
            id, customer_name as customerName, login_name as loginName,
            customer_no as customerNo, openid,
            DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        FROM customer
        WHERE STATUS = 1
        AND customer_no not IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
        order by create_time desc
        <if test="pageNumber != null">
            limit #{pageNumber}, #{pageSize}
        </if>
    </select>


    <select id="findNewCustomerId" resultType="java.lang.Integer">
        SELECT
        id
        FROM customer
        WHERE  STATUS = 1
        AND customer_no IN (
            SELECT customer_no
            FROM goods
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_no
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
    </select>

    <select id="countOutWareGoodsNumLastDay" resultType="java.lang.Integer">
        select count(id)
        from goods
        <where>
            status = 1
            and out_storage_time between #{startTime} and #{endTime}
        </where>
    </select>

    <select id="getStatisticGoodsCount" resultType="java.lang.Integer">
        select count(t.id)
        from goods t
        left join customer cus on cus.customer_no = t.customer_no
        <where>
            t.status = 1
            <if test="tableType == 'inWarehouse'">
                and t.in_storage_time between #{startTime} and #{endTime}
            </if>
            <if test="tableType == 'outWarehouse'">
                and t.out_storage_time between #{startTime} and #{endTime}
            </if>
            <if test="customerName != null and customerName != ''">
                and cus.customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and cus.login_name regexp #{loginName}
            </if>
        </where>
    </select>

    <select id="getStatisticGoodsDetail" resultType="com.example.warehouse.vo.GoodsVo">
        select t.goods_type as goodsType, t.goods_name as goodsName, t.delivery_order_no as deliveryOrderNo,
        t.operator_name as operatorName, t.kg, t.vol, t.customer_no as customerNo,
        cus.login_name as loginName, cus.customer_name as customerName, cus.id as customerId,
        DATE_FORMAT(t.create_time, '%Y-%m-%d %k:%i:%s') as createTime,
        DATE_FORMAT(t.up_time, '%Y-%m-%d %k:%i:%s') as upTime,
        DATE_FORMAT(t.in_storage_time, '%Y-%m-%d %k:%i:%s') as inStorageTime
        from goods t
        left join customer cus on cus.customer_no = t.customer_no
        <where>
            t.status = 1
            <if test="tableType == 'inWarehouse'">
                and t.in_storage_time between #{startTime} and #{endTime}
            </if>
            <if test="tableType == 'outWarehouse'">
                and t.out_storage_time between #{startTime} and #{endTime}
            </if>
            <if test="customerName != null and customerName != ''">
                and cus.customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and cus.login_name regexp #{loginName}
            </if>
        </where>
        order by t.in_storage_time desc
        limit #{pageNumber}, #{pageSize}
    </select>

    <select id="getStatisticCustomerPackCount" resultType="java.lang.Integer">
        select count(1)
        from customer_pack t
        left join customer cus on cus.id = t.customer_id
        left join transportation_route route on route.id = t.transportation_route_id
        <where>
            t.status = 1
            <if test="tableType == 'outWarehouse'">
                and t.out_storage_time between #{startTime} and #{endTime}
            </if>
            <if test="tableType == 'packed'">
                and t.pack_time between #{startTime} and #{endTime}
            </if>
            <if test="tableType == 'applyPack'">
                and t.create_time between #{startTime} and #{endTime}
            </if>
            <if test="customerName != null and customerName != ''">
                and cus.customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and cus.login_name regexp #{loginName}
            </if>
            <if test="routeName != null and routeName != ''">
                and route.route_name regexp #{routeName}
            </if>
            <if test="routeType != null and routeType != ''">
                and route.route_type = #{routeType}
            </if>

            <if test="orderNumber != null and orderNumber != ''">
                and t.order_number regexp #{orderNumber}
            </if>
            <if test="businessNumber != null and businessNumber != ''">
                and t.business_number regexp #{businessNumber}
            </if>
        </where>
    </select>

    <select id="getStatisticCustomerPackDetail" resultType="com.example.warehouse.vo.customerPack.CustomerPackVo">
        select t.id, t.customer_id as customerId, t.order_number as orderNumber, t.business_number as businessNumber,
        t.actual_weight as actualWeight, t.actual_price as actualPrice, t.pre_quoted_price as preQuotedPrice,
        t.actual_vol as actualVol, t.pack_type as packType,
        DATE_FORMAT(t.create_time, '%Y-%m-%d %k:%i:%s') as createTime,
        DATE_FORMAT(t.pack_time, '%Y-%m-%d %k:%i:%s') as packTime,
        DATE_FORMAT(t.out_storage_time, '%Y-%m-%d %k:%i:%s') as outStorageTime,
        cus.customer_name as customerName, cus.login_name as loginName, cus.customer_no as customerNo,
        route.route_name as routeName, route.route_type as routeType, route.destination
        from customer_pack t
        left join customer cus on cus.id = t.customer_id
        left join transportation_route route on route.id = t.transportation_route_id
        <where>
            t.status = 1
            <if test="tableType == 'outWarehouse'">
                and t.out_storage_time between #{startTime} and #{endTime}
            </if>
            <if test="tableType == 'packed'">
                and t.pack_time between #{startTime} and #{endTime}
            </if>
            <if test="tableType == 'applyPack'">
                and t.create_time between #{startTime} and #{endTime}
            </if>
            <if test="customerName != null and customerName != ''">
                and cus.customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and cus.login_name regexp #{loginName}
            </if>
            <if test="routeName != null and routeName != ''">
                and route.route_name regexp #{routeName}
            </if>
            <if test="routeType != null and routeType != ''">
                and route.route_type = #{routeType}
            </if>
            <if test="orderNumber != null and orderNumber != ''">
                and t.order_number regexp #{orderNumber}
            </if>
            <if test="businessNumber != null and businessNumber != ''">
                and t.business_number regexp #{businessNumber}
            </if>
        </where>
        order by t.create_time
        limit #{pageNumber}, #{pageSize}
    </select>
    <select id="getStatisticCustomerCount" resultType="java.lang.Integer">
        select count(1)
        from customer
        <where>
            status = 1
            and create_time between #{startTime} and #{endTime}
            <if test="customerName != null and customerName != ''">
                customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                login_name regexp #{loginName}
            </if>
        </where>
    </select>
    <select id="getStatisticCustomerDetail" resultType="com.example.warehouse.entity.Customer">
        select id, customer_no as customerNo, customer_name as customerName, login_name as loginName, openid,
        DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        from customer
        <where>
            status = 1
            and create_time between #{startTime} and #{endTime}
            <if test="customerName != null and customerName != ''">
                customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                login_name regexp #{loginName}
            </if>
        </where>
        order by create_time
        limit #{pageNumber}, #{pageSize}
    </select>

    <select id="getStatisticTopUpCount" resultType="java.lang.Integer">
        select count(1)
        from customer_account
        <where>
            status = 1
            and cost_type = 1
            and create_time between #{startTime} and #{endTime}
            <if test="customerName != null and customerName != ''">
                and customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name regexp #{loginName}
            </if>
        </where>
    </select>
    <select id="getStatisticTopUpDetail" resultType="com.example.warehouse.entity.CustomerAccount">
        select id, customer_no as customerNo, customer_name as customerName, login_name as loginName,
        amount, channel, create_name as createName, message,
        DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        from customer_account
        <where>
            status = 1
            and cost_type = 1
            and create_time between #{startTime} and #{endTime}
            <if test="customerName != null and customerName != ''">
                and customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name regexp #{loginName}
            </if>
        </where>
        order by create_time
        limit #{pageNumber}, #{pageSize}
    </select>

    <select id="getStatisticTopUpAmount" resultType="java.math.BigDecimal">
        select ifnull(sum(amount), 0)
        from customer_account
        <where>
            status = 1
            and cost_type = 1
            and create_time between #{startTime} and #{endTime}
            <if test="customerName != null and customerName != ''">
                and customer_name regexp #{customerName}
            </if>
            <if test="loginName != null and loginName != ''">
                and login_name regexp #{loginName}
            </if>
        </where>
    </select>

    <select id="findNewCustOrdersNum" resultType="com.example.warehouse.entity.Customer">
        SELECT
        id, customer_name as customerName, login_name as loginName,
        customer_no as customerNo, openid,
        DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        FROM customer
        WHERE STATUS = 1
        AND id IN (
            SELECT customer_id
            FROM customer_pack
            WHERE STATUS = 1
            AND create_time between #{timeStart} and #{timeEnd}
            GROUP BY customer_id
        )
        AND id not in (
            SELECT customer_id FROM customer_pack
            WHERE
            STATUS = 1
            AND create_time not BETWEEN #{registerTimeStart} and #{timeEnd}
            GROUP BY customer_id
        )
        <if test="country != null and country != ''">
            and id in (
            select customer_id from customer_pack
            where status =1
            AND pack_type in (4,9)
            AND transportation_route_id in (select id from transportation_route where destination = #{country})
            AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
        order by create_time desc
        <if test="pageNumber != null">
            limit #{pageNumber}, #{pageSize}
        </if>
    </select>

    <select id="findNewCustNotOrdersNum" resultType="com.example.warehouse.entity.Customer">
        SELECT
        id, customer_name as customerName, login_name as loginName,
        customer_no as customerNo, openid,
        DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as createTime
        FROM customer
        WHERE STATUS = 1
        AND id not IN (
            SELECT customer_id
            FROM customer_pack
            WHERE STATUS = 1
            GROUP BY customer_id
        )
        <if test="country != null and country != ''">
            and id in (
                select customer_id from customer_pack
                where status =1
                AND pack_type in (4,9)
                AND transportation_route_id in (select id from transportation_route where destination = #{country})
                AND create_time between #{timeStart} and #{timeEnd}
            )
        </if>
        AND create_time between #{registerTimeStart} and #{registerTimeEnd}
        order by create_time desc
        <if test="pageNumber != null">
            limit #{pageNumber}, #{pageSize}
        </if>
    </select>


</mapper>