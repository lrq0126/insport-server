<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.sys.TrajectoryMapper">
  <resultMap id="BaseResultMap" type="com.example.warehouse.entity.sys.Trajectory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="container_no" jdbcType="VARCHAR" property="containerNo" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="track_time" jdbcType="TIMESTAMP" property="trackTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="order_no" jdbcType="INTEGER" property="orderNo" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_id" jdbcType="VARCHAR" property="updateId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_number, container_no, `location`, message, track_time, update_time, order_no,
    `status`, update_id, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from trajectory
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from trajectory
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.warehouse.entity.sys.Trajectory">
    insert into trajectory (id, order_number, container_no,
      `location`, message, track_time,
      update_time, order_no, `status`,
      update_id, create_time)
    values (#{id,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, #{containerNo,jdbcType=VARCHAR},
      #{location,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{trackTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{orderNo,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
      #{updateId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.warehouse.entity.sys.Trajectory">
    insert into trajectory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="containerNo != null">
        container_no,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="trackTime != null">
        track_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="trackTime != null">
        #{trackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.sys.Trajectory">
    update trajectory
    <set>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="containerNo != null">
        container_no = #{containerNo,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="trackTime != null">
        track_time = #{trackTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.sys.Trajectory">
    update trajectory
    set order_number = #{orderNumber,jdbcType=VARCHAR},
      container_no = #{containerNo,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      track_time = #{trackTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      update_id = #{updateId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <insert id="batchInsert" parameterType="list">
    insert into trajectory (id, order_number, container_no,
    `location`, message, track_time,
    update_time, order_no, `status`,
    update_id,create_time)
    values
    <foreach collection="list" index="index" separator="," item="item">
      (#{item.id,jdbcType=INTEGER}, #{item.orderNumber,jdbcType=VARCHAR}, #{item.containerNo,jdbcType=VARCHAR},
      #{item.location,jdbcType=VARCHAR}, #{item.message,jdbcType=VARCHAR}, #{item.trackTime,jdbcType=TIMESTAMP},
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.orderNo,jdbcType=INTEGER}, #{item.status,jdbcType=INTEGER},
      #{item.updateId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

  <select id="getSingleTrack" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from trajectory_log
    where order_number = #{orderNumber,jdbcType=VARCHAR} and status = 1
  </select>

  <select id="getTrackListByOrderNumber" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from trajectory
    where status = 1
    and order_number = #{orderNumber,jdbcType=VARCHAR}
    <if test="desc == 1">
      ORDER BY track_time DESC
    </if>
    <if test="desc == 2">
      ORDER BY track_time asc
    </if>
  </select>

  <select id="checkTrackHaveDatas" parameterType="string" resultType="int">
    select
     count(1)
    from trajectory
    where
    STATUS = 1 and order_number = #{orderNumber,jdbcType=VARCHAR}
  </select>

</mapper>