<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.deliveryTask.DeliveryTaskMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.deliveryTask.DeliveryTask">
        <id column="id" jdbcType="INTEGER" property="id"/>
    	
	    <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="task_order" jdbcType="VARCHAR" property="taskOrder"/>
        <result column="task_status" jdbcType="INTEGER" property="taskStatus"/>
        <result column="task_number" jdbcType="INTEGER" property="taskNumber"/>

    </resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		id, create_id, create_time, update_id, update_time, status, version, remarks, task_name, task_order, task_status, task_number
	</sql>
	
	<!-- 插入字段实际数值 -->
	<sql id="Insert_Column_Values">
		#{createId},#{createTime},#{updateId},#{updateTime},#{status},#{version},#{remarks},#{taskName},#{taskOrder},#{taskStatus},#{taskNumber}
	</sql>
	
	<!-- 插入字段（判空） -->
	<sql id="Base_Column_List_NotNull">
		<if test="createId != null and createId != ''">
			create_id, 
		</if>
    	<if test="createTime != null and createTime != ''">
			create_time, 
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id, 
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time, 
		</if>
    	<if test="status != null and status != ''">
			status, 
		</if>
    	<if test="version != null and version != ''">
			version, 
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks, 
		</if>
    	<if test="taskName != null and taskName != ''">
			task_name,
		</if>
    	<if test="taskOrder != null and taskOrder != ''">
			task_order,
		</if>
    	<if test="taskStatus != null and taskStatus != ''">
			task_status,
		</if>
    	<if test="taskNumber != null and taskNumber != ''">
			task_number,
		</if>
    	
	</sql>
	
	<!-- 插入字段实际数值(判空) -->
	<sql id="Insert_Column_Values_NotNull">
		<if test="createId != null and createId != ''">
			#{createId},
		</if>
    	<if test="createTime != null and createTime != ''">
			#{createTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			#{updateId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			#{updateTime},
		</if>
    	<if test="status != null and status != ''">
			#{status},
		</if>
    	<if test="version != null and version != ''">
			#{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			#{remarks},
		</if>
    	<if test="taskName != null and taskName != ''">
			#{taskName},
		</if>
    	<if test="taskOrder != null and taskOrder != ''">
			#{taskOrder},
		</if>
    	<if test="taskStatus != null and taskStatus != ''">
			#{taskStatus},
		</if>
    	<if test="taskNumber != null and taskNumber != ''">
			#{taskNumber},
		</if>
    	
	</sql>
	
	<!-- 更新字段 -->
	<sql id="Update_Column">
		create_id = #{createId},
    	create_time = #{createTime},
    	update_id = #{updateId},
    	update_time = #{updateTime},
    	status = #{status},
    	version = #{version},
    	remarks = #{remarks},
    	task_name = #{taskName},
    	task_order = #{taskOrder},
    	task_status = #{taskStatus},
    	task_number = #{taskNumber}
	</sql>
	
	<!-- 更新字段（判空） -->
	<sql id="Update_Column_NotNull">
		<if test="createId != null and createId != ''">
			create_id = #{createId},
		</if>
    	<if test="createTime != null and createTime != ''">
			create_time = #{createTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id = #{updateId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time = #{updateTime},
		</if>
    	<if test="status != null and status != ''">
			status = #{status},
		</if>
    	<if test="version != null and version != ''">
			version = #{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks = #{remarks},
		</if>
    	<if test="taskName != null and taskName != ''">
			task_name = #{taskName},
		</if>
    	<if test="taskOrder != null and taskOrder != ''">
			task_order = #{taskOrder},
		</if>
    	<if test="taskStatus != null and taskStatus != ''">
			task_status = #{taskStatus},
		</if>
    	<if test="taskNumber != null and taskNumber != ''">
			task_number = #{taskNumber},
		</if>
    	
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <trim suffixOverrides=",">
        <include refid="Base_Column_List"/>
        </trim>
        from delivery_task
        where id = #{id,jdbcType=INTEGER}
    </select>

	<insert id="insert" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTask">
		insert into delivery_task
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_id, 
			create_time, 
			update_id, 
			update_time, 
			status, 
			version, 
			remarks,
			task_name,
			task_order,
			task_status,
			task_number
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values"/>
		</trim>
	</insert>
	
	<insert id="insertSelective" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTask">
		insert into delivery_task
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List_NotNull"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values_NotNull"/>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTask">
		update delivery_task
		<set>
			<include refid="Update_Column"/>
		</set>
		
		<where>
		id = #{id} and status = 1
		</where>
		
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTask">
		update delivery_task
		<set>
			<include refid="Update_Column_NotNull"/>
		</set>
		<where>
		id = #{id} and status = 1
		</where>
	</update>

	<!-- 删除数据（逻辑删除） -->
	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update  delivery_task
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 移除数据（物理删除） -->
	<delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from delivery_task
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<select id="selectTodayCount" resultType="java.lang.Integer">
		select count(id)
		from delivery_task
		where create_time &gt;= #{startTime}
		and create_time &lt;= #{endTime}
	</select>

	<select id="selectByTaskOrder" resultType="com.example.warehouse.vo.deliveryTask.DeliveryTaskSaveReqVo">
		select <include refid="Base_Column_List"/>
		from delivery_task
		<where>
			`status` = 1 and task_order = #{taskOrder}
		</where>
	</select>

	<select id="selectCount" resultType="java.lang.Integer">
		select count(t.id)
		from delivery_task t
		left join `user` u on u.id = t.id and u.`status` = 1
		<where>
			t.`status` = 1
			<if test="taskOrder != null and taskOrder != ''">
				and t.task_order regexp #{taskOrder}
			</if>
			<if test="taskName != null and taskName != ''">
				and t.task_name regexp #{taskName}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				and t.id = (select delivery_task_id from delivery_task_detail where status = 1 and order_number regexp #{orderNumber})
			</if>
		</where>
	</select>



	<select id="selectDeliveryTaskList" resultMap="deliveryTaskRespVoMap">
		select <include refid="Base_Column"/>, u.username
		from delivery_task t
		left join `user` u on u.id = t.id and u.`status` = 1
		<where>
			t.`status` = 1
			<if test="taskOrder != null and taskOrder != ''">
				and t.task_order regexp #{taskOrder}
			</if>
			<if test="taskName != null and taskName != ''">
				and t.task_name regexp #{taskName}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				and t.id = (select delivery_task_id from delivery_task_detail where status = 1 and order_number regexp #{orderNumber})
			</if>
		</where>
		limit #{pageNumber}, #{pageSize}
	</select>

	<select id="selectDeliveryTaskAllList" resultMap="deliveryTaskRespVoMap">
		select <include refid="Base_Column"/>
		from delivery_task t
		<where>
			t.`status` = 1
			<if test="taskOrder != null and taskOrder != ''">
				and t.task_order regexp #{taskOrder}
			</if>
			<if test="taskName != null and taskName != ''">
				and t.task_name regexp #{taskName}
			</if>
			<if test="taskStatus != null and taskStatus != ''">
				and t.task_status = #{taskStatus}
			</if>
			<if test="orderNumber != null and orderNumber != ''">
				and t.id = (select delivery_task_id from delivery_task_detail where status = 1 and order_number regexp #{orderNumber})
			</if>
		</where>
	</select>

	<select id="selectDeliveryTaskById" resultMap="deliveryTaskRespVoAll">
		select <include refid="Base_Column"/>, u.username
		from delivery_task t
		left join `user` u on u.id = t.id and u.`status` = 1
		<where>
			t.`status` = 1
			and t.id = #{id}
		</where>
	</select>



	<!-- 字段 -->
	<sql id="Base_Column">
		t.id,
		DATE_FORMAT(t.create_time,'%Y-%m-%d %k:%i:%s') as create_time,
        DATE_FORMAT(t.update_time,'%Y-%m-%d %k:%i:%s') as update_time,
		t.create_id, t.update_id, t.status, t.version,
		t.remarks, t.task_name, t.task_order, t.task_status, t.task_number
	</sql>

	<resultMap id="deliveryTaskRespVoMap" extends="BaseResultMap" type="com.example.warehouse.vo.deliveryTask.DeliveryTaskRespVo">
		<result column="username" property="createName"/>
	</resultMap>

	<resultMap id="deliveryTaskRespVoAll" extends="deliveryTaskRespVoMap" type="com.example.warehouse.vo.deliveryTask.DeliveryTaskRespVo">
		<collection property="deliveryTaskDetails" column="id"
					select="com.example.warehouse.mapper.deliveryTask.DeliveryTaskDetailMapper.selectDetailByTaskId"/>
	</resultMap>

</mapper>