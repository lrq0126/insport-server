<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.ping.PingMainOrderMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.ping.PingMainOrder">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="p_id" jdbcType="INTEGER" property="pId"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <result column="group_time" jdbcType="TIMESTAMP" property="groupTime"/>
        <result column="pack_time" jdbcType="TIMESTAMP" property="packTime"/>
        <result column="pack_type" jdbcType="INTEGER" property="packType"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="last_update_id" jdbcType="INTEGER" property="lastUpdateId"/>
        <result column="pick_time" jdbcType="TIMESTAMP" property="pickTime"/>
        <result column="picker" jdbcType="VARCHAR" property="picker"/>
        <result column="is_picked" jdbcType="INTEGER" property="isPicked"/>
        <result column="auctual_price" jdbcType="DECIMAL" property="auctualPrice"/>
        <result column="discount" jdbcType="DECIMAL" property="discount"/>
        <result column="pre_qouted_price" jdbcType="DECIMAL" property="preQoutedPrice"/>
        <result column="inside_message" jdbcType="VARCHAR" property="insideMessage"/>
        <result column="accepted" jdbcType="INTEGER" property="accepted"/>
        <result column="accepted_time" jdbcType="TIMESTAMP" property="acceptedTime"/>
        <result column="accepter" jdbcType="VARCHAR" property="accepter"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="is_paid" jdbcType="INTEGER" property="isPaid"/>
        <result column="is_printed" jdbcType="INTEGER" property="isPrinted"/>
        <result column="address_id" jdbcType="INTEGER" property="addressId"/>
        <result column="settlement_weight" jdbcType="DOUBLE" property="settlementWeight"/>
        <result column="settlement_vol" jdbcType="DOUBLE" property="settlementVol"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
        <result column="agent_number" jdbcType="VARCHAR" property="agentNumber"/>
        <result column="incidental" jdbcType="DECIMAL" property="incidental"/>
        <result column="is_sensitive" jdbcType="INTEGER" property="isSensitive"/>
        <result column="route_id" jdbcType="INTEGER" property="routeId"/>
        <result column="goods_number" jdbcType="INTEGER" property="goodsNumber"/>
        <result column="actual_weight" jdbcType="DOUBLE" property="actualWeight"/>
        <result column="actual_vol" jdbcType="DOUBLE" property="actualVol"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, p_id, customer_id, group_time, pack_time, pack_type, `status`, create_time, create_id,
        last_update_time, last_update_id, pick_time, picker, is_picked, auctual_price, discount,
        pre_qouted_price, inside_message, accepted, accepted_time, accepter, pay_time, is_paid,
        is_printed, address_id, settlement_weight, settlement_vol, remarks, order_number,
        agent_number, incidental, is_sensitive, route_id, goods_number, actual_weight, actual_vol
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ping_main_order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ping_main_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.warehouse.entity.ping.PingMainOrder">
    insert into ping_main_order (id, p_id, customer_id,
      group_time, pack_time, pack_type,
      `status`, create_time, create_id,
      last_update_time, last_update_id, pick_time,
      picker, is_picked, auctual_price,
      discount, pre_qouted_price, inside_message,
      accepted, accepted_time, accepter,
      pay_time, is_paid, is_printed,
      address_id, settlement_weight, settlement_vol,
      remarks, order_number, agent_number, incidental,
      is_sensitive, route_id, goods_number, actual_weight, actual_vol)
    values (#{id,jdbcType=INTEGER}, #{pId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER},
      #{groupTime,jdbcType=TIMESTAMP}, #{packTime,jdbcType=TIMESTAMP}, #{packType,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=INTEGER},
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{lastUpdateId,jdbcType=INTEGER}, #{pickTime,jdbcType=TIMESTAMP},
      #{picker,jdbcType=VARCHAR}, #{isPicked,jdbcType=INTEGER}, #{auctualPrice,jdbcType=DECIMAL},
      #{discount,jdbcType=DECIMAL}, #{preQoutedPrice,jdbcType=DECIMAL}, #{insideMessage,jdbcType=VARCHAR},
      #{accepted,jdbcType=INTEGER}, #{acceptedTime,jdbcType=TIMESTAMP}, #{accepter,jdbcType=VARCHAR},
      #{payTime,jdbcType=TIMESTAMP}, #{isPaid,jdbcType=INTEGER}, #{isPrinted,jdbcType=INTEGER},
      #{addressId,jdbcType=INTEGER}, #{settlementWeight,jdbcType=DOUBLE}, #{settlementVol,jdbcType=DOUBLE},
      #{remarks,jdbcType=VARCHAR}, #{orderNumber,jdbcType=VARCHAR}, #{agentNumber,jdbcType=VARCHAR},
      #{incidental}, #{isSensitive,jdbcType=INTEGER}, #{routeId,jdbcType=INTEGER},
      #{goodsNumber,jdbcType=INTEGER}, #{actualWeight,jdbcType=DOUBLE}, #{actualVol,jdbcType=DOUBLE})
  </insert>
    <insert id="insertSelective" parameterType="com.example.warehouse.entity.ping.PingMainOrder">
        insert into ping_main_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="pId != null">
                p_id,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="groupTime != null">
                group_time,
            </if>
            <if test="packTime != null">
                pack_time,
            </if>
            <if test="packType != null">
                pack_type,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createId != null">
                create_id,
            </if>
            <if test="lastUpdateTime != null">
                last_update_time,
            </if>
            <if test="lastUpdateId != null">
                last_update_id,
            </if>
            <if test="pickTime != null">
                pick_time,
            </if>
            <if test="picker != null">
                picker,
            </if>
            <if test="isPicked != null">
                is_picked,
            </if>
            <if test="auctualPrice != null">
                auctual_price,
            </if>
            <if test="discount != null">
                discount,
            </if>
            <if test="preQoutedPrice != null">
                pre_qouted_price,
            </if>
            <if test="insideMessage != null">
                inside_message,
            </if>
            <if test="accepted != null">
                accepted,
            </if>
            <if test="acceptedTime != null">
                accepted_time,
            </if>
            <if test="accepter != null">
                accepter,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="isPaid != null">
                is_paid,
            </if>
            <if test="isPrinted != null">
                is_printed,
            </if>
            <if test="addressId != null">
                address_id,
            </if>
            <if test="settlementWeight != null">
                settlement_weight,
            </if>
            <if test="settlementVol != null">
                settlement_vol,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="orderNumber != null">
                order_number,
            </if>
            <if test="agentNumber != null">
                agent_number,
            </if>
            <if test="incidental != null">
                incidental,
            </if>
            <if test="isSensitive != null">
                is_sensitive,
            </if>
            <if test="routeId != null">
                route_id,
            </if>
            <if test="goodsNumber != null">
                goods_number,
            </if>
            <if test="actualWeight != null">
                actual_weight,
            </if>
            <if test="actualVol != null">
                actual_vol,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="pId != null">
                #{pId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="groupTime != null">
                #{groupTime,jdbcType=TIMESTAMP},
            </if>
            <if test="packTime != null">
                #{packTime,jdbcType=TIMESTAMP},
            </if>
            <if test="packType != null">
                #{packType,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                #{createId,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateId != null">
                #{lastUpdateId,jdbcType=INTEGER},
            </if>
            <if test="pickTime != null">
                #{pickTime,jdbcType=TIMESTAMP},
            </if>
            <if test="picker != null">
                #{picker,jdbcType=VARCHAR},
            </if>
            <if test="isPicked != null">
                #{isPicked,jdbcType=INTEGER},
            </if>
            <if test="auctualPrice != null">
                #{auctualPrice,jdbcType=DECIMAL},
            </if>
            <if test="discount != null">
                #{discount,jdbcType=DECIMAL},
            </if>
            <if test="preQoutedPrice != null">
                #{preQoutedPrice,jdbcType=DECIMAL},
            </if>
            <if test="insideMessage != null">
                #{insideMessage,jdbcType=VARCHAR},
            </if>
            <if test="accepted != null">
                #{accepted,jdbcType=INTEGER},
            </if>
            <if test="acceptedTime != null">
                #{acceptedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accepter != null">
                #{accepter,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isPaid != null">
                #{isPaid,jdbcType=INTEGER},
            </if>
            <if test="isPrinted != null">
                #{isPrinted,jdbcType=INTEGER},
            </if>
            <if test="addressId != null">
                #{addressId,jdbcType=INTEGER},
            </if>
            <if test="settlementWeight != null">
                #{settlementWeight,jdbcType=DOUBLE},
            </if>
            <if test="settlementVol != null">
                #{settlementVol,jdbcType=DOUBLE},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="orderNumber != null">
                #{orderNumber,jdbcType=VARCHAR},
            </if>
            <if test="agentNumber != null">
                #{agentNumber,jdbcType=VARCHAR},
            </if>
            <if test="incidental != null">
                #{incidental},
            </if>
            <if test="isSensitive != null">
                #{isSensitive,jdbcType=INTEGER},
            </if>
            <if test="routeId != null">
                #{routeId,jdbcType=INTEGER},
            </if>
            <if test="goodsNumber != null">
                #{goodsNumber,jdbcType=INTEGER},
            </if>
            <if test="actualWeight != null">
                #{actualWeight,jdbcType=DOUBLE},
            </if>
            <if test="actualVol != null">
                #{actualVol,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.ping.PingMainOrder">
        update ping_main_order
        <set>
            <if test="pId != null">
                p_id = #{pId,jdbcType=INTEGER},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="groupTime != null">
                group_time = #{groupTime,jdbcType=TIMESTAMP},
            </if>
            <if test="packTime != null">
                pack_time = #{packTime,jdbcType=TIMESTAMP},
            </if>
            <if test="packType != null">
                pack_type = #{packType,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createId != null">
                create_id = #{createId,jdbcType=INTEGER},
            </if>
            <if test="lastUpdateTime != null">
                last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateId != null">
                last_update_id = #{lastUpdateId,jdbcType=INTEGER},
            </if>
            <if test="pickTime != null">
                pick_time = #{pickTime,jdbcType=TIMESTAMP},
            </if>
            <if test="picker != null">
                picker = #{picker,jdbcType=VARCHAR},
            </if>
            <if test="isPicked != null">
                is_picked = #{isPicked,jdbcType=INTEGER},
            </if>
            <if test="auctualPrice != null">
                auctual_price = #{auctualPrice,jdbcType=DECIMAL},
            </if>
            <if test="discount != null">
                discount = #{discount,jdbcType=DECIMAL},
            </if>
            <if test="preQoutedPrice != null">
                pre_qouted_price = #{preQoutedPrice,jdbcType=DECIMAL},
            </if>
            <if test="insideMessage != null">
                inside_message = #{insideMessage,jdbcType=VARCHAR},
            </if>
            <if test="accepted != null">
                accepted = #{accepted,jdbcType=INTEGER},
            </if>
            <if test="acceptedTime != null">
                accepted_time = #{acceptedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="accepter != null">
                accepter = #{accepter,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isPaid != null">
                is_paid = #{isPaid,jdbcType=INTEGER},
            </if>
            <if test="isPrinted != null">
                is_printed = #{isPrinted,jdbcType=INTEGER},
            </if>
            <if test="addressId != null">
                address_id = #{addressId,jdbcType=INTEGER},
            </if>
            <if test="settlementWeight != null">
                settlement_weight = #{settlementWeight,jdbcType=DOUBLE},
            </if>
            <if test="settlementVol != null">
                settlement_vol = #{settlementVol,jdbcType=DOUBLE},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="orderNumber != null">
                order_number = #{orderNumber,jdbcType=VARCHAR},
            </if>
            <if test="agentNumber != null">
                agent_number = #{agentNumber,jdbcType=VARCHAR},
            </if>
            <if test="isSensitive != null">
                is_sensitive = #{isSensitive,jdbcType=INTEGER},
            </if>
            <if test="routeId != null">
                route_id = #{routeId,jdbcType=INTEGER},
            </if>
            <if test="goodsNumber != null">
                goods_number = #{goodsNumber,jdbcType=INTEGER},
            </if>
            <if test="incidental != null">
                incidental = #{incidental,jdbcType=DECIMAL},
            </if>
            <if test="actualWeight != null">
                actual_weight = #{actualWeight,jdbcType=DOUBLE},
            </if>
            <if test="actualVol != null">
                actual_vol = #{actualVol,jdbcType=DOUBLE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.ping.PingMainOrder">
    update ping_main_order
    set p_id = #{pId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      group_time = #{groupTime,jdbcType=TIMESTAMP},
      pack_time = #{packTime,jdbcType=TIMESTAMP},
      pack_type = #{packType,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_id = #{lastUpdateId,jdbcType=INTEGER},
      pick_time = #{pickTime,jdbcType=TIMESTAMP},
      picker = #{picker,jdbcType=VARCHAR},
      is_picked = #{isPicked,jdbcType=INTEGER},
      auctual_price = #{auctualPrice,jdbcType=DECIMAL},
      discount = #{discount,jdbcType=DECIMAL},
      pre_qouted_price = #{preQoutedPrice,jdbcType=DECIMAL},
      inside_message = #{insideMessage,jdbcType=VARCHAR},
      accepted = #{accepted,jdbcType=INTEGER},
      accepted_time = #{acceptedTime,jdbcType=TIMESTAMP},
      accepter = #{accepter,jdbcType=VARCHAR},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      is_paid = #{isPaid,jdbcType=INTEGER},
      is_printed = #{isPrinted,jdbcType=INTEGER},
      address_id = #{addressId,jdbcType=INTEGER},
      settlement_weight = #{settlementWeight,jdbcType=DOUBLE},
      settlement_vol = #{settlementVol,jdbcType=DOUBLE},
      remarks = #{remarks,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      agent_number = #{agentNumber,jdbcType=VARCHAR},
      incidental = #{incidental},
      is_sensitive = #{isSensitive,jdbcType=INTEGER},
      route_id = #{routeId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      actual_weight = #{actualWeight,jdbcType=DOUBLE},
      actual_vol = #{actualVol,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectPingMainOrderByPid" resultMap="PingMainOrderVo">
        select
        <include refid="RespVO_Column_List"/>
        from ping_main_order t
        left join customer_pack cp on cp.order_number = t.order_number and cp.status = 1
        left join customer c on c.id = t.customer_id
        left join transportation_route route on route.id = t.route_id and route.status = 1
        left join customer_pack_receiver_address cpra on cpra.customer_pack_id = cp.id and cpra.status = 1
        <where>
            t.status = 1
            and t.p_id = #{pid}
        </where>
    </select>

    <select id="selectById" resultMap="PingMainOrderVo">
        select
        <include refid="RespVO_Column_List"/>
        from ping_main_order t
        left join customer_pack cp on cp.order_number = t.order_number and cp.status = 1
        left join customer c on c.id = t.customer_id
        left join transportation_route route on route.id = t.route_id and route.status = 1
        left join customer_pack_receiver_address cpra on cpra.customer_pack_id = cp.id and cpra.status = 1
        <where>
            t.status = 1
            and t.id = #{id}
        </where>
    </select>
    <select id="selectByOrderNumber" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ping_main_order
        where order_number = #{orderNumber} and status = 1
    </select>

    <update id="updateShippedByOrderNumber">
        update ping_main_order
        <set>
            pack_type = 4,
            last_update_time = now(),
        </set>
        <where>
            order_number in
            <foreach collection="orderNumberList" item="orderNumber" open="(" close=")" separator=",">
                #{orderNumber}
            </foreach>
        </where>

    </update>

    <insert id="insertList" parameterType="java.util.List">
        insert into ping_main_order (id, p_id, customer_id,
        group_time, pack_time, pack_type,
        `status`, create_time, create_id,
        last_update_time, last_update_id, pick_time,
        picker, is_picked, auctual_price,
        discount, pre_qouted_price, inside_message,
        accepted, accepted_time, accepter,
        pay_time, is_paid, is_printed,
        address_id, settlement_weight, settlement_vol,
        remarks, order_number, agent_number, incidental,
        is_sensitive, route_id, goods_number, actual_weight, actual_vol )
        values
        <foreach collection="pingMainOrderList" item="pingMainOrder" separator=",">
            (#{pingMainOrder.id,jdbcType=INTEGER},
            #{pingMainOrder.pId,jdbcType=INTEGER},
            #{pingMainOrder.customerId,jdbcType=INTEGER},
            #{pingMainOrder.groupTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.packTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.packType,jdbcType=INTEGER},
            #{pingMainOrder.status,jdbcType=INTEGER},
            #{pingMainOrder.createTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.createId,jdbcType=INTEGER},
            #{pingMainOrder.lastUpdateTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.lastUpdateId,jdbcType=INTEGER},
            #{pingMainOrder.pickTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.picker,jdbcType=VARCHAR},
            #{pingMainOrder.isPicked,jdbcType=INTEGER},
            #{pingMainOrder.auctualPrice,jdbcType=DECIMAL},
            #{pingMainOrder.discount,jdbcType=DECIMAL},
            #{pingMainOrder.preQoutedPrice,jdbcType=DECIMAL},
            #{pingMainOrder.insideMessage,jdbcType=VARCHAR},
            #{pingMainOrder.accepted,jdbcType=INTEGER},
            #{pingMainOrder.acceptedTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.accepter,jdbcType=VARCHAR},
            #{pingMainOrder.payTime,jdbcType=TIMESTAMP},
            #{pingMainOrder.isPaid,jdbcType=INTEGER},
            #{pingMainOrder.isPrinted,jdbcType=INTEGER},
            #{pingMainOrder.addressId,jdbcType=INTEGER},
            #{pingMainOrder.settlementWeight,jdbcType=DOUBLE},
            #{pingMainOrder.settlementVol,jdbcType=DOUBLE},
            #{pingMainOrder.remarks,jdbcType=VARCHAR},
            #{pingMainOrder.orderNumber,jdbcType=VARCHAR},
            #{pingMainOrder.agentNumber,jdbcType=VARCHAR},
            #{pingMainOrder.incidental},
            #{pingMainOrder.isSensitive,jdbcType=INTEGER},
            #{pingMainOrder.routeId,jdbcType=INTEGER},
            #{pingMainOrder.goodsNumber,jdbcType=INTEGER},
            #{pingMainOrder.actualWeight,jdbcType=DOUBLE},
            #{pingMainOrder.actualVol,jdbcType=DOUBLE})
        </foreach>
    </insert>

    <update id="updateList" parameterType="java.util.List">
        <foreach collection="pingMainOrderList" item="pingMainOrder" separator=";">
            update ping_main_order
            <set>
                <if test="pingMainOrder.pId != null">
                    p_id = #{pingMainOrder.pId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.customerId != null">
                    customer_id = #{pingMainOrder.customerId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.groupTime != null">
                    group_time = #{pingMainOrder.groupTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.packTime != null">
                    pack_time = #{pingMainOrder.packTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.packType != null">
                    pack_type = #{pingMainOrder.packType,jdbcType=INTEGER},
                </if>
                    last_update_time = now(),
                <if test="pingMainOrder.lastUpdateId != null">
                    last_update_id = #{pingMainOrder.lastUpdateId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.pickTime != null">
                    pick_time = #{pingMainOrder.pickTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.picker != null">
                    picker = #{pingMainOrder.picker,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.isPicked != null">
                    is_picked = #{pingMainOrder.isPicked,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.auctualPrice != null">
                    auctual_price = #{pingMainOrder.auctualPrice,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.discount != null">
                    discount = #{pingMainOrder.discount,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.preQoutedPrice != null">
                    pre_qouted_price = #{pingMainOrder.preQoutedPrice,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.insideMessage != null">
                    inside_message = #{pingMainOrder.insideMessage,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.accepted != null">
                    accepted = #{pingMainOrder.accepted,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.acceptedTime != null">
                    accepted_time = #{pingMainOrder.acceptedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.accepter != null">
                    accepter = #{pingMainOrder.accepter,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.payTime != null">
                    pay_time = #{pingMainOrder.payTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.isPaid != null">
                    is_paid = #{pingMainOrder.isPaid,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.isPrinted != null">
                    is_printed = #{pingMainOrder.isPrinted,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.addressId != null">
                    address_id = #{pingMainOrder.addressId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.settlementWeight != null">
                    settlement_weight = #{pingMainOrder.settlementWeight,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.settlementVol != null">
                    settlement_vol = #{pingMainOrder.settlementVol,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.remarks != null">
                    remarks = #{pingMainOrder.remarks,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.orderNumber != null">
                    order_number = #{pingMainOrder.orderNumber,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.agentNumber != null">
                    agent_number = #{pingMainOrder.agentNumber,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.incidental != null">
                    incidental = #{pingMainOrder.incidental},
                </if>
                <if test="pingMainOrder.isSensitive != null">
                    is_sensitive = #{pingMainOrder.isSensitive,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.routeId != null">
                    route_id = #{pingMainOrder.routeId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.goodsNumber != null">
                    goods_number = #{pingMainOrder.goodsNumber,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.actualWeight != null">
                    actual_weight = #{pingMainOrder.actualWeight,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.actualVol != null">
                    actual_vol = #{pingMainOrder.actualVol,jdbcType=DOUBLE},
                </if>
            </set>
            where id = #{pingMainOrder.id,jdbcType=INTEGER}
        </foreach>
    </update>

    <update id="updateListByOrderNumber" parameterType="java.util.List">
        <foreach collection="pingMainOrderList" item="pingMainOrder" separator=";">
            update ping_main_order
            <set>
                <if test="pingMainOrder.pId != null">
                    p_id = #{pingMainOrder.pId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.customerId != null">
                    customer_id = #{pingMainOrder.customerId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.groupTime != null">
                    group_time = #{pingMainOrder.groupTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.packTime != null">
                    pack_time = #{pingMainOrder.packTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.packType != null">
                    pack_type = #{pingMainOrder.packType,jdbcType=INTEGER},
                </if>
                last_update_time = now(),
                <if test="pingMainOrder.lastUpdateId != null">
                    last_update_id = #{pingMainOrder.lastUpdateId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.pickTime != null">
                    pick_time = #{pingMainOrder.pickTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.picker != null">
                    picker = #{pingMainOrder.picker,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.isPicked != null">
                    is_picked = #{pingMainOrder.isPicked,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.auctualPrice != null">
                    auctual_price = #{pingMainOrder.auctualPrice,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.discount != null">
                    discount = #{pingMainOrder.discount,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.preQoutedPrice != null">
                    pre_qouted_price = #{pingMainOrder.preQoutedPrice,jdbcType=DECIMAL},
                </if>
                <if test="pingMainOrder.insideMessage != null">
                    inside_message = #{pingMainOrder.insideMessage,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.accepted != null">
                    accepted = #{pingMainOrder.accepted,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.acceptedTime != null">
                    accepted_time = #{pingMainOrder.acceptedTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.accepter != null">
                    accepter = #{pingMainOrder.accepter,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.payTime != null">
                    pay_time = #{pingMainOrder.payTime,jdbcType=TIMESTAMP},
                </if>
                <if test="pingMainOrder.isPaid != null">
                    is_paid = #{pingMainOrder.isPaid,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.isPrinted != null">
                    is_printed = #{pingMainOrder.isPrinted,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.addressId != null">
                    address_id = #{pingMainOrder.addressId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.settlementWeight != null">
                    settlement_weight = #{pingMainOrder.settlementWeight,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.settlementVol != null">
                    settlement_vol = #{pingMainOrder.settlementVol,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.remarks != null">
                    remarks = #{pingMainOrder.remarks,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.orderNumber != null">
                    order_number = #{pingMainOrder.orderNumber,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.agentNumber != null">
                    agent_number = #{pingMainOrder.agentNumber,jdbcType=VARCHAR},
                </if>
                <if test="pingMainOrder.incidental != null">
                    incidental = #{pingMainOrder.incidental},
                </if>
                <if test="pingMainOrder.isSensitive != null">
                    is_sensitive = #{pingMainOrder.isSensitive,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.routeId != null">
                    route_id = #{pingMainOrder.routeId,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.goodsNumber != null">
                    goods_number = #{pingMainOrder.goodsNumber,jdbcType=INTEGER},
                </if>
                <if test="pingMainOrder.actualWeight != null">
                    actual_weight = #{pingMainOrder.actualWeight,jdbcType=DOUBLE},
                </if>
                <if test="pingMainOrder.actualVol != null">
                    actual_vol = #{pingMainOrder.actualVol,jdbcType=DOUBLE},
                </if>
            </set>
            where order_number = #{pingMainOrder.orderNumber,jdbcType=INTEGER}
        </foreach>
    </update>

    <update id="removeList" parameterType="java.util.List">
        <foreach collection="pingMainOrderList" item="pingMainOrder" separator=";">
            update ping_main_order
            <set>
                status = 0,
                last_update_time =#{pingMainOrder.lastUpdateTime},
                last_update_id = #{pingMainOrder.lastUpdateId}
            </set>
            <where>
                id = #{pingMainOrder.id}
            </where>
        </foreach>
    </update>

    <update id="removeOrder" parameterType="com.example.warehouse.entity.ping.PingMainOrder">
        update ping_main_order
        <set>
            status = 0,
            last_update_time =#{lastUpdateTime},
            last_update_id = #{lastUpdateId}
        </set>
        <where>
            p_id = #{pId}
            and customer_id = #{customerId}
            and status = 1
        </where>
    </update>

    <sql id="RespVO_Column_List">
    t.id, t.p_id, t.customer_id, t.pack_type, t.`status`,  t.create_id,
    t.last_update_id,  t.picker, t.is_picked, t.auctual_price, t.discount,
    t.pre_qouted_price, t.inside_message, t.accepted, t.accepter, t.is_paid,
    t.is_printed, t.address_id, t.settlement_weight, t.settlement_vol,
    t.remarks, t.order_number,t.agent_number, t.is_sensitive, t.route_id,
    t.goods_number, cp.business_number, t.incidental,
    t.actual_weight, t.actual_vol,
    DATE_FORMAT(t.create_time,'%Y-%m-%d %k:%i:%s') as create_time,
    DATE_FORMAT(t.last_update_time,'%Y-%m-%d %k:%i:%s') as last_update_time,
    DATE_FORMAT(t.pick_time,'%Y-%m-%d %k:%i:%s') as pick_time,
    DATE_FORMAT(t.pay_time,'%Y-%m-%d %k:%i:%s') as pay_time,
    DATE_FORMAT(t.accepted_time,'%Y-%m-%d %k:%i:%s') as accepted_time,
    DATE_FORMAT(t.group_time,'%Y-%m-%d %k:%i:%s') as group_time,
    DATE_FORMAT(t.pack_time,'%Y-%m-%d %k:%i:%s') as pack_time,
    c.customer_name, c.login_name, route.route_name, route.transport_type,
    cpra.receiver_address as address, cpra.addressee, cpra.phone_number, cpra.code
  </sql>



    <resultMap id="PingMainOrderVo" extends="BaseResultMap"
               type="com.example.warehouse.vo.ping.responseVo.PingMainOrderRespVo">
        <result column="business_number" property="businessNumber"/>

        <result column="login_name" property="loginName"/>
        <result column="customer_name" property="customerName"/>

        <result column="route_name" property="routeName"/>
        <result column="transport_type" property="transportType"/>
        <result column="country" property="country"/>

        <result column="address" property="address"/>
        <result column="addressee" property="addressee"/>
        <result column="phone_number" property="phoneNumber"/>
        <result column="code" property="code"/>
        <collection property="routeVo" column="route_id"
                    select="com.example.warehouse.mapper.transportationRoute.TransportationRouteMapper.findById"/>
        <collection property="pingPack" column="{pmId = id, customerId = customer_id}"
                    select="com.example.warehouse.mapper.ping.PingPackMapper.selectByPmIdAndCustomerId"/>
    </resultMap>

</mapper>