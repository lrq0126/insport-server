<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.deliveryTask.DeliveryTaskDetailMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.deliveryTask.DeliveryTaskDetail">
        <id column="id" jdbcType="INTEGER" property="id"/>
    	
	    <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="delivery_task_id" jdbcType="INTEGER" property="deliveryTaskId"/>
        <result column="task_order" jdbcType="VARCHAR" property="taskOrder"/>
        <result column="order_number" jdbcType="VARCHAR" property="orderNumber"/>
        <result column="pack_number" jdbcType="INTEGER" property="packNumber"/>
        <result column="route_name" jdbcType="VARCHAR" property="routeName"/>

    </resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		id, create_id, create_time, update_id, update_time,
		status, version, remarks, delivery_task_id, task_order,
		order_number, pack_number, route_name
	</sql>
	
	<!-- 插入字段实际数值 -->
	<sql id="Insert_Column_Values">
		#{createId},#{createTime},#{updateId},#{updateTime},#{status},
		#{version},#{remarks},#{deliveryTaskId},#{taskOrder},
		#{orderNumber},#{packNumber},#{routeName}
	</sql>
	
	<!-- 插入字段（判空） -->
	<sql id="Base_Column_List_NotNull">
		<if test="createId != null and createId != ''">
			create_id, 
		</if>
    	<if test="createTime != null and createTime != ''">
			create_time, 
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id, 
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time, 
		</if>
    	<if test="status != null and status != ''">
			status, 
		</if>
    	<if test="version != null and version != ''">
			version, 
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks, 
		</if>
    	<if test="deliveryTaskId != null and deliveryTaskId != ''">
			delivery_task_id, 
		</if>
    	<if test="taskOrder != null and taskOrder != ''">
			task_order, 
		</if>
    	<if test="orderNumber != null and orderNumber != ''">
			order_number, 
		</if>
    	<if test="packNumber != null and packNumber != ''">
			pack_number, 
		</if>
    	<if test="routeName != null and routeName != ''">
			route_name,
		</if>
    	
	</sql>
	
	<!-- 插入字段实际数值(判空) -->
	<sql id="Insert_Column_Values_NotNull">
		<if test="createId != null and createId != ''">
			#{createId},
		</if>
    	<if test="createTime != null and createTime != ''">
			#{createTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			#{updateId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			#{updateTime},
		</if>
    	<if test="status != null and status != ''">
			#{status},
		</if>
    	<if test="version != null and version != ''">
			#{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			#{remarks},
		</if>
    	<if test="deliveryTaskId != null and deliveryTaskId != ''">
			#{deliveryTaskId},
		</if>
    	<if test="taskOrder != null and taskOrder != ''">
			#{taskOrder},
		</if>
    	<if test="orderNumber != null and orderNumber != ''">
			#{orderNumber},
		</if>
    	<if test="packNumber != null and packNumber != ''">
			#{packNumber},
		</if>
    	<if test="routeName != null and routeName != ''">
			#{routeName},
		</if>
    	
	</sql>
	
	<!-- 更新字段 -->
	<sql id="Update_Column">
		create_id = #{createId},
    	create_time = #{createTime},
    	update_id = #{updateId},
    	update_time = #{updateTime},
    	status = #{status},
    	version = #{version},
    	remarks = #{remarks},
    	delivery_task_id = #{deliveryTaskId},
    	task_order = #{taskOrder},
    	order_number = #{orderNumber},
    	pack_number = #{packNumber},
    	route_name = #{routeName},

	</sql>
	
	<!-- 更新字段（判空） -->
	<sql id="Update_Column_NotNull">
		<if test="createId != null and createId != ''">
			create_id = #{createId},
		</if>
    	<if test="createTime != null and createTime != ''">
			create_time = #{createTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id = #{updateId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time = #{updateTime},
		</if>
    	<if test="status != null and status != ''">
			status = #{status},
		</if>
    	<if test="version != null and version != ''">
			version = #{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks = #{remarks},
		</if>
    	<if test="deliveryTaskId != null and deliveryTaskId != ''">
			delivery_task_id = #{deliveryTaskId},
		</if>
    	<if test="taskOrder != null and taskOrder != ''">
			task_order = #{taskOrder},
		</if>
    	<if test="orderNumber != null and orderNumber != ''">
			order_number = #{orderNumber},
		</if>
    	<if test="packNumber != null and packNumber != ''">
			pack_number = #{packNumber},
		</if>
    	<if test="routeName != null and routeName != ''">
			route_name = #{routeName},
		</if>
    	
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <trim suffixOverrides=",">
        <include refid="Base_Column_List"/>
        </trim>
        from delivery_task_detail
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTaskDetail">
		insert into delivery_task_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_id, 
			create_time, 
			update_id, 
			update_time, 
			status, 
			version, 
			remarks, 
			delivery_task_id, 
			task_order, 
			order_number, 
			pack_number,
			route_name,
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values"/>
		</trim>
	</insert>
	
	<insert id="insertSelective" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTaskDetail">
		insert into delivery_task_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List_NotNull"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values_NotNull"/>
		</trim>
	</insert>


	<update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTaskDetail">
		update delivery_task_detail
		<set>
			<include refid="Update_Column"/>
		</set>
		
		<where>
		id = #{id} and status = 1
		</where>
		
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.deliveryTask.DeliveryTaskDetail">
		update delivery_task_detail
		<set>
			<include refid="Update_Column_NotNull"/>
		</set>
		<where>
		id = #{id} and status = 1
		</where>
	</update>

	<!-- 删除数据（逻辑删除） -->
	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update  delivery_task_detail
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 移除数据（物理删除） -->
	<delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from delivery_task_detail
		where id = #{id,jdbcType=INTEGER}
	</delete>


    <select id="selectDetailByTaskId" resultMap="taskDetailRespVo">
		select <include refid="Base_Column_List"/>
		from delivery_task_detail
		where status = 1
		and delivery_task_id = #{taskId}
	</select>

	<delete id="deleteByTaskId">
		update delivery_task_detail
		<set>
			status = 0
		</set>
		<where>
			delivery_task_id = #{taskId}
		</where>
	</delete>

	<insert id="insertList">
		insert into delivery_task_detail
			(create_id, create_time, update_id, update_time,
			status, version, remarks, delivery_task_id, task_order,
			order_number, pack_number, route_name)
		values
		<foreach collection="deliveryTaskDetailList" item="item" separator=",">
			(#{item.createId},#{item.createTime},#{item.updateId},#{item.updateTime},
			1,0,#{item.remarks},#{item.deliveryTaskId},
			#{item.taskOrder},#{item.orderNumber},#{item.packNumber},#{item.routeName})
		</foreach>
	</insert>

	<resultMap id="taskDetailRespVo" extends="BaseResultMap" type="com.example.warehouse.vo.deliveryTask.DeliveryTaskDetailRespVo">

	</resultMap>
</mapper>