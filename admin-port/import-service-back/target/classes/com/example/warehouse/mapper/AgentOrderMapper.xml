<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.AgentOrderMapper">
  <resultMap id="BaseResultMap" type="com.example.warehouse.entity.AgentOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="agent_id" jdbcType="VARCHAR" property="agentId" />
    <result column="agent_name" jdbcType="VARCHAR" property="agentName" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="order_number" jdbcType="VARCHAR" property="orderNumber" />
    <result column="agent_number" jdbcType="VARCHAR" property="agentNumber" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="create_id" jdbcType="VARCHAR" property="createId" />
    <result column="last_update_time" jdbcType="VARCHAR" property="lastUpdateTime" />
    <result column="last_update_id" jdbcType="VARCHAR" property="lastUpdateId" />

    <result column="operatorName" jdbcType="VARCHAR" property="operatorName" />
    <result column="route_name" jdbcType="VARCHAR" property="routeName" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="profit" jdbcType="DECIMAL" property="profit" />
  </resultMap>
  <sql id="Base_Column_List">
    id, agent_id, agent_name, money, order_number, agent_number, `status`, create_time,
    create_id, last_update_time, last_update_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from agent_order
    where id = #{id,jdbcType=INTEGER} and status = 1
  </select>

  <select id="selectByOrderNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from agent_order
    where order_number = #{orderNumber,jdbcType=VARCHAR} and status = 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    update agent_order set status = 0
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.warehouse.entity.AgentOrder">
    insert into agent_order (id, agent_id, agent_name,
      money, order_number, agent_number,
      `status`, create_time, create_id,
      last_update_time, last_update_id)
    values (#{id,jdbcType=INTEGER}, #{agentId,jdbcType=INTEGER}, #{agentName,jdbcType=VARCHAR},
      #{money,jdbcType=DOUBLE}, #{orderNumber,jdbcType=VARCHAR}, #{agentNumber,jdbcType=VARCHAR},
      1, now(), #{createId,jdbcType=INTEGER},
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{lastUpdateId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.warehouse.entity.AgentOrder">
    insert into agent_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="agentId != null">
        agent_id,
      </if>
      <if test="agentName != null">
        agent_name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="agentNumber != null">
        agent_number,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="lastUpdateId != null">
        last_update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="agentId != null">
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="agentName != null">
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentNumber != null">
        #{agentNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        #{lastUpdateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.AgentOrder">
    update agent_order
    <set>
      <if test="agentId != null">
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="agentName != null">
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="agentNumber != null">
        agent_number = #{agentNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        last_update_id = #{lastUpdateId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByOrderNumber" parameterType="com.example.warehouse.entity.AgentOrder">
    update agent_order
    <set>
      <if test="agentName != null">
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="agentNumber != null">
        agent_number = #{agentNumber,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateId != null">
        last_update_id = #{lastUpdateId,jdbcType=INTEGER},
      </if>
    </set>
    where order_number = #{orderNumber,jdbcType=VARCHAR}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.AgentOrder">
    update agent_order
    set agent_id = #{agentId,jdbcType=INTEGER},
      agent_name = #{agentName,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      agent_number = #{agentNumber,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_id = #{createId,jdbcType=INTEGER},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      last_update_id = #{lastUpdateId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- 批量插入 -->
  <insert id="batchInsert" parameterType="list">
    insert into agent_order
    (agent_id, agent_name,
    money, order_number, agent_number,
    status, create_time, create_id,
    last_update_time, last_update_id)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.agentId,jdbcType=VARCHAR},#{item.agentName,jdbcType=VARCHAR},
      #{item.money},#{item.orderNumber,jdbcType=VARCHAR},#{item.agentNumber,jdbcType=VARCHAR},
      '1', now(),#{item.createId,jdbcType=VARCHAR},
      null, null
      )
    </foreach>
  </insert>

<!-- 批量更新 -->
  <update id="batchUpdate" parameterType="list">
    <foreach collection="list" index="index" item="item" separator=";">
      update agent_order
      set agent_id = #{item.agentId},
      agent_name = #{item.agentName},
      money = #{item.money},
      agent_number = #{item.agentNumber},
      last_update_time = now(),
      last_update_id = #{item.lastUpdateId}
      where order_number = #{item.orderNumber}
    </foreach>
  </update>

  <!-- 查找所有系统订单号的集合 -->
  <select id="getOrderNumberList" resultMap="OrderNumberMap">
  		select s.agent_id as id,s.agent_name as name from agent_order s where s.status = 1
   </select>
  <resultMap id="OrderNumberMap" type="java.util.HashMap">
    <result column="id" property="id" jdbcType="VARCHAR"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
  </resultMap>

<!--查询未结算的订单号-->
  <select id="getOrderNumberHaveNoSettle" resultType="string">
    SELECT
        ca.order_number
    from customer_account ca
        LEFT JOIN agent_order ao ON ca.order_number = ao.order_number and ao.status = 1
    WHERE
      ca.cost_type = 2
      AND ca.`status` = 1
      and ao.order_number is null
  </select>

  <select id="getAgentOrderListByAgentId" resultMap="BaseResultMap" parameterType="map">
    select
    ao.id, ao.agent_id, ao.money, ao.order_number, ao.agent_number, ao.`status`, ao.create_time,
    ao.create_id, ao.last_update_time, ao.last_update_id,
    a.agent_name,u.username as operatorName,
    tr.route_name,
    cp.actual_price as amount,
    c.customer_name,
    (cp.actual_price - ao.money) as profit
    from agent_order ao LEFT JOIN agent a on a.agent_code = ao.agent_id and a.status = 1
    LEFT JOIN user u on u.id = ao.create_id
    LEFT JOIN customer_pack cp on cp.order_number = ao.order_number and cp.status = 1
    LEFT JOIN transportation_route tr on tr.id = cp.transportation_route_id and tr.status = 1
    LEFT JOIN customer c on c.id = cp.customer_id
    where ao.status = 1
    and ao.agent_id = #{agentId,jdbcType=VARCHAR}
    <if test="orderNumber != null and orderNumber != ''">
      and ao.order_number = #{orderNumber,jdbcType=VARCHAR}
    </if>
    <if test="agentNumber != null and agentNumber != ''">
      and ao.agent_number = #{agentNumber,jdbcType=VARCHAR}
    </if>
    <if test="customerName != null and customerName != ''">
      and c.customer_name like concat('%',#{customerName,jdbcType=VARCHAR},'%')
    </if>
    <if test="startTime != null and '' != startTime ">
      <![CDATA[ and DATE_FORMAT(ao.create_time,'%Y-%m-%d') >= #{startTime}
        ]]>
    </if>
    <if test=" endTime != null and '' != endTime ">
      <![CDATA[
				and DATE_FORMAT(ao.create_time,'%Y-%m-%d') <= #{endTime}
			]]>
    </if>
    ORDER BY
    ao.create_time DESC
    LIMIT #{pageNumber},#{pageSize}
  </select>

  <select id="countAgentOrderListByAgentId" resultType="int" parameterType="map">
    select
    count(1)
    from agent_order ao LEFT JOIN agent a on a.agent_code = ao.agent_id and a.status = 1
    LEFT JOIN user u on u.id = ao.create_id
    LEFT JOIN customer_pack cp on cp.order_number = ao.order_number and cp.status = 1
    LEFT JOIN transportation_route tr on tr.id = cp.transportation_route_id and tr.status = 1
    LEFT JOIN customer c on c.id = cp.customer_id
    where ao.status = 1
    and ao.agent_id = #{agentId,jdbcType=VARCHAR}
    <if test="orderNumber != null and orderNumber != ''">
      and ao.order_number = #{orderNumber,jdbcType=VARCHAR}
    </if>
    <if test="agentNumber != null and agentNumber != ''">
      and ao.agent_number = #{agentNumber,jdbcType=VARCHAR}
    </if>
    <if test="customerName != null and customerName != ''">
      and c.customer_name like concat('%',#{customerName,jdbcType=VARCHAR},'%')
    </if>
    <if test="startTime != null and '' != startTime ">
      <![CDATA[ and DATE_FORMAT(ao.create_time,'%Y-%m-%d') >= #{startTime}
        ]]>
    </if>
    <if test=" endTime != null and '' != endTime ">
      <![CDATA[
				and DATE_FORMAT(ao.create_time,'%Y-%m-%d') <= #{endTime}
			]]>
    </if>
  </select>

<!--更新转单号，为保证统一，同时更新两张表-->
  <update id="updateAgentNumber" parameterType="map">
    update agent_order
    set agent_number = #{agentNumber,jdbcType=VARCHAR},
        last_update_time=now(),
        agent_id = #{agentId,jdbcType=VARCHAR},
        money = #{money,jdbcType=DECIMAL}
    where order_number = #{orderNumber,jdbcType=VARCHAR}
  </update>
</mapper>
