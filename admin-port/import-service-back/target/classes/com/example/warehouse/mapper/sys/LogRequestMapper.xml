<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.sys.LogRequestMapper">
  <resultMap id="BaseResultMap" type="com.example.warehouse.entity.sys.LogRequest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="request_url" jdbcType="VARCHAR" property="requestUrl" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="request_ip" jdbcType="VARCHAR" property="requestIp" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="request_param" jdbcType="VARCHAR" property="requestParam" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, request_url, create_time, request_ip, message, request_param, customer_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from logrequest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from logrequest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.warehouse.entity.sys.LogRequest">
    insert into logrequest (id, request_url, create_time,
      request_ip, message, request_param,
      customer_id)
    values (#{id,jdbcType=INTEGER}, #{requestUrl,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{requestIp,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{requestParam,jdbcType=VARCHAR},
      #{customerId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.warehouse.entity.sys.LogRequest">
    insert into logrequest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="requestUrl != null">
        request_url,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="requestIp != null">
        request_ip,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="requestParam != null">
        request_param,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="requestUrl != null">
        #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestIp != null">
        #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="requestParam != null">
        #{requestParam,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.sys.LogRequest">
    update logrequest
    <set>
      <if test="requestUrl != null">
        request_url = #{requestUrl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestIp != null">
        request_ip = #{requestIp,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="requestParam != null">
        request_param = #{requestParam,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.sys.LogRequest">
    update logrequest
    set request_url = #{requestUrl,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      request_ip = #{requestIp,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      request_param = #{requestParam,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
