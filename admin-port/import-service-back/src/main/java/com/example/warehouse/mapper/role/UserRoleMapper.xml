<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.role.UserRoleMapper">
  <resultMap id="BaseResultMap" type="com.example.warehouse.entity.role.UserRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_comment" jdbcType="VARCHAR" property="roleComment" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_available" jdbcType="INTEGER" property="isAvailable" />
    <result column="level" jdbcType="INTEGER" property="level" />
  </resultMap>
  <sql id="Base_Column_List">
    t.id, t.role_name, t.role_comment, t.remark, t.status, t.is_available, t.`level`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_role t
    where t.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.warehouse.entity.role.UserRole" useGeneratedKeys="true">
    insert into user_role (role_name, role_comment, remark, is_available)
    values (#{roleName,jdbcType=VARCHAR}, #{roleComment,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{isAvailable})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.warehouse.entity.role.UserRole" useGeneratedKeys="true">
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null and roleName != '' ">
        role_name,
      </if>
      <if test="roleComment != null and roleComment != '' ">
        role_comment,
      </if>
      <if test="remark != null and remark != '' ">
        remark,
      </if>
      <if test="isAvailable != null and isAvailable != '' ">
        is_available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null and roleName != ''">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleComment != null and roleComment != ''">
        #{roleComment,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isAvailable != null and isAvailable != ''">
        #{isAvailable},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.role.UserRole">
    update user_role
    <set>
      <if test="roleName != null and roleName != ''">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleComment != null and roleComment != ''">
        role_comment = #{roleComment,jdbcType=VARCHAR},
      </if>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null and status != ''">
        `status` = #{status},
      </if>
      <if test="is_available != null and is_available != ''">
        is_available = #{isAvailable},
      </if>
      <if test="level != null and level != ''">
        `level` = #{level},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.role.UserRole">
    update user_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_comment = #{roleComment,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      `status` = #{status},
      is_available = #{isAvailable},
      `level` = #{level}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectUserRolePermission" parameterType="java.lang.Integer" resultType="com.example.warehouse.vo.role.UserRolePermissionVo">
    select id, role_name as roleName, role_comment as roleComment
    from user_role
    where
    id = #{roleId} and `status` = 1
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_role t
    where t.`status` = 1
  </select>

  <select id="selectAllByRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user_role t
    where t.`status` = 1
    <if test="roleName != null and roleName != ''">
      and t.role_name like concat('%',#{roleName},'%')
    </if>
    <if test="roleComment != null and roleComment != ''">
      and t.role_comment like concat('%',#{roleComment},'%')
    </if>
  </select>

  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from user_role t
    left join `user` u on u.role_id = t.id
    where
    u.id = #{userId} and t.`status` = 1
  </select>

  <update id="useOrStop" >
    update user_role
    set is_available = #{isAvailable}
    where id = #{roleId}
  </update>

  <update id="deleteRoleByRoleId" parameterType="java.lang.Integer">
    update user_role
    set `status` = 0
    where id = #{roleId}
  </update>
</mapper>