<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.backlog.BacklogDetailMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.backlog.BacklogDetail">
        <id column="id" jdbcType="INTEGER" property="id"/>
    	
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="backlog_id" jdbcType="INTEGER" property="backlogId"/>
        <result column="job_content" jdbcType="VARCHAR" property="jobContent"/>
    		
    </resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		id, create_time, create_id, update_time, update_id, status, version, remarks, backlog_id, job_content
	</sql>
	
	<!-- 插入字段实际数值 -->
	<sql id="Insert_Column_Values">
		#{createTime},#{createId},#{updateTime},#{updateId},#{status},#{version},#{remarks},#{backlogId},#{jobContent}
	</sql>
	
	<!-- 插入字段（判空） -->
	<sql id="Base_Column_List_NotNull">
		<if test="createTime != null and createTime != ''">
			create_time, 
		</if>
    	<if test="createId != null and createId != ''">
			create_id, 
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time, 
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id, 
		</if>
    	<if test="status != null and status != ''">
			status, 
		</if>
    	<if test="version != null and version != ''">
			version, 
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks, 
		</if>
    	<if test="backlogId != null and backlogId != ''">
			backlog_id, 
		</if>
    	<if test="jobContent != null and jobContent != ''">
			job_content, 
		</if>
    	
	</sql>
	
	<!-- 插入字段实际数值(判空) -->
	<sql id="Insert_Column_Values_NotNull">
		<if test="createTime != null and createTime != ''">
			#{createTime},
		</if>
    	<if test="createId != null and createId != ''">
			#{createId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			#{updateTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			#{updateId},
		</if>
    	<if test="status != null and status != ''">
			#{status},
		</if>
    	<if test="version != null and version != ''">
			#{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			#{remarks},
		</if>
    	<if test="backlogId != null and backlogId != ''">
			#{backlogId},
		</if>
    	<if test="jobContent != null and jobContent != ''">
			#{jobContent},
		</if>
    	
	</sql>
	
	<!-- 更新字段 -->
	<sql id="Update_Column">
		create_time = #{createTime},
    	create_id = #{createId},
    	update_time = #{updateTime},
    	update_id = #{updateId},
    	status = #{status},
    	version = #{version},
    	remarks = #{remarks},
    	backlog_id = #{backlogId},
    	job_content = #{jobContent},
    	
	</sql>
	
	<!-- 更新字段（判空） -->
	<sql id="Update_Column_NotNull">
		<if test="createTime != null and createTime != ''">
			create_time = #{createTime},
		</if>
    	<if test="createId != null and createId != ''">
			create_id = #{createId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time = #{updateTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id = #{updateId},
		</if>
    	<if test="status != null and status != ''">
			status = #{status},
		</if>
    	<if test="version != null and version != ''">
			version = #{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks = #{remarks},
		</if>
    	<if test="backlogId != null and backlogId != ''">
			backlog_id = #{backlogId},
		</if>
    	<if test="jobContent != null and jobContent != ''">
			job_content = #{jobContent},
		</if>
    	
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <trim suffixOverrides=",">
        <include refid="Base_Column_List"/>
        </trim>
        from backlog_detail
        where id = #{id,jdbcType=INTEGER}
    </select>
	
	<insert id="insert" parameterType="com.example.warehouse.entity.backlog.BacklogDetail">
		insert into backlog_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_time, 
			create_id, 
			update_time, 
			update_id, 
			status, 
			version, 
			remarks, 
			backlog_id, 
			job_content, 
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values"/>
		</trim>
	</insert>
	
	<insert id="insertSelective" parameterType="com.example.warehouse.entity.backlog.BacklogDetail">
		insert into backlog_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List_NotNull"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values_NotNull"/>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.backlog.BacklogDetail">
		update backlog_detail
		<set>
			<include refid="Update_Column"/>
		</set>
		
		<where>
		id = #{id} and status = 1
		</where>
		
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.backlog.BacklogDetail">
		update backlog_detail
		<set>
			<include refid="Update_Column_NotNull"/>
		</set>
		<where>
		id = #{id} and status = 1
		</where>
	</update>

	<!-- 删除数据（逻辑删除） -->
	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update  backlog_detail
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 移除数据（物理删除） -->
	<delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from backlog_detail
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<select id="getBacklogDetailByBacklogId" resultMap="BaseResultMap">
		select id, remarks, backlog_id, job_content, DATE_FORMAT(create_time, '%Y-%m-%d %k:%i:%s') as create_time
		from backlog_detail
		<where>
			status = 1
			and backlog_id = #{backlogId}
		</where>
	</select>
	
</mapper>