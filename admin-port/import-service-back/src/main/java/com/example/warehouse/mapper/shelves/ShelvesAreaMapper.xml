<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.shelves.ShelvesAreaMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.shelves.ShelvesArea">
        <id column="id" jdbcType="INTEGER" property="id"/>
    	
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="shelves_area" jdbcType="VARCHAR" property="shelvesArea"/>
        <result column="shelves_type" jdbcType="VARCHAR" property="shelvesType"/>
        <result column="sorting_export" jdbcType="VARCHAR" property="sortingExport"/>

    </resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		id, create_time, create_id, update_time, update_id, status, version, remarks,
		shelves_area, shelves_type, sorting_export
	</sql>
	
	<!-- 插入字段实际数值 -->
	<sql id="Insert_Column_Values">
		#{createTime},#{createId},#{updateTime},#{updateId},#{status},#{version},#{remarks},
		#{shelvesArea},#{shelvesType},#{sortingExport}
	</sql>
	
	<!-- 插入字段（判空） -->
	<sql id="Base_Column_List_NotNull">
		<if test="createTime != null and createTime != ''">
			create_time, 
		</if>
    	<if test="createId != null and createId != ''">
			create_id, 
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time, 
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id, 
		</if>
    	<if test="status != null and status != ''">
			status, 
		</if>
    	<if test="version != null and version != ''">
			version, 
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks, 
		</if>
    	<if test="shelvesArea != null and shelvesArea != ''">
			shelves_area, 
		</if>
    	<if test="shelvesType != null and shelvesType != ''">
			shelves_type, 
		</if>
    	<if test="sortingExport != null and sortingExport != ''">
			sorting_export,
		</if>
    	
	</sql>
	
	<!-- 插入字段实际数值(判空) -->
	<sql id="Insert_Column_Values_NotNull">
		<if test="createTime != null and createTime != ''">
			#{createTime},
		</if>
    	<if test="createId != null and createId != ''">
			#{createId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			#{updateTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			#{updateId},
		</if>
    	<if test="status != null and status != ''">
			#{status},
		</if>
    	<if test="version != null and version != ''">
			#{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			#{remarks},
		</if>
    	<if test="shelvesArea != null and shelvesArea != ''">
			#{shelvesArea},
		</if>
    	<if test="shelvesType != null and shelvesType != ''">
			#{shelvesType},
		</if>
    	<if test="sortingExport != null and sortingExport != ''">
			#{sortingExport},
		</if>
    	
	</sql>
	
	<!-- 更新字段 -->
	<sql id="Update_Column">
		create_time = #{createTime},
    	create_id = #{createId},
    	update_time = #{updateTime},
    	update_id = #{updateId},
    	status = #{status},
    	version = #{version},
    	remarks = #{remarks},
    	shelves_area = #{shelvesArea},
    	shelves_type = #{shelvesType},
    	sorting_export = #{sortingExport},

	</sql>
	
	<!-- 更新字段（判空） -->
	<sql id="Update_Column_NotNull">
		<if test="createTime != null and createTime != ''">
			create_time = #{createTime},
		</if>
    	<if test="createId != null and createId != ''">
			create_id = #{createId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time = #{updateTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id = #{updateId},
		</if>
    	<if test="status != null and status != ''">
			status = #{status},
		</if>
    	<if test="version != null and version != ''">
			version = #{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks = #{remarks},
		</if>
    	<if test="shelvesArea != null and shelvesArea != ''">
			shelves_area = #{shelvesArea},
		</if>
    	<if test="shelvesType != null and shelvesType != ''">
			shelves_type = #{shelvesType},
		</if>
    	<if test="sortingExport != null and sortingExport != ''">
			sorting_export = #{sortingExport},
		</if>
    	
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <trim suffixOverrides=",">
        <include refid="Base_Column_List"/>
        </trim>
        from shelves_area
        where status = 1 and id = #{id,jdbcType=INTEGER}
    </select>

	<select id="getShelvesAreaCount" resultType="java.lang.Integer">
		select count(1)
		from shelves_area t
		left join `user` u on u.id = t.create_id and u.status = 1
		<where>
			t.status = 1
			<if test="commercialAreaId!= null">
				and u.commercial_area_id = #{commercialAreaId}
			</if>
			<if test="shelvesType != null and shelvesType != ''">
				and t.shelves_type = #{shelvesType}
			</if>
		</where>
	</select>

	<select id="getShelvesAreaList" resultMap="ShelvesRespVo">
		select
			t.id, t.create_time, t.create_id, t.update_time, t.update_id,
			t.status, t.version, t.remarks,
			t.shelves_area, t.shelves_type, t.sorting_export
		from shelves_area t
		left join `user` u on u.id = t.create_id and u.status = 1
		<where>
			t.status = 1
			<if test="commercialAreaId!= null">
				and u.commercial_area_id = #{commercialAreaId}
			</if>
			<if test="shelvesType != null and shelvesType != ''">
				and t.shelves_type = #{shelvesType}
			</if>
		</where>
		<if test="pageNumber != null">
			limit #{pageNumber}, #{pageSize}
		</if>
	</select>

	<insert id="insert" parameterType="com.example.warehouse.entity.shelves.ShelvesArea">
		insert into shelves_area
		<trim prefix="(" suffix=")" suffixOverrides=",">
			create_time, 
			create_id, 
			update_time, 
			update_id, 
			status, 
			version, 
			remarks, 
			shelves_area, 
			shelves_type,
			sorting_export,
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values"/>
		</trim>
	</insert>
	
	<insert id="insertSelective" parameterType="com.example.warehouse.entity.shelves.ShelvesArea">
		insert into shelves_area
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List_NotNull"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values_NotNull"/>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.shelves.ShelvesArea">
		update shelves_area
		<set>
			<include refid="Update_Column"/>
		</set>
		
		<where>
		id = #{id} and status = 1
		</where>
		
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.shelves.ShelvesArea">
		update shelves_area
		<set>
			<include refid="Update_Column_NotNull"/>
		</set>
		<where>
		id = #{id} and status = 1
		</where>
	</update>

	<!-- 删除数据（逻辑删除） -->
	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update  shelves_area
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- 移除数据（物理删除） -->
	<delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from shelves_area
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<select id="selectShelvesAreaGoodsSum" resultType="java.lang.Integer">
		select count(1) from goods_shelves_row
		where status = 1 and is_picking = 2
		and shelves_area_id = #{id}
	</select>

	<select id="selectRepetitionArea" resultType="java.lang.Integer">
		select count(1)
		from shelves_area
		<where>
			status = 1
			and shelves_area = #{shelvesArea}
			<if test="id != null">
				and id != #{id}
			</if>
		</where>
	</select>
	<select id="selectArea" resultType="com.example.warehouse.entity.shelves.ShelvesArea">
		select <include refid="Base_Column_List"/>
		from shelves_area
		<where>
			status = 1
			and shelves_area = #{shelvesArea}
		</where>
	</select>
	<select id="selectAbnormalArea" resultType="com.example.warehouse.entity.shelves.ShelvesGoodsCapacity">
		select id as shelvesAreaId, shelves_area as shelvesArea, sorting_export as sortingExport
		from shelves_area
		<where>
			status = 1
			and shelves_type = 'abnormal'
		</where>
		limit 0, 1
	</select>
	<select id="selectBigArea" resultType="com.example.warehouse.entity.shelves.ShelvesGoodsCapacity">
		select id as shelvesAreaId, shelves_area as shelvesArea, sorting_export as sortingExport
		from shelves_area
		<where>
			status = 1
			and shelves_type = 'big'
		</where>
		limit 0, 1
	</select>

	<resultMap id="ShelvesRespVo" extends="BaseResultMap" type="com.example.warehouse.vo.shelves.ShelvesRespVo">
		<collection property="goodsSum" column="id"
					select="com.example.warehouse.mapper.shelves.ShelvesAreaMapper.selectShelvesAreaGoodsSum"/>
		<collection property="shelvesRowList" column="id"
					select="com.example.warehouse.mapper.shelves.ShelvesRowMapper.selectByParentId"/>
	</resultMap>

</mapper>