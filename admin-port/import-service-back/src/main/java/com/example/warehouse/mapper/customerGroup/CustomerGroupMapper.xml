<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.customerGroup.CustomerGroupMapper">
    <resultMap id="BaseResultMap" type="com.example.warehouse.entity.customerGroup.CustomerGroup">
        <id column="id" jdbcType="INTEGER" property="id"/>
    	
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="group_name" jdbcType="VARCHAR" property="groupName"/>
    		
    </resultMap>
	
	<!-- 字段 -->
	<sql id="Base_Column_List">
		create_time,create_id,update_time,
		update_id,status,version,remarks,
		group_name
	</sql>
	
	<!-- 插入字段实际数值 -->
	<sql id="Insert_Column_Values">
		#{createTime},#{createId},#{updateTime},
		#{updateId},#{status},#{version},#{remarks},
		#{groupName}
	</sql>
	
	<!-- 插入字段（判空） -->
	<sql id="Base_Column_List_NotNull">
		<if test="createTime != null and createTime != ''">
			create_time, 
		</if>
    	<if test="createId != null and createId != ''">
			create_id, 
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time, 
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id, 
		</if>
    	<if test="status != null and status != ''">
			status, 
		</if>
    	<if test="version != null and version != ''">
			version, 
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks, 
		</if>
    	<if test="groupName != null and groupName != ''">
			group_name, 
		</if>
    	
	</sql>
	
	<!-- 插入字段实际数值(判空) -->
	<sql id="Insert_Column_Values_NotNull">
		<if test="createTime != null and createTime != ''">
			#{createTime},
		</if>
    	<if test="createId != null and createId != ''">
			#{createId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			#{updateTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			#{updateId},
		</if>
    	<if test="status != null and status != ''">
			#{status},
		</if>
    	<if test="version != null and version != ''">
			#{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			#{remarks},
		</if>
    	<if test="groupName != null and groupName != ''">
			#{groupName},
		</if>
    	
	</sql>
	
	<!-- 更新字段 -->
	<sql id="Update_Column">
		create_time = #{createTime},
    	create_id = #{createId},
    	update_time = #{updateTime},
    	update_id = #{updateId},
    	status = #{status},
    	version = #{version},
    	remarks = #{remarks},
    	group_name = #{groupName},
    	
	</sql>
	
	<!-- 更新字段（判空） -->
	<sql id="Update_Column_NotNull">
		<if test="createTime != null and createTime != ''">
			create_time = #{createTime},
		</if>
    	<if test="createId != null and createId != ''">
			create_id = #{createId},
		</if>
    	<if test="updateTime != null and updateTime != ''">
			update_time = #{updateTime},
		</if>
    	<if test="updateId != null and updateId != ''">
			update_id = #{updateId},
		</if>
    	<if test="status != null and status != ''">
			status = #{status},
		</if>
    	<if test="version != null and version != ''">
			version = #{version},
		</if>
    	<if test="remarks != null and remarks != ''">
			remarks = #{remarks},
		</if>
    	<if test="groupName != null and groupName != ''">
			group_name = #{groupName},
		</if>
    	
	</sql>
	
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from customer_group
        where id = #{id,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.example.warehouse.entity.customerGroup.CustomerGroup">
		insert into customer_group
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values"/>
		</trim>
	</insert>
	
	<insert id="insertSelective" parameterType="com.example.warehouse.entity.customerGroup.CustomerGroup">
		insert into customer_group
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List_NotNull"/>
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Insert_Column_Values_NotNull"/>
		</trim>
	</insert>
	
	<update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.customerGroup.CustomerGroup">
		update customer_group
		<set>
			<include refid="Update_Column"/>
		</set>
		
		<where>
		id = #{id} and status = 1
		</where>
		
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="com.example.warehouse.entity.customerGroup.CustomerGroup">
		update customer_group
		<set>
			<include refid="Update_Column_NotNull"/>
		</set>
		<where>
		id = #{id} and status = 1
		</where>
	</update>
	
	<!-- 移除数据（物理删除） -->
	<delete id="removeByPrimaryKey" parameterType="java.lang.Integer">
		delete from customer_group
		where id = #{id,jdbcType=INTEGER}
	</delete>
	
	<!-- 删除数据（逻辑删除） -->
	<update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		update  customer_group
		set `status` = 0
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="selectCustomerGroupCount" resultType="java.lang.Integer" parameterType="com.example.warehouse.vo.customerGroup.CustomerGroupReqVo">
		select t.id
		from customer_group t
		left join `user` u on u.id = t.create_id and u.status = 1
		<if test="(customerName != null and customerName != '') || (loginName != null and loginName != '')">
			left join customer_group_link cglink on cglink.customer_group_id = t.id and cglink.status = 1
			left join customer c on c.id = cglink.customer_id and c.status = 1
		</if>
		<where>
			t.status = 1
			<if test="commercialAreaId!= null">
				and u.commercial_area_id = #{commercialAreaId}
			</if>
			<if test="customerName != null and customerName != ''">
				and c.customer_name regexp #{customerName}
			</if>
			<if test="loginName != null and loginName != ''">
				and c.login_name regexp #{loginName}
			</if>
			<if test="groupName != null and groupName != ''">
				and t.group_name regexp #{groupName}
			</if>
			<if test="createName != null and createName != ''">
				and u.username regexp #{createName}
			</if>
		</where>
		GROUP BY t.id
	</select>

	<select id="selectCustomerGroupList" parameterType="com.example.warehouse.vo.customerGroup.CustomerGroupReqVo" resultMap="CustomerGroupRespVoMap">
		select <include refid="CustomerGroupRespVoColumns"/>
		from customer_group t
		left join `user` u on u.id = t.create_id and u.status = 1
        <if test="(customerName != null and customerName != '') || (loginName != null and loginName != '')">
            left join customer_group_link cglink on cglink.customer_group_id = t.id and cglink.status = 1
            left join customer c on c.id = cglink.customer_id and c.status = 1
        </if>
		<where>
			t.status = 1
			<if test="commercialAreaId!= null">
				and u.commercial_area_id = #{commercialAreaId}
			</if>
			<if test="customerName != null and customerName != ''">
				and c.customer_name regexp #{customerName}
			</if>
			<if test="loginName != null and loginName != ''">
				and c.login_name regexp #{loginName}
			</if>
			<if test="groupName != null and groupName != ''">
				and t.group_name regexp #{groupName}
			</if>
			<if test="createName != null and createName != ''">
				and u.username regexp #{createName}
			</if>
		</where>
		GROUP BY t.id
		limit #{pageNumber}, #{pageSize}
	</select>

	<select id="selectCustomerGroupById" resultMap="CustomerGroupRespVoByIdMap">
		select <include refid="CustomerGroupRespVoColumns"/>
		from customer_group t
		left join `user` u on u.id = t.create_id and u.status = 1
		<where>
			t.status = 1 and t.id = #{id}
		</where>
	</select>
    <select id="selectGroupByGroupName" resultType="java.lang.Integer">
		select count(1)
		from customer_group
		<where>
			status = 1
			and group_name = #{groupName}
			<if test="id != null">
				and id != #{id}
			</if>
		</where>
	</select>

    <sql id="CustomerGroupRespVoColumns">
		t.id,
		DATE_FORMAT(t.create_time,'%Y-%m-%d %k:%i:%s') as create_time,
    	DATE_FORMAT(t.update_time,'%Y-%m-%d %k:%i:%s') as update_time,
    	t.remarks, t.group_name, u.username
	</sql>

	<resultMap id="CustomerGroupRespVoMap" extends="BaseResultMap" type="com.example.warehouse.vo.customerGroup.CustomerGroupRespVo">
		<result column="username" property="createName"/>
		<collection property="groupCustomerNum" column="id"
					select="com.example.warehouse.mapper.customerGroup.CustomerGroupLinkMapper.selectCustomerNumByGroupId"/>
	</resultMap>

	<resultMap id="CustomerGroupRespVoByIdMap" extends="CustomerGroupRespVoMap"
			   type="com.example.warehouse.vo.customerGroup.CustomerGroupRespVo">

	</resultMap>

</mapper>