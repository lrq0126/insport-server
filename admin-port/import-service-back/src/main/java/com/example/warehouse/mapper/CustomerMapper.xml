<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.warehouse.mapper.CustomerMapper">
    <sql id="table">customer</sql>

    <sql id="selectCols">
      t.id, t.customer_name, t.customer_remarks, t.customer_no, t.last_update_id,t.login_name, t.password, t.age, t.gender,
      t.phone_number, t.call_number, t.zip_code,t.full_address, t.english_name, t.email, t.message, t.status,
      DATE_FORMAT(t.create_time,'%Y-%m-%d %k:%i:%s') as create_time, t.create_id,
      DATE_FORMAT(t.last_update_time,'%Y-%m-%d %k:%i:%s') as last_update_time,
      t.country,t.province,t.city,t.headimgurl,t.openid
  </sql>

    <resultMap id="beanMap" type="com.example.warehouse.entity.Customer">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="customer_name" jdbcType="VARCHAR" property="customerName"/>
        <result column="customer_remarks" jdbcType="VARCHAR" property="customerRemarks"/>
        <result column="customer_no" jdbcType="VARCHAR" property="customerNo"/>
        <result column="login_name" jdbcType="VARCHAR" property="loginName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="gender" jdbcType="VARCHAR" property="gender"/>
        <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber"/>
        <result column="call_number" jdbcType="VARCHAR" property="callNumber"/>
        <result column="zip_code" jdbcType="VARCHAR" property="zipCode"/>
        <result column="full_address" jdbcType="VARCHAR" property="fullAddress"/>
        <result column="english_name" jdbcType="VARCHAR" property="englishName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="message" jdbcType="VARCHAR" property="message"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime"/>
        <result column="last_update_id" jdbcType="INTEGER" property="lastUpdateId"/>

        <result column="country" jdbcType="VARCHAR" property="country"/>
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="headimgurl" jdbcType="VARCHAR" property="headimgurl"/>
        <result column="openid" jdbcType="VARCHAR" property="openid"/>

    </resultMap>
    <update id="updateByPrimaryKey" parameterType="com.example.warehouse.entity.Customer">
        update customer
        <set>
            <if test="customerName != null and customerName != ''">
                customer_name = #{customerName,jdbcType=VARCHAR},
            </if>
            <if test="customerRemarks != null and customerRemarks != ''">
                customer_remarks = #{customerRemarks,jdbcType=VARCHAR},
            </if>
            <if test="age != null and age != ''">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="password != null and password != ''">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phoneNumber != null and phoneNumber != ''">
                phone_number = #{phoneNumber,jdbcType=VARCHAR},
            </if>
            <if test="callNumber != null and callNumber != ''">
                call_number = #{callNumber,jdbcType=VARCHAR},
            </if>
            <if test="zipCode != null and zipCode != ''">
                zip_code = #{zipCode,jdbcType=VARCHAR},
            </if>
            <if test="fullAddress != null and fullAddress != ''">
                full_address = #{fullAddress,jdbcType=VARCHAR},
            </if>
            <if test="englishName != null and englishName != ''">
                english_name = #{englishName,jdbcType=VARCHAR},
            </if>
            <if test="email != null and email != ''">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="country != null and country != ''">
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="message != null and message != ''">
                message = #{message,jdbcType=VARCHAR},
            </if>
            <if test="createId != null and createId != ''">
                create_id = #{createId,jdbcType=INTEGER},
            </if>
            last_update_time = now(),
            <if test="lastUpdateId != null and lastUpdateId != ''">
                last_update_id = #{lastUpdateId,jdbcType=INTEGER},
            </if>
            <if test="openid != null and openid != ''">
                openid = #{openid}
            </if>
        </set>
        where
        customer_no = #{customerNo,jdbcType=VARCHAR}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.example.warehouse.entity.Customer">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into customer (customer_name, customer_remarks, customer_no,
        login_name, password, age,
        gender, phone_number, call_number, zip_code, full_address, english_name,
        email, message, `status`, create_time, create_id, last_update_time,
        last_update_id, openid, country)
        values
        (#{customerName,jdbcType=VARCHAR}, #{customerRemarks,jdbcType=VARCHAR}, #{customerNo,jdbcType=VARCHAR},
        #{loginName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{gender,jdbcType=VARCHAR},
        #{phoneNumber,jdbcType=VARCHAR}, #{callNumber,jdbcType=VARCHAR},
        #{zipCode,jdbcType=VARCHAR}, #{fullAddress,jdbcType=VARCHAR}, #{englishName,jdbcType=VARCHAR},
        #{email,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, 1,
        now(), #{createId,jdbcType=INTEGER}, #{lastUpdateTime,jdbcType=TIMESTAMP},
        #{lastUpdateId,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{country})
    </insert>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="beanMap">
        select
        <include refid="selectCols"/>
        from
        <include refid="table"/>
        t
        where t.id = #{id,jdbcType=INTEGER}
    </select>

    <resultMap id="CustomerRespVo" extends="beanMap" type="com.example.warehouse.vo.customer.CustomerRespVo">
        <collection property="integrals" column="id" select="com.example.warehouse.mapper.customer.CustomerIntegralMapper.selectIntegralCount"/>
    </resultMap>

    <select id="selectAll" resultMap="CustomerRespVo" parameterType="com.example.warehouse.vo.customer.CustomerReqVo">
        select
        <include refid="selectCols"/>,
        cf.from_type as fromType, u.username as fromUserName,
        cf.from_customer_id as fromCustomerId, cus.login_name as fromLoginName,
        cus.customer_name as fromCustomerName, cus.customer_no as fromCustomerNo
        from
        <include refid="table"/>t
        left join (select id, customer_id, from_customer_id, from_type, from_user_id from customer_from) cf on t.id = cf.customer_id
        left join (select id, customer_name, customer_no, login_name from customer) cus on cus.id = cf.from_customer_id
        left join `user` u on u.id = t.create_id and u.status = 1
        <where>
            t.status = 1
            <if test="commercialAreaId!= null and commercialAreaId != ''">
                and u.commercial_area_id = #{commercialAreaId}
            </if>
            <if test="customerName!= null and customerName!=''">and t.customer_name like CONCAT('%',#{customerName},'%')</if>
            <if test="phoneNumber!= null and phoneNumber!=''">and t.phone_number like CONCAT('%',#{phoneNumber},'%')</if>
            <if test="callNumber!= null and callNumber!=''">and t.call_number=#{callNumber}</if>
            <if test="fullAddress!= null and fullAddress!=''">and t.full_address like CONCAT('%',#{fullAddress},'%')</if>
            <if test="englishName!= null and englishName!=''">and t.english_name like CONCAT('%',#{englishName},'%')</if>
            <if test="email!= null and email!=''">and t.email=#{email}</if>
            <if test="loginName!= null and loginName!=''">and t.login_name like CONCAT('%',#{loginName},'%')</if>

            <if test="fromType!= null and fromType!=''">and cf.from_type = #{fromType} </if>
            <if test="fromUserName!= null and fromUserName!=''">and u.username = #{fromUserName} </if>
            <if test="fromCustomerLoginName!= null and fromCustomerLoginName!=''">and cus.login_name = #{fromCustomerLoginName}</if>
        </where>
        ORDER BY t.create_time desc
        LIMIT #{pageNumber},#{pageSize}
    </select>

    <select id="countSelectAll" resultType="java.lang.Integer" parameterType="com.example.warehouse.vo.customer.CustomerReqVo">
        select
        count(*) as count
        from
        <include refid="table"/>t
        left join (select id, customer_id, from_customer_id, from_type, from_user_id from customer_from) cf on t.id = cf.customer_id
        left join (select id, customer_name, login_name from customer) cus on cus.id = cf.from_customer_id
        left join `user` u on t.create_id = u.id and u.status = 1
        <where>
            t.status = 1
            <if test="commercialAreaId!= null and commercialAreaId != ''">
                and u.commercial_area_id = #{commercialAreaId}
            </if>
            <if test="customerName!= null and customerName!=''">and t.customer_name like CONCAT('%',#{customerName},'%')</if>
            <if test="phoneNumber!= null and phoneNumber!=''">and t.phone_number like CONCAT('%',#{phoneNumber},'%')</if>
            <if test="callNumber!= null and callNumber!=''">and t.call_number=#{callNumber}</if>
            <if test="fullAddress!= null and fullAddress!=''">and t.full_address like CONCAT('%',#{fullAddress},'%')</if>
            <if test="englishName!= null and englishName!=''">and t.english_name like CONCAT('%',#{englishName},'%')</if>
            <if test="email!= null and email!=''">and t.email=#{email}</if>
            <if test="loginName!= null and loginName!=''">and t.login_name like CONCAT('%',#{loginName},'%')</if>

            <if test="fromType!= null and fromType!=''">and cf.from_type = #{fromType} </if>
            <if test="fromUserName!= null and fromUserName!=''">and u.username = #{fromUserName} </if>
            <if test="fromCustomerLoginName!= null and fromCustomerLoginName!=''">and cus.login_name = #{fromCustomerLoginName}</if>
        </where>
    </select>

    <!--<select id="selectAll" resultMap="beanMap" parameterType="java.util.Map">-->
        <!--select-->
        <!--<include refid="selectCols"/>-->
        <!--from-->
        <!--<include refid="table"/>t-->
        <!--<where>-->
            <!--<include refid="condition_sql"/>-->
            <!--and-->
            <!--t.status = 1-->
        <!--</where>-->
        <!--ORDER BY t.create_time desc-->
        <!--LIMIT #{pageNumber},#{pageSize}-->
    <!--</select>-->

    <!--<select id="countSelectAll" resultType="java.lang.Integer" parameterType="java.util.Map">-->
        <!--select-->
        <!--count(*) as count-->
        <!--from-->
        <!--<include refid="table"/>t-->
        <!--<where>-->
            <!--<include refid="condition_sql"/>-->
            <!--and-->
            <!--t.status = 1-->
        <!--</where>-->
    <!--</select>-->

    <sql id="condition_sql">
        <if test="customerName!= null and customerName!=''">and t.customer_name like CONCAT('%',#{customerName},'%')</if>
        <if test="customerRemarks!= null and customerRemarks!=''">and t.customer_remarks like CONCAT('%',#{customerRemarks},'%')</if>
        <if test="customerNo!= null and customerNo!=''">and t.customer_no=#{customerNo}</if>
        <if test="age!= null and age!=''">and t.age=#{age}</if>
        <if test="gender!= null and gender!=''">and t.gender=#{gender}</if>
        <if test="phoneNumber!= null and phoneNumber!=''">and t.phone_number like CONCAT('%',#{phoneNumber},'%')</if>
        <if test="callNumber!= null and callNumber!=''">and t.call_number=#{callNumber}</if>
        <if test="fullAddress!= null and fullAddress!=''">and t.full_address like CONCAT('%',#{fullAddress},'%')</if>
        <if test="zipCode!= null and zipCode!=''">and t.zip_code=#{zipCode}</if>
        <if test="englishName!= null and englishName!=''">and t.english_name like CONCAT('%',#{englishName},'%')</if>
        <if test="email!= null and email!=''">and t.email=#{email}</if>
        <if test="createId!= null and createId!=''">and t.create_id=#{createId}</if>
        <if test="lastUpdateId!= null and lastUpdateId!=''">and t.last_update_id=#{lastUpdateId}</if>
        <if test="loginName!= null and loginName!=''">and t.login_name like CONCAT('%',#{loginName},'%')</if>
        <if test="password!= null and password!=''">and t.password=#{password}</if>
    </sql>

    <update id="del">
    update customer
    set
    status = 0 and last_update_id = #{userId}
    where customer_no = #{customerNo}
  </update>

    <select id="find" parameterType="java.util.Map" resultMap="beanMap">
        select
        t.id, t.customer_name, t.customer_remarks, t.customer_no, t.login_name, t.password, t.age, t.gender,
        t.phone_number, t.call_number, t.zip_code, t.full_address, t.english_name, t.email, t.message,
        DATE_FORMAT(t.create_time,'%Y-%m-%d %k:%i:%s') as create_time,
        t.country, t.province, t.city, t.headimgurl, t.openid
        from
        <include refid="table"/>
        t
        <where>
            <include refid="condition_sql"/>
            and t.status = 1
        </where>
    </select>

    <select id="findByName" resultMap="beanMap">
        select
        <include refid="selectCols"/>
        from
        <include refid="table"/>
        t
        where
        t.customer_name = #{name}
        <if test="phoneNumber != null and phoneNumber != ''">
            or phone_number = #{phoneNumber}
        </if>
        <if test="loginName != null and loginName != ''">
            or login_name = #{loginName}
        </if>
        and t.status = 1
    </select>

    <select id="findById" parameterType="java.lang.Integer" resultMap="beanMap">
        select <include refid="selectCols"/>
        from <include refid="table"/>t
        where t.id = #{id} and t.`status` = 1
    </select>

    <select id="getAllCustomer" resultType="com.example.warehouse.entity.Customer">
        select
        t.id, t.customer_name, t.customer_remarks, t.customer_no, t.login_name, t.password,
        t.phone_number, t.email, t.openid
        from <include refid="table"/> t
        <where>
            t.status = 1
        </where>
    </select>

    <select id="getAllCustomerLoginName" resultType="java.lang.String">
        select
        t.login_name
        from <include refid="table"/> t
        <where>
            t.status = 1
        </where>
    </select>

    <select id="findByCustomerNo" parameterType="java.lang.String" resultMap="beanMap">
        select <include refid="selectCols"/>
        from <include refid="table"/>t
        where t.customer_no = #{customerNo} and t.`status` = 1
    </select>

    <select id="getUserLoginNameList" resultType="string">
  		select login_name from customer where status = 1
   </select>

    <select id="getCustomerNoByLoginName" resultType="string">
  		select customer_no from customer where status = 1 and login_name = #{loginName}
   </select>

    <select id="getCustomerByLoginName" resultType="string" resultMap="beanMap">
  		select * from customer where status = 1 and login_name = #{loginName}
   </select>

<!-- 获取所有没有下单的客户 -->
    <select id="getNoOrderCustomer" resultMap="beanMap">
--         SELECT
--             *
--         FROM
--             customer
--         WHERE
--             STATUS = 1
--         AND openid IS NOT NULL
--         AND customer_no NOT IN (
--             SELECT
--                 c.customer_no
--             FROM
--                 goods g
--             INNER JOIN customer c ON c.customer_no = g.customer_no
--             WHERE
--                 g.`status` = 1
--             AND c.`status` = 1
--             GROUP BY
--                 c.customer_no
--         )AND customer_no NOT IN(
--             select customer_no from wechat_message where status = 1 and type = "no_order_20220530"
--         )
SELECT
*
FROM
	customer
WHERE
	customer_no IN (
		select customer_no from wechat_message where status = 1 and type = "no_order_20220530"
	)
	AND customer_no NOT IN (
		SELECT
			customer_no
		FROM
			goods
		WHERE
		`status` = 1
	)
    </select>

<!--    获取一个月没有下个单的客户，并且之前下过单  -->
    <select id="getMonthyNoOrderCustomers" resultMap="beanMap">
        SELECT
        *
        FROM
        customer
        WHERE
        STATUS = 1
        AND id IN (
        SELECT
        customer_id
        FROM
        customer_pack
        WHERE
        STATUS = 1
        AND DATE_SUB(curdate(), INTERVAL 30 DAY) > DATE_FORMAT(create_time, '%Y-%m-%d') GROUP BY customer_id
        )and id not in (
        SELECT
        customer_id
        FROM
        customer_pack
        WHERE
        STATUS = 1
        AND DATE_FORMAT(create_time, '%Y-%m-%d') > DATE_SUB(curdate(), INTERVAL 30 DAY) GROUP BY customer_id
        )and customer_no not in (
        select customer_no from goods where status = 1 and goods_type in (1,3) GROUP BY customer_no
        )
    </select>

    <!-- 获取所有从来没有下单的客户，包括之前发过消息的 -->
    <select id="getNoOrderCustomerBefore" resultMap="beanMap">
        SELECT
            *
        FROM
            customer
        WHERE
            STATUS = 1
        AND openid IS NOT NULL
        AND customer_no NOT IN (
            SELECT
                c.customer_no
            FROM
                goods g
            INNER JOIN customer c ON c.customer_no = g.customer_no
            WHERE
                g.`status` = 1
            AND c.`status` = 1
            GROUP BY
                c.customer_no
        )
    </select>

    <!-- 新客户赠送30元，16号到18号今天的 -->
    <select id="getCusomterToSend30" resultMap="beanMap">
        SELECT
            *
        FROM
            customer
        WHERE
            STATUS = 1
        AND openid IS NOT NULL
        AND DATE_FORMAT(create_time, '%Y-%m-%d') >= DATE_SUB(curdate(), INTERVAL 8 DAY)
        AND customer_no NOT IN (
            SELECT
                customer_no
            FROM
                wechat_message
            WHERE
                STATUS = 1
            AND type = "20211018"
        )
    </select>

    <select id="findByIdList" resultMap="beanMap">
        select <include refid="selectCols"/>
        from customer t
        <where>
            t.status = 1
            and t.id in
            <foreach collection="idList" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </select>

    <select id="selectCountByGroupId" resultType="java.lang.Integer">
        select count(t.id)
        from customer t
        left join customer_group_link cglink on cglink.customer_id = t.id and cglink.status = 1
        <where>
            t.status = 1
            and cglink.customer_group_id = #{groupId}
        </where>
    </select>

    <select id="selectByGroupId" resultMap="beanMap">
        select <include refid="selectCols"/>
        from customer t
        left join customer_group_link cglink on cglink.customer_id = t.id and cglink.status = 1
        <where>
            t.status = 1
            and cglink.customer_group_id = #{groupId}
        </where>
        <if test="pageNumber != null">
            limit #{pageNumber}, #{pageSize}
        </if>
    </select>

    <select id="getNotInGroupCustomerCount" resultType="java.lang.Integer">
        select count(t.id)
        from customer t
        <where>
            t.status = 1
            <if test="paramMap.customerName!= null and paramMap.customerName!=''">
                and t.customer_name regexp #{paramMap.customerName}
            </if>
            <if test="paramMap.gender!= null and paramMap.gender!=''">
                and t.gender=#{paramMap..gender}
            </if>
            <if test="paramMap.phoneNumber!= null and paramMap.phoneNumber!=''">
                and t.phone_number regexp #{paramMap.phoneNumber}
            </if>
            <if test="paramMap.fullAddress!= null and paramMap.fullAddress!=''">
                and t.full_address regexp #{paramMap.fullAddress}
            </if>
            <if test="paramMap.englishName!= null and paramMap.englishName!=''">
                and t.english_name regexp #{paramMap.englishName}
            </if>
            <if test="paramMap.loginName!= null and paramMap.loginName!=''">
                and t.login_name regexp #{paramMap.loginName}
            </if>

            <if test="inGroupCustomerIdList != null">
                and t.id NOT in
                <foreach collection="inGroupCustomerIdList" item="id" open="(" close=")" separator=",">
                  #{id}
                </foreach>
            </if>
        </where>
    </select>

    <select id="getNotInGroupCustomerList" resultMap="beanMap">
        select <include refid="selectCols"/>
        from customer t
        <where>
            t.status = 1
            <if test="paramMap.customerName!= null and paramMap.customerName!=''">
                and t.customer_name regexp #{paramMap.customerName}
            </if>
            <if test="paramMap.gender!= null and paramMap.gender!=''">
                and t.gender=#{paramMap..gender}
            </if>
            <if test="paramMap.phoneNumber!= null and paramMap.phoneNumber!=''">
                and t.phone_number regexp #{paramMap.phoneNumber}
            </if>
            <if test="paramMap.fullAddress!= null and paramMap.fullAddress!=''">
                and t.full_address regexp #{paramMap.fullAddress}
            </if>
            <if test="paramMap.englishName!= null and paramMap.englishName!=''">
                and t.english_name regexp #{paramMap.englishName}
            </if>
            <if test="paramMap.loginName!= null and paramMap.loginName!=''">
                and t.login_name regexp #{paramMap.loginName}
            </if>

            <if test="inGroupCustomerIdList != null">
                and t.id NOT in
                <foreach collection="inGroupCustomerIdList" item="id" open="(" close=")" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
        ORDER BY t.create_time desc
        LIMIT #{pageNumber},#{pageSize}
    </select>


    <select id="selectByCustomerIds" resultMap="beanMap">
        select <include refid="selectCols"/>
        from <include refid="table"/> t
        where t.`status` = 1
        and t.id in
        <foreach collection="customerIdList" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </select>

    <select id="selectByOpenid" parameterType="java.lang.String" resultMap="beanMap">
        select
        <include refid="selectCols"/>
        from
        <include refid="table"/> t
        where t.openid = #{openid} and t.`status` = 1
    </select>

</mapper>
